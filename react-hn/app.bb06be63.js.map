{"version":3,"sources":["webpack:///./src/Comment.js","webpack:///./src/stores/ItemStore.js","webpack:///./src/utils/storage.js","webpack:///./src/services/HNService.js","webpack:///./src/NotFound.js","webpack:///./src/UserProfile.js","webpack:///./src/PermalinkedComment.js","webpack:///./src/DisplayComment.js","webpack:///./src/DisplayListItem.js","webpack:///./src/Updates.js","webpack:///./src/StoryListItem.js","webpack:///./src/Stories.js","webpack:///./src/Settings.js","webpack:///./src/App.js","webpack:///./src/PollOption.js","webpack:///./src/utils/cancellableDebounce.js","webpack:///./src/Item.js","webpack:///./src/routes.js","webpack:///./src/Spinner.js","webpack:///./src/index.js","webpack:///./src/utils/setTitle.js","webpack:///./src/utils/buildClassName.js","webpack:///./src/utils/pluralise.js","webpack:///./src/utils/extend.js","webpack:///./src/utils/constants.js","webpack:///./src/stores/UpdatesStore.js","webpack:///./src/stores/StoryStore.js","webpack:///./src/mixins/ItemMixin.js","webpack:///./src/mixins/CommentMixin.js","webpack:///./src/stores/CommentThreadStore.js","webpack:///./src/stores/StoryCommentThreadStore.js","webpack:///./src/stores/SettingsStore.js","webpack:///./src/utils/pageCalc.js","webpack:///./src/mixins/ListItemMixin.js","webpack:///./src/Paginator.js","webpack:///./src/mixins/PageNumberMixin.js"],"names":["__webpack_require__","r","__webpack_exports__","React","require","ReactFireMixin","CommentThreadStore","default","HNService","SettingsStore","CommentMixin","cx","Comment","createClass","displayName","mixins","propTypes","id","PropTypes","number","isRequired","level","loadingSpinner","bool","threadStore","instanceOf","getDefaultProps","getInitialState","comment","componentWillMount","this","bindFirebaseRef","componentWillUnmount","clearDelayTimeout","componentDidUpdate","prevProps","prevState","state","deleted","props","commentDeleted","dead","commentDied","loading","kids","length","prevKids","adjustExpectedComments","delayed","commentAdded","commentDelayed","bindAsObject","itemRef","handleFirebaseRefCancelled","timeout","e","unbind","setTimeout","forceUpdate","clearTimeout","toggleCollapse","preventDefault","render","renderError","className","renderCommentLoading","showDead","showDeleted","renderCommentDeleted","isNew","collapsed","isCollapsed","childCounts","getChildCounts","newComments","Comment--collapsed","Comment--dead","Comment--new","createElement","renderCommentMeta","collapsible","link","renderCommentText","replyLink","map","key","setImmediate","StoryStore","UpdatesStore","commentParentLookup","titleCache","fetchCommentParent","cb","result","commentId","parentId","parent","itemCount","cacheHits","op","type","ItemStore","getItem","item","title","processCommentParent","cachedItem","getCachedItem","fetchItem","getCachedStory","getStory","fetchCommentAncestors","startTime","Date","now","timeTaken","get","defaultValue","value","window","localStorage","set","firebase","initializeApp","databaseURL","api","database","ref","once","snapshot","val","child","fetchItems","ids","items","addItem","push","forEach","storiesRef","path","userRef","updatesRef","NotFound","_ref","TimeAgo","Spinner","setTitle","size","UserProfile","user","params","componentWillUpdate","nextProps","nextState","componentWillReceiveProps","createdDate","created","_ref2","date","toDateString","_ref3","karma","_ref4","delay","about","_ref5","dangerouslySetInnerHTML","__html","withRouter","PermalinkedComment","getComment","commentLoaded","setState","router","replace","itemId","handleCommentsChanged","fetchAncestors","by","payload","index","DisplayComment","object","StoryCommentThreadStore","ItemMixin","ListItemMixin","DisplayListItem","threadState","loadState","renderListItem","Paginator","PageNumberMixin","ITEMS_PER_PAGE","pageCalc","filterDead","filterUpdates","updates","comments","filter","stories","Updates","getUpdates","start","on","handleUpdates","off","stop","isMounted","page","getPageNumber","slice","startIndex","endIndex","route","pageNum","hasNext","StoryListItem","store","initLiveItem","removeListener","updateThreadState","itemUpdated","addListener","style","marginBottom","listSpacing","Stories","limit","string","componentDidMount","handleUpdate","getState","update","dummyItems","i","renderItems","rendered","htmlFor","Settings","refs","container","focus","onChange","el","target","name","checked","save","onClick","stopPropagation","tabIndex","autoCollapse","replyLinks","min","step","titleFontSize","_ref6","Link","to","src","width","height","alt","activeClassName","href","App","showSettings","load","loadSession","addEventListener","handleBeforeUnload","removeEventListener","saveSession","toggleSettings","_ref7","_ref8","onKeyPress","_ref9","children","_ref10","pluralise","PollOption","pollopt","text","score","cancellableDebounce","func","wait","immediate","args","context","timestamp","later","last","apply","debounced","arguments","callNow","cancel","timeUnitsAgo","unit","suffix","Item","Number","cached","dispose","kidDiff","collapseThreadsWithoutNewComments","markAsRead","getButtonLabel","showCommentsAfter","showNewCommentsAfter","commentCount","howMany","timeComment","getCommentByTimeIndex","time","highlightRecentComments","highlightNewCommentsSince","_this","Item--dead","renderItemTitle","renderItemMeta","lastVisit","newCommentCount","formatter","marginTop","max","margin","verticalAlign","parts","IndexRoute","Route","_extends","Ask","Comments","Jobs","New","Show","Top","Read","component","spacing","bounceSize","bounceStyle","marginRight","react_router__WEBPACK_IMPORTED_MODULE_0__","Router","useScroll","applyRouterMiddleware","routes","history","hashHistory","document","getElementById","SITE_TITLE","buildClassName","staticClassName","conditionalClassNames","classNames","classNameKeys","Object","keys","l","join","suffixes","split","extend","dest","src1","src2","UPDATES_CACHE_SIZE","EventEmitter","updatesCache","sortByTimeDesc","a","b","populateUpdates","processCacheObj","cacheObj","arr","obj","sort","cacheObjToSortedArray","splice","Math","updateItemTypes","job","poll","story","handleUpdateItems","emit","json","sessionStorage","JSON","parse","stringify","ID_REGEXP","firebaseRef","idCache","itemCache","storyLists","populateStoryList","storyList","parseJSON","_classCallCheck","_possibleConstructorReturn","_EventEmitter","call","onStorage","bind","onStoriesUpdated","_this2","readStoryIds","test","urlParse","extraContent","itemDate","descendants","url","hasURL","fontSize","hostname","shift","options","renderCollapseControl","onCommentsChanged","deadComments","prototype","childCount","nodes","nextNodes","nodeChildren","siblings","indexOf","debounce","storage","maxCommentId","startedLoading","parents","expectedComments","itemDescendantCount","initialState","prevMaxCommentId","isFirstVisit","checkLoadCompletion","create","constructor","numberOfCommentsChanged","firstLoadComplete","_storeState","change","newCommentIds","hasNewComments","shouldCollapse","commentIds","nextCommentIds","childCommentIds","timeIndex","sortedCommentIds","referenceComment","pageSize","numItems","getNewCommentCount","ListItem--dead","_onClick","scrollTo","pathname","query","location"],"mappings":"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","file":"app.bb06be63.js","sourcesContent":["var React = require('react')\nvar ReactFireMixin = require('reactfire')\n\nvar CommentThreadStore = require('./stores/CommentThreadStore').default\nvar HNService = require('./services/HNService').default\nvar SettingsStore = require('./stores/SettingsStore').default\n\nvar CommentMixin = require('./mixins/CommentMixin').default\n\nvar cx = require('./utils/buildClassName').default\n\n/**\n * A comment in a thread.\n */\nvar Comment = React.createClass({\n  mixins: [CommentMixin, ReactFireMixin],\n\n  propTypes: {\n    id: React.PropTypes.number.isRequired,\n    level: React.PropTypes.number.isRequired,\n    loadingSpinner: React.PropTypes.bool,\n    threadStore: React.PropTypes.instanceOf(CommentThreadStore).isRequired\n  },\n\n  getDefaultProps() {\n    return {\n      loadingSpinner: false\n    }\n  },\n\n  getInitialState() {\n    return {\n      comment: {}\n    }\n  },\n\n  componentWillMount() {\n    this.bindFirebaseRef()\n  },\n\n  componentWillUnmount() {\n    this.clearDelayTimeout()\n  },\n\n  componentDidUpdate(prevProps, prevState) {\n    // Huge, fast-growing threads like https://news.ycombinator.com/item?id=9784470\n    // seem to break the API - some comments are coming back from Firebase as null.\n    if (!this.state.comment) {\n      this.props.threadStore.adjustExpectedComments(-1)\n      return\n    }\n\n    // On !prevState.comment: a comment which was initially null - see\n    // above - may eventually load when the API catches up.\n    if (!prevState.comment || !prevState.comment.id) {\n      // Register a newly-loaded comment with the thread store\n      if (this.state.comment.id) {\n        // If the comment was delayed, cancel any pending timeout\n        if (prevState.comment && prevState.comment.delayed) {\n          this.clearDelayTimeout()\n        }\n        this.props.threadStore.commentAdded(this.state.comment)\n      }\n      if (prevState.comment && !prevState.comment.delayed && this.state.comment.delayed) {\n        this.props.threadStore.commentDelayed(this.props.id)\n      }\n    }\n    // The comment was already loaded, look for changes to it\n    else {\n      if (!prevState.comment.deleted && this.state.comment.deleted) {\n        this.props.threadStore.commentDeleted(this.state.comment)\n      }\n      if (!prevState.comment.dead && this.state.comment.dead) {\n        this.props.threadStore.commentDied(this.state.comment)\n      }\n      // If the comment has been updated and the initial set of comments is\n      // still loading, the number of expected comments might need to be\n      // adjusted.\n      else if (prevState.comment !== this.state.comment &&\n               this.props.threadStore.loading) {\n        var kids = (this.state.comment.kids ? this.state.comment.kids.length : 0)\n        var prevKids = (prevState.comment.kids ? prevState.comment.kids.length : 0)\n        this.props.threadStore.adjustExpectedComments(kids - prevKids)\n      }\n    }\n  },\n\n  bindFirebaseRef() {\n    this.bindAsObject(HNService.itemRef(this.props.id), 'comment', this.handleFirebaseRefCancelled)\n    if (this.timeout) {\n      this.timeout = null\n    }\n  },\n\n  /**\n   * This is usually caused by a permissions error loading the comment due to\n   * its author using the delay setting (note: this is conjecture), which is\n   * measured in minutes - try again in 30 seconds.\n   */\n  handleFirebaseRefCancelled(e) {\n    if (process.env.NODE_ENV !== 'production') {\n      console.error('Firebase ref for comment ' + this.props.id + ' was cancelled: ' + e.message)\n    }\n    this.unbind('comment')\n    this.timeout = setTimeout(this.bindFirebaseRef, 30000)\n    if (this.state.comment && !this.state.comment.delayed) {\n      this.state.comment.delayed = true\n      this.forceUpdate()\n    }\n  },\n\n  clearDelayTimeout() {\n    if (this.timeout) {\n      clearTimeout(this.timeout)\n      this.timeout = null\n    }\n  },\n\n  toggleCollapse(e) {\n    e.preventDefault()\n    this.props.threadStore.toggleCollapse(this.state.comment.id)\n  },\n\n  render() {\n    var comment = this.state.comment\n    var props = this.props\n    if (!comment) {\n      return this.renderError(comment, {\n        id: this.props.id,\n        className: 'Comment Comment--error Comment--level' + props.level\n      })\n    }\n    // Render a placeholder while we're waiting for the comment to load\n    if (!comment.id) { return this.renderCommentLoading(comment) }\n    // Don't show dead coments or their children, when configured\n    if (comment.dead && !SettingsStore.showDead) { return null }\n    // Render a link to HN for deleted comments if they're being displayed\n    if (comment.deleted) {\n      if (!SettingsStore.showDeleted) { return null }\n      return this.renderCommentDeleted(comment, {\n        className: 'Comment Comment--deleted Comment--level' + props.level\n      })\n    }\n\n    var isNew = props.threadStore.isNew[comment.id]\n    var collapsed = !!props.threadStore.isCollapsed[comment.id]\n    var childCounts = (collapsed && props.threadStore.getChildCounts(comment))\n    if (collapsed && isNew) { childCounts.newComments = 0 }\n    var className = cx('Comment Comment--level' + props.level, {\n      'Comment--collapsed': collapsed,\n      'Comment--dead': comment.dead,\n      'Comment--new': isNew\n    })\n\n    return <div className={className}>\n      <div className=\"Comment__content\">\n        {this.renderCommentMeta(comment, {\n          collapsible: true,\n          collapsed: collapsed,\n          link: true,\n          childCounts: childCounts\n        })}\n        {this.renderCommentText(comment, {replyLink: true})}\n      </div>\n      {comment.kids && <div className=\"Comment__kids\">\n        {comment.kids.map(function(id) {\n          return <Comment key={id} id={id}\n            level={props.level + 1}\n            loadingSpinner={props.loadingSpinner}\n            threadStore={props.threadStore}\n          />\n        })}\n      </div>}\n    </div>\n  }\n})\n\nexport default Comment\n","var HNService = require('../services/HNService').default\n\nvar StoryStore = require('./StoryStore').default\nvar UpdatesStore = require('./UpdatesStore').default\nvar commentParentLookup = {}\nvar titleCache = {}\n\nfunction fetchCommentParent(comment, cb, result) {\n  var commentId = comment.id\n  var parentId = comment.parent\n\n  while (commentParentLookup[parentId] || titleCache[parentId]) {\n    // We just saved ourselves an item fetch\n    result.itemCount++\n    result.cacheHits++\n\n    // The parent is a known non-comment\n    if (titleCache[parentId]) {\n      if (result.itemCount === 1) { result.parent = titleCache[parentId] }\n      result.op = titleCache[parentId]\n      cb(result)\n      return\n    }\n\n    // The parent is a known comment\n    if (commentParentLookup[parentId]) {\n      if (result.itemCount === 1) { result.parent = {id: parentId, type: 'comment'} }\n      // Set the parent comment's ids up for the next iteration\n      commentId = parentId\n      parentId = commentParentLookup[parentId]\n    }\n  }\n\n  // The parent of the current comment isn't known, so we'll have to fetch it\n  ItemStore.getItem(parentId, function(parent) {\n    result.itemCount++\n    // Add the current comment's parent to the lookup for next time\n    commentParentLookup[commentId] = parentId\n    if (parent.type === 'comment') {\n      commentParentLookup[parent.id] = parent.parent\n    }\n    processCommentParent(parent, cb, result)\n  }, result)\n}\n\nfunction processCommentParent(item, cb, result) {\n  if (result.itemCount === 1) {\n    result.parent = item\n  }\n  if (item.type !== 'comment') {\n    result.op = item\n    titleCache[item.id] = {\n      id: item.id,\n      type: item.type,\n      title: item.title\n    }\n    cb(result)\n  }\n  else {\n    fetchCommentParent(item, cb, result)\n  }\n}\n\nvar ItemStore = {\n  getItem(id, cb, result) {\n    var cachedItem = this.getCachedItem(id)\n    if (cachedItem) {\n      if (result) {\n        result.cacheHits++\n      }\n      setImmediate(cb, cachedItem)\n    }\n    else {\n      HNService.fetchItem(id, cb)\n    }\n  },\n\n  getCachedItem(id) {\n    return StoryStore.getItem(id) || UpdatesStore.getItem(id) || null\n  },\n\n  getCachedStory(id) {\n    return StoryStore.getItem(id) || UpdatesStore.getStory(id) || null\n  },\n\n  fetchCommentAncestors(comment, cb) {\n    var startTime = Date.now()\n    var result = {itemCount: 0, cacheHits: 0}\n    fetchCommentParent(comment, function() {\n      result.timeTaken = Date.now() - startTime\n      setImmediate(cb, result)\n    }, result)\n  }\n}\n\nexport default ItemStore\n","export default {\n  get(key, defaultValue) {\n    var value = window.localStorage[key]\n    return (typeof value != 'undefined' ? value : defaultValue)\n  },\n  set(key, value) {\n    window.localStorage[key] = value\n  }\n}\n","var firebase = require('firebase/app')\nrequire('firebase/database')\n\nvar config = {\n  databaseURL: 'https://hacker-news.firebaseio.com'\n}\nfirebase.initializeApp(config)\nvar version = '/v0'\nvar api = firebase.database().ref(version)\n\n// https://firebase.google.com/support/guides/firebase-web\n\nfunction fetchItem(id, cb) {\n  itemRef(id).once('value', function(snapshot) {\n    cb(snapshot.val())\n  })\n}\n\nfunction fetchItems(ids, cb) {\n  var items = []\n  ids.forEach(function(id) {\n    fetchItem(id, addItem)\n  })\n  function addItem(item) {\n    items.push(item)\n    if (items.length >= ids.length) {\n      cb(items)\n    }\n  }\n}\n\nfunction storiesRef(path) {\n  return api.child(path)\n}\n\nfunction itemRef(id) {\n  return api.child('item/' + id)\n}\n\nfunction userRef(id) {\n  return api.child('user/' + id)\n}\n\nfunction updatesRef() {\n  return api.child('updates/items')\n}\n\nexport default {\n  fetchItem,\n  fetchItems,\n  storiesRef,\n  itemRef,\n  userRef,\n  updatesRef\n}\n","var React = require('react')\n\nvar NotFound = React.createClass({\n  render() {\n    return <h2>Not found</h2>\n  }\n})\n\nexport default NotFound\n","var React = require('react')\nvar ReactFireMixin = require('reactfire')\nvar TimeAgo = require('react-timeago').default\n\nvar HNService = require('./services/HNService').default\n\nvar Spinner = require('./Spinner').default\n\nvar setTitle = require('./utils/setTitle').default\n\n// TODO User submissions\n\n// TODO User comments\n\nvar UserProfile = React.createClass({\n  mixins: [ReactFireMixin],\n  getInitialState() {\n    return {user: {}}\n  },\n\n  componentWillMount() {\n    this.bindAsObject(HNService.userRef(this.props.params.id), 'user')\n  },\n\n  componentWillUpdate(nextProps, nextState) {\n    if (this.state.user.id !== nextState.user.id) {\n      setTitle('Profile: ' + nextState.user.id)\n    }\n  },\n\n  componentWillReceiveProps(nextProps) {\n    if (this.props.params.id !== nextProps.params.id) {\n      this.unbind('user')\n      this.bindAsObject(HNService.userRef(nextProps.params.id), 'user')\n    }\n  },\n\n  render() {\n    var user = this.state.user\n    if (!user.id) {\n      return <div className=\"UserProfile UserProfile--loading\">\n        <h4>{this.props.params.id}</h4>\n        <Spinner size=\"20\"/>\n      </div>\n    }\n    var createdDate = new Date(user.created * 1000)\n    return <div className=\"UserProfile\">\n      <h4>{user.id}</h4>\n      <dl>\n        <dt>Created</dt>\n        <dd><TimeAgo date={createdDate}/> ({createdDate.toDateString()})</dd>\n        <dt>Karma</dt>\n        <dd>{user.karma}</dd>\n        <dt>Delay</dt>\n        <dd>{user.delay}</dd>\n        {user.about && <dt>About</dt>}\n        {user.about && <dd><div className=\"UserProfile__about\" dangerouslySetInnerHTML={{__html: user.about}}/></dd>}\n      </dl>\n    </div>\n  }\n})\n\nexport default UserProfile\n","var React = require('react')\nvar ReactFireMixin = require('reactfire')\nvar withRouter = require('react-router/lib/withRouter')\n\nvar CommentThreadStore = require('./stores/CommentThreadStore').default\nvar HNService = require('./services/HNService').default\nvar SettingsStore = require('./stores/SettingsStore').default\nvar UpdatesStore = require('./stores/UpdatesStore').default\n\nvar Comment = require('./Comment').default\nvar CommentMixin = require('./mixins/CommentMixin').default\n\nvar cx = require('./utils/buildClassName').default\nvar setTitle = require('./utils/setTitle').default\n\nvar PermalinkedComment = React.createClass({\n  mixins: [CommentMixin, ReactFireMixin],\n\n  getDefaultProps() {\n    return {\n      level: 0,\n      loadingSpinner: true\n    }\n  },\n\n  getInitialState() {\n    return {\n      comment: UpdatesStore.getComment(this.props.params.id) || {},\n      parent: {type: 'comment'},\n      op: {}\n    }\n  },\n\n  componentWillMount() {\n    this.bindAsObject(HNService.itemRef(this.props.params.id), 'comment')\n    if (this.state.comment.id) {\n      this.commentLoaded(this.state.comment)\n    }\n  },\n\n  componentWillReceiveProps(nextProps) {\n    if (nextProps.params.id !== this.props.params.id) {\n      var comment = UpdatesStore.getComment(nextProps.params.id)\n      if (comment) {\n        this.commentLoaded(comment)\n        this.setState({comment: comment})\n      }\n      this.unbind('comment')\n      this.bindAsObject(HNService.itemRef(nextProps.params.id), 'comment')\n    }\n  },\n\n  componentWillUpdate(nextProps, nextState) {\n    if (!nextState.comment) {\n      return\n    }\n\n    if (this.state.comment.id !== nextState.comment.id) {\n      if (!nextState.comment.deleted) {\n        // Redirect to the appropriate route if a Comment \"parent\" link had a\n        // non-comment item id.\n        if (nextState.comment.type !== 'comment') {\n          this.props.router.replace(`/${nextState.comment.type}/${nextState.comment.id}`)\n          return\n        }\n      }\n      if (!this.threadStore || this.threadStore.itemId !== nextState.comment.id) {\n        this.commentLoaded(nextState.comment)\n      }\n    }\n  },\n\n  commentLoaded(comment) {\n    this.setTitle(comment)\n    if (!comment.deleted) {\n      this.threadStore = new CommentThreadStore(comment, this.handleCommentsChanged)\n      this.fetchAncestors(comment)\n    }\n  },\n\n  setTitle(comment) {\n    if (comment.deleted) {\n      return setTitle('Deleted comment')\n    }\n    var title = 'Comment by ' + comment.by\n    if (this.state.op.id) {\n      title += ' | ' + this.state.op.title\n    }\n    setTitle(title)\n  },\n\n  handleCommentsChanged(payload) {\n    // We're only interested in re-rendering to update collapsed display\n    if (payload.type === 'collapse') {\n      this.forceUpdate()\n    }\n  },\n\n  render() {\n    var comment = this.state.comment\n    if (!comment) {\n      return this.renderError(comment, {\n        id: this.props.params.id,\n        className: 'Comment Comment--level0 Comment--error'\n      })\n    }\n    // Render a placeholder while we're waiting for the comment to load\n    if (!comment.id) { return this.renderCommentLoading(comment) }\n    // Render a link to HN for deleted comments\n    if (comment.deleted) {\n      return this.renderCommentDeleted(comment, {\n        className: 'Comment Comment--level0 Comment--deleted'\n      })\n    }\n    // XXX Don't render anything if we're replacing the route after loading a non-comment\n    if (comment.type !== 'comment') { return null }\n\n    var className = cx('PermalinkedComment Comment Comment--level0', {'Comment--dead': comment.dead})\n    var threadStore = this.threadStore\n\n    return <div className={className}>\n      <div className=\"Comment__content\">\n        {this.renderCommentMeta(comment, {\n          parent: !!this.state.parent.id && !!this.state.op.id && comment.parent !== this.state.op.id,\n          op: !!this.state.op.id\n        })}\n        {(!comment.dead || SettingsStore.showDead) && this.renderCommentText(comment, {replyLink: true})}\n      </div>\n      {comment.kids && <div className=\"Comment__kids\">\n        {comment.kids.map(function(id, index) {\n          return <Comment key={id} id={id}\n            level={0}\n            loadingSpinner={index === 0}\n            threadStore={threadStore}\n          />\n        })}\n      </div>}\n    </div>\n  }\n})\n\nexport default withRouter(PermalinkedComment)\n","var React = require('react')\n\nvar SettingsStore = require('./stores/SettingsStore').default\n\nvar CommentMixin = require('./mixins/CommentMixin').default\n\nvar cx = require('./utils/buildClassName').default\n\n/**\n * Displays a standalone comment passed as a prop.\n */\nvar DisplayComment = React.createClass({\n  mixins: [CommentMixin],\n\n  propTypes: {\n    comment: React.PropTypes.object.isRequired\n  },\n\n  getInitialState() {\n    return {\n      op: {},\n      parent: {type: 'comment'}\n    }\n  },\n\n  componentWillMount() {\n    this.fetchAncestors(this.props.comment)\n  },\n\n  render() {\n    if (this.props.comment.deleted) { return null }\n    if (this.props.comment.dead && !SettingsStore.showDead) { return null }\n\n    var comment = this.props.comment\n    var className = cx('Comment Comment--level0', {\n      'Comment--dead': comment.dead\n    })\n\n    return <div className={className}>\n      <div className=\"Comment__content\">\n        {this.renderCommentMeta(comment, {\n          link: true,\n          parent: !!this.state.parent.id && !!this.state.op.id && comment.parent !== this.state.op.id,\n          op: !!this.state.op.id\n        })}\n        {this.renderCommentText(comment, {replyLink: false})}\n      </div>\n    </div>\n  }\n})\n\nexport default DisplayComment\n","var React = require('react')\n\nvar StoryCommentThreadStore = require('./stores/StoryCommentThreadStore').default\n\nvar ItemMixin = require('./mixins/ItemMixin').default\nvar ListItemMixin = require('./mixins/ListItemMixin').default\n\n/**\n * Display story title and metadata as a list item.\n * The story to display will be passed as a prop.\n */\nvar DisplayListItem = React.createClass({\n  mixins: [ItemMixin, ListItemMixin],\n\n  propTypes: {\n    item: React.PropTypes.object.isRequired\n  },\n\n  componentWillMount() {\n    this.threadState = StoryCommentThreadStore.loadState(this.props.item.id)\n  },\n\n  render() {\n    return this.renderListItem(this.props.item, this.threadState)\n  }\n})\n\nexport default DisplayListItem\n","var React = require('react')\n\nvar SettingsStore = require('./stores/SettingsStore').default\nvar UpdatesStore = require('./stores/UpdatesStore').default\n\nvar DisplayListItem = require('./DisplayListItem').default\nvar DisplayComment = require('./DisplayComment').default\nvar Paginator = require('./Paginator').default\nvar Spinner = require('./Spinner').default\n\nvar PageNumberMixin = require('./mixins/PageNumberMixin').default\n\nvar {ITEMS_PER_PAGE} = require('./utils/constants').default\nvar pageCalc = require('./utils/pageCalc').default\nvar setTitle = require('./utils/setTitle').default\n\nfunction filterDead(item) {\n  return !item.dead\n}\n\nfunction filterUpdates(updates) {\n  if (!SettingsStore.showDead) {\n    return {\n      comments: updates.comments.filter(filterDead),\n      stories: updates.stories.filter(filterDead)\n    }\n  }\n  return updates\n}\n\nvar Updates = React.createClass({\n  mixins: [PageNumberMixin],\n\n  getInitialState() {\n    return filterUpdates(UpdatesStore.getUpdates())\n  },\n\n  componentWillMount() {\n    this.setTitle(this.props.type)\n    UpdatesStore.start()\n    UpdatesStore.on('updates', this.handleUpdates)\n  },\n\n  componentWillUnmount() {\n    UpdatesStore.off('updates', this.handleUpdates)\n    UpdatesStore.stop()\n  },\n\n  componentWillReceiveProps(nextProps) {\n    if (this.props.type !== nextProps.type) {\n      this.setTitle(nextProps.type)\n    }\n  },\n\n  setTitle(type) {\n    setTitle('New ' + (type === 'comments' ? 'Comments' : 'Links'))\n  },\n\n  handleUpdates(updates) {\n    if (!this.isMounted()) {\n      if (process.env.NODE_ENV !== 'production') {\n        console.warn('Skipping update of ' + this.props.type + ' as the Updates component is not mounted')\n      }\n      return\n    }\n    this.setState(filterUpdates(updates))\n  },\n\n  render() {\n    var items = (this.props.type === 'comments' ? this.state.comments : this.state.stories)\n    if (items.length === 0) {\n      return <div className=\"Updates Updates--loading\"><Spinner size=\"20\"/></div>\n    }\n\n    var page = pageCalc(this.getPageNumber(), ITEMS_PER_PAGE, items.length)\n\n    if (this.props.type === 'comments') {\n      return <div className=\"Updates Comments\">\n        {items.slice(page.startIndex, page.endIndex).map(function(comment) {\n          return <DisplayComment key={comment.id} id={comment.id} comment={comment}/>\n        })}\n        <Paginator route=\"newcomments\" page={page.pageNum} hasNext={page.hasNext}/>\n      </div>\n    }\n    else {\n      return <div className=\"Updates Items\">\n        <ol className=\"Items__list\" start={page.startIndex + 1}>\n          {items.slice(page.startIndex, page.endIndex).map(function(item) {\n            return <DisplayListItem key={item.id} item={item}/>\n          })}\n        </ol>\n        <Paginator route=\"newest\" page={page.pageNum} hasNext={page.hasNext}/>\n      </div>\n    }\n  }\n})\n\nexport default Updates\n","var React = require('react')\nvar ReactFireMixin = require('reactfire')\n\nvar StoryCommentThreadStore = require('./stores/StoryCommentThreadStore').default\nvar HNService = require('./services/HNService').default\nvar SettingsStore = require('./stores/SettingsStore').default\nvar StoryStore = require('./stores/StoryStore').default\n\nvar ItemMixin = require('./mixins/ItemMixin').default\nvar ListItemMixin = require('./mixins/ListItemMixin').default\nvar Spinner = require('./Spinner').default\n\n/**\n * Display story title and metadata as as a list item.\n * Cached story data may be given as a prop, but this component is also\n * responsible for listening to updates to the story and providing the latest\n * version for StoryStore's cache.\n */\nvar StoryListItem = React.createClass({\n  mixins: [ItemMixin, ListItemMixin, ReactFireMixin],\n\n  propTypes: {\n    // The StoryStore handling caching and updates to the stories being displayed\n    store: React.PropTypes.instanceOf(StoryStore).isRequired,\n\n    // The story's id in Hacker News\n    id: React.PropTypes.number,\n    // A version of the story from the cache, for initial display\n    cachedItem: React.PropTypes.object,\n    // The current index of the story in the list being displayed\n    index: React.PropTypes.number\n  },\n\n  getDefaultProps() {\n    return {\n      id: null,\n      cachedItem: null,\n      index: null\n    }\n  },\n\n  getInitialState() {\n    return {\n      item: this.props.cachedItem || {}\n    }\n  },\n\n  componentWillMount() {\n    if (this.props.id != null) {\n      this.initLiveItem(this.props)\n    }\n    else if (this.props.cachedItem != null) {\n      // Display the comment state of the cached item we were given while we're\n      // waiting for the live item to load.\n      this.threadState = StoryCommentThreadStore.loadState(this.state.item.id)\n    }\n  },\n\n  componentWillUnmount() {\n    if (this.props.id != null) {\n      this.props.store.removeListener(this.props.id, this.updateThreadState)\n    }\n  },\n\n  /**\n   * Catch the transition from not having an id prop to having one.\n   * Scenario: we were waiting for the initial list of story ids to load.\n   */\n  componentWillReceiveProps(nextProps) {\n    if (this.props.id == null && nextProps.id != null) {\n      this.initLiveItem(nextProps)\n    }\n  },\n\n  /**\n   * If the live item has been loaded or updated, update the StoryStore cache\n   * with its current index and latest data.\n   */\n  componentWillUpdate(nextProps, nextState) {\n    if (this.state.item !== nextState.item) {\n      if (nextState.item != null) {\n        this.props.store.itemUpdated(nextState.item, this.props.index)\n      }\n      else {\n        if (process.env.NODE_ENV !== 'production') {\n          console.warn(`Item ${this.props.id} went from ${JSON.stringify(this.state.item)} to ${nextProps.item}`)\n        }\n      }\n    }\n  },\n\n  /**\n   * Initialise listening to updates for the item with the given id and\n   * initialise its comment thread state.\n   */\n  initLiveItem(props) {\n    // If we were given a cached item to display initially, it will be replaced\n    this.bindAsObject(HNService.itemRef(props.id), 'item')\n\n    this.threadState = StoryCommentThreadStore.loadState(props.id)\n    this.props.store.addListener(props.id, this.updateThreadState)\n  },\n\n  /**\n   * Update thread state in response to a storage event indicating it has been\n   * modified.\n   */\n  updateThreadState() {\n    this.threadState = StoryCommentThreadStore.loadState(this.props.id)\n    this.forceUpdate()\n  },\n\n  render() {\n    // Display the loading spinner if we have nothing to show initially\n    if (!this.state.item || !this.state.item.id) {\n      return <li className=\"ListItem ListItem--loading\" style={{marginBottom: SettingsStore.listSpacing}}>\n        <Spinner/>\n      </li>\n    }\n\n    return this.renderListItem(this.state.item, this.threadState)\n  }\n})\n\nexport default StoryListItem\n","var React = require('react')\n\nvar StoryStore = require('./stores/StoryStore').default\n\nvar PageNumberMixin = require('./mixins/PageNumberMixin').default\nvar Paginator = require('./Paginator').default\nvar Spinner = require('./Spinner').default\nvar StoryListItem = require('./StoryListItem').default\nvar SettingsStore = require('./stores/SettingsStore').default\n\nvar {ITEMS_PER_PAGE} = require('./utils/constants').default\nvar pageCalc = require('./utils/pageCalc').default\nvar setTitle = require('./utils/setTitle').default\n\nvar Stories = React.createClass({\n  mixins: [PageNumberMixin],\n\n  propTypes: {\n    // The number of stories which may be paginated through\n    limit: React.PropTypes.number.isRequired,\n    // The route name being used\n    route: React.PropTypes.string.isRequired,\n    // The type of stories to be displayed\n    type: React.PropTypes.string.isRequired,\n\n    // Page title associated with the stories being displayed\n    title: React.PropTypes.string\n  },\n\n  getInitialState() {\n    return {\n      ids: null,\n      limit: this.props.limit,\n      stories: []\n    }\n  },\n\n  componentDidMount() {\n    setTitle(this.props.title)\n    this.store = new StoryStore(this.props.type)\n    this.store.addListener('update', this.handleUpdate)\n    this.store.start()\n    this.setState(this.store.getState())\n  },\n\n  componentWillUnmount() {\n    this.store.removeListener('update', this.handleUpdate)\n    this.store.stop()\n    this.store = null\n  },\n\n  handleUpdate(update) {\n    if (!this.isMounted()) {\n      if (process.env.NODE_ENV !== 'production') {\n        console.warn(\n          `Skipping update as the ${this.props.type} Stories component is no longer mounted.`\n        )\n      }\n      return\n    }\n    update.limit = update.ids.length\n    this.setState(update)\n  },\n\n  render() {\n    var page = pageCalc(this.getPageNumber(), ITEMS_PER_PAGE, this.state.limit)\n\n    // Special case for the Read Stories page, as its ids are read from\n    // localStorage and there might not be any yet.\n    if (this.props.type === 'read') {\n      if (this.state.ids == null) {\n        return <div className=\"Items\"></div>\n      }\n      if (this.state.ids.length === 0) {\n        return <div className=\"Items\">\n          <p>There are no previously read stories to display.</p>\n        </div>\n      }\n    }\n\n    // Display a list of placeholder items while we're waiting for the initial\n    // list of story ids to load from Firebase.\n    if (this.state.ids == null) {\n      var dummyItems = []\n      for (var i = page.startIndex; i < page.endIndex; i++) {\n        dummyItems.push(\n          <li key={i} className=\"ListItem ListItem--loading\" style={{marginBottom: SettingsStore.listSpacing}}>\n            <Spinner/>\n          </li>\n        )\n      }\n      return <div className=\"Items Items--loading\">\n        <ol className=\"Items__list\" start={page.startIndex + 1}>{dummyItems}</ol>\n        <Paginator route={this.props.route} page={page.pageNum} hasNext={page.hasNext}/>\n      </div>\n    }\n\n    return <div className=\"Items\">\n      <ol className=\"Items__list\" start={page.startIndex + 1}>\n        {this.renderItems(page.startIndex, page.endIndex)}\n      </ol>\n      <Paginator route={this.props.route} page={page.pageNum} hasNext={page.hasNext}/>\n    </div>\n  },\n\n  renderItems(startIndex, endIndex) {\n    var rendered = []\n    for (var i = startIndex; i < endIndex; i++) {\n      var item = this.state.stories[i]\n      var id = this.state.ids[i]\n      if (id) {\n        rendered.push(<StoryListItem key={id} id={id} index={i} cachedItem={item} store={this.store}/>)\n      }\n      else {\n        rendered.push(<StoryListItem key={i} cachedItem={item} store={this.store}/>)\n      }\n    }\n    return rendered\n  }\n})\n\nexport default Stories\n","var React = require('react')\n\nvar SettingsStore = require('./stores/SettingsStore').default\n\nvar Settings = React.createClass({\n  componentDidMount() {\n    this.refs.container.focus()\n  },\n\n  onChange(e) {\n    var el = e.target\n    if (el.type === 'checkbox') {\n      SettingsStore[el.name] = el.checked\n    }\n    else if (el.type === 'number' && el.value) {\n      SettingsStore[el.name] = el.value\n    }\n    this.forceUpdate()\n    SettingsStore.save()\n  },\n\n  onClick(e) {\n    e.stopPropagation()\n  },\n\n  render() {\n    return <div ref=\"container\" className=\"Settings\" tabIndex=\"-1\" onClick={this.onClick}>\n      <form onChange={this.onChange}>\n        <div className=\"Settings__setting Settings__setting--checkbox\">\n          <label htmlFor=\"autoCollapse\">\n            <input type=\"checkbox\" name=\"autoCollapse\" id=\"autoCollapse\" checked={SettingsStore.autoCollapse}/> auto collapse\n          </label>\n          <p>Automatically collapse comment threads without new comments on page load.</p>\n        </div>\n        <div className=\"Settings__setting Settings__setting--checkbox\">\n          <label htmlFor=\"replyLinks\">\n            <input type=\"checkbox\" name=\"replyLinks\" id=\"replyLinks\" checked={SettingsStore.replyLinks}/> show reply links\n          </label>\n          <p>Show \"reply\" links to Hacker News</p>\n        </div>\n        <div className=\"Settings__setting Settings__setting--checkbox\">\n          <label htmlFor=\"showDead\">\n            <input type=\"checkbox\" name=\"showDead\" id=\"showDead\" checked={SettingsStore.showDead}/> show dead\n          </label>\n          <p>Show items flagged as dead.</p>\n        </div>\n        <div className=\"Settings__setting Settings__setting--checkbox\">\n          <label htmlFor=\"showDeleted\">\n            <input type=\"checkbox\" name=\"showDeleted\" id=\"showDeleted\" checked={SettingsStore.showDeleted}/> show deleted\n          </label>\n          <p>Show comments flagged as deleted in threads.</p>\n        </div>\n        <div className=\"Settings__setting\">\n          <table>\n            <tbody>\n              <tr>\n                <td><label htmlFor=\"titleFontSize\">title font size:</label></td>\n                <td><input type=\"number\" min=\"14\" step=\"1\" name=\"titleFontSize\" id=\"titleFontSize\" value={SettingsStore.titleFontSize}/></td>\n              </tr>\n              <tr>\n                <td><label htmlFor=\"listSpacing\">list spacing:</label></td>\n                <td><input type=\"number\" min=\"0\" name=\"listSpacing\" id=\"listSpacing\" value={SettingsStore.listSpacing}/></td>\n              </tr>\n            </tbody>\n          </table>\n        </div>\n      </form>\n    </div>\n  }\n})\n\nexport default Settings\n","/* global __VERSION__ */\nvar React = require('react')\nvar Link = require('react-router/lib/Link')\n\nvar Settings = require('./Settings').default\n\nvar StoryStore = require('./stores/StoryStore').default\nvar UpdatesStore = require('./stores/UpdatesStore').default\nvar SettingsStore = require('./stores/SettingsStore').default\n\nvar App = React.createClass({\n  getInitialState() {\n    return {\n      showSettings: false\n    }\n  },\n\n  componentWillMount() {\n    SettingsStore.load()\n    StoryStore.loadSession()\n    UpdatesStore.loadSession()\n    window.addEventListener('beforeunload', this.handleBeforeUnload)\n  },\n\n  componentWillUnmount() {\n    window.removeEventListener('beforeunload', this.handleBeforeUnload)\n  },\n\n  /**\n   * Give stores a chance to persist data to sessionStorage in case this is a\n   * refresh or an external link in the same tab.\n   */\n  handleBeforeUnload() {\n    StoryStore.saveSession()\n    UpdatesStore.saveSession()\n  },\n\n  toggleSettings(e) {\n    e.preventDefault()\n    this.setState({showSettings: !this.state.showSettings})\n  },\n\n  render() {\n    return <div className=\"App\" onClick={this.state.showSettings && this.toggleSettings}>\n      <div className=\"App__wrap\">\n        <div className=\"App__header\">\n          <Link to=\"/news\" className=\"App__homelinkicon\"><img src=\"img/logo.png\" width=\"16\" height=\"16\" alt=\"\" /></Link>{' '}\n          <Link to=\"/news\" activeClassName=\"active\" className=\"App__homelink\">React HN</Link>{' '}\n          <Link to=\"/newest\" activeClassName=\"active\">new</Link>{' | '}\n          <Link to=\"/newcomments\" activeClassName=\"active\">comments</Link> {' | '}\n          <Link to=\"/show\" activeClassName=\"active\">show</Link>{' | '}\n          <Link to=\"/ask\" activeClassName=\"active\">ask</Link>{' | '}\n          <Link to=\"/jobs\" activeClassName=\"active\">jobs</Link>{' | '}\n          <Link to=\"/read\" activeClassName=\"active\">read</Link>\n          <a className=\"App__settings\" tabIndex=\"0\" onClick={this.toggleSettings} onKeyPress={this.toggleSettings}>\n            {this.state.showSettings ? 'hide settings' : 'settings'}\n          </a>\n          {this.state.showSettings && <Settings key=\"settings\"/>}\n        </div>\n        <div className=\"App__content\">\n          {this.props.children}\n        </div>\n        <div className=\"App__footer\">\n          {`react-hn v${__VERSION__} | `}\n          <a href=\"https://github.com/insin/react-hn\">insin/react-hn</a>\n        </div>\n      </div>\n    </div>\n  }\n})\n\nexport default App\n","var React = require('react')\nvar ReactFireMixin = require('reactfire')\n\nvar HNService = require('./services/HNService').default\n\nvar Spinner = require('./Spinner').default\n\nvar pluralise = require('./utils/pluralise').default\n\nvar PollOption = React.createClass({\n  mixins: [ReactFireMixin],\n\n  getInitialState() {\n    return {pollopt: {}}\n  },\n\n  componentWillMount() {\n    this.bindAsObject(HNService.itemRef(this.props.id), 'pollopt')\n  },\n\n  render() {\n    var pollopt = this.state.pollopt\n    if (!pollopt.id) { return <div className=\"PollOption PollOption--loading\"><Spinner size=\"20\"/></div> }\n    return <div className=\"PollOption\">\n      <div className=\"PollOption__text\">\n        {pollopt.text}\n      </div>\n      <div className=\"PollOption__score\">\n        {pollopt.score} point{pluralise(pollopt.score)}\n      </div>\n    </div>\n  }\n})\n\nexport default PollOption\n","/**\n * Based on the implementation of _.debounce() from Underscore.js 1.7.0\n * http://underscorejs.org\n * (c) 2009-2014 Jeremy Ashkenas, DocumentCloud and Investigative Reporters & Editors\n * Distributed under the MIT license.\n *\n * Returns a function, that, as long as it continues to be invoked, will not\n * be triggered. The function will be called after it stops being called for\n * N milliseconds. If `immediate` is passed, trigger the function on the\n * leading edge, instead of the trailing.\n *\n * The returned function has a .cancel() function which can be used to prevent\n * the debounced functiom being called.\n */\nfunction cancellableDebounce(func, wait, immediate) {\n  var timeout, args, context, timestamp, result\n\n  var later = function() {\n    var last = Date.now() - timestamp\n    if (last < wait && last > 0) {\n      timeout = setTimeout(later, wait - last)\n    }\n    else {\n      timeout = null\n      if (!immediate) {\n        result = func.apply(context, args)\n        if (!timeout) {\n          context = args = null\n        }\n      }\n    }\n  }\n\n  var debounced = function() {\n    context = this\n    args = arguments\n    timestamp = Date.now()\n    var callNow = immediate && !timeout\n    if (!timeout) {\n      timeout = setTimeout(later, wait)\n    }\n    if (callNow) {\n      result = func.apply(context, args)\n      context = args = null\n    }\n    return result\n  }\n\n  debounced.cancel = function() {\n    if (timeout) {\n      clearTimeout(timeout)\n    }\n  }\n\n  return debounced\n}\n\nexport default cancellableDebounce\n","var React = require('react')\nvar ReactFireMixin = require('reactfire')\nvar TimeAgo = require('react-timeago').default\n\nvar HNService = require('./services/HNService').default\nvar StoryCommentThreadStore = require('./stores/StoryCommentThreadStore').default\nvar ItemStore = require('./stores/ItemStore').default\n\nvar Comment = require('./Comment').default\nvar PollOption = require('./PollOption').default\nvar Spinner = require('./Spinner').default\nvar ItemMixin = require('./mixins/ItemMixin').default\n\nvar cx = require('./utils/buildClassName').default\nvar setTitle = require('./utils/setTitle').default\nvar pluralise = require('./utils/pluralise').default\n\nfunction timeUnitsAgo(value, unit, suffix) {\n  if (value === 1) {\n    return unit\n  }\n  return `${value} ${unit}s`\n}\n\nvar Item = React.createClass({\n  mixins: [ItemMixin, ReactFireMixin],\n\n  getInitialState() {\n    return {\n      item: ItemStore.getCachedStory(Number(this.props.params.id)) || {}\n    }\n  },\n\n  componentWillMount() {\n    this.bindAsObject(HNService.itemRef(this.props.params.id), 'item')\n\n    if (this.state.item.id) {\n      this.threadStore = new StoryCommentThreadStore(this.state.item, this.handleCommentsChanged, {cached: true})\n      setTitle(this.state.item.title)\n    }\n    window.addEventListener('beforeunload', this.handleBeforeUnload)\n  },\n\n  componentWillUnmount() {\n    if (this.threadStore) {\n      this.threadStore.dispose()\n    }\n    window.removeEventListener('beforeunload', this.handleBeforeUnload)\n  },\n\n  componentWillReceiveProps(nextProps) {\n    if (this.props.params.id !== nextProps.params.id) {\n      // Tear it down...\n      this.threadStore.dispose()\n      this.threadStore = null\n      this.unbind('item')\n      // ...and set it up again\n      var item = ItemStore.getCachedStory(Number(nextProps.params.id))\n      if (item) {\n        this.threadStore = new StoryCommentThreadStore(item, this.handleCommentsChanged, {cached: true})\n        setTitle(item.title)\n      }\n\n      this.bindAsObject(HNService.itemRef(nextProps.params.id), 'item')\n      this.setState({item: item || {}})\n    }\n  },\n\n  componentWillUpdate(nextProps, nextState) {\n    // Update the title when the item has loaded.\n    if (!this.state.item.id && nextState.item.id) {\n      setTitle(nextState.item.title)\n    }\n  },\n\n  componentDidUpdate(prevProps, prevState) {\n    // If the state item id changed, an initial or new item must have loaded\n    if (prevState.item.id !== this.state.item.id) {\n      if (!this.threadStore || this.threadStore.itemId !== this.state.item.id) {\n        this.threadStore = new StoryCommentThreadStore(this.state.item, this.handleCommentsChanged, {cached: false})\n        setTitle(this.state.item.title)\n        this.forceUpdate()\n      }\n    }\n    else if (prevState.item !== this.state.item) {\n      // If the item has been updated from Firebase and the initial set\n      // of comments is still loading, the number of expected comments might\n      // need to be adjusted.\n      // This triggers a check for thread load completion, completing it\n      // immediately if a cached item had 0 kids and the latest version from\n      // Firebase also has 0 kids.\n      if (this.threadStore.loading) {\n        var kids = (this.state.item.kids ? this.state.item.kids.length : 0)\n        var prevKids = (prevState.item.kids ? prevState.item.kids.length : 0)\n        var kidDiff = kids - prevKids\n        if (kidDiff !== 0) {\n          this.threadStore.adjustExpectedComments(kidDiff)\n        }\n      }\n      this.threadStore.itemUpdated(this.state.item)\n    }\n  },\n\n  /**\n   * Ensure the last visit time and comment details get stored for this item if\n   * the user refreshes or otherwise navigates off the page.\n   */\n  handleBeforeUnload() {\n    if (this.threadStore) {\n      this.threadStore.dispose()\n    }\n  },\n\n  handleCommentsChanged(payload) {\n    this.forceUpdate()\n  },\n\n  autoCollapse(e) {\n    e.preventDefault()\n    this.threadStore.collapseThreadsWithoutNewComments()\n  },\n\n  markAsRead(e) {\n    e.preventDefault()\n    this.threadStore.markAsRead()\n    this.forceUpdate()\n  },\n\n  getButtonLabel() {\n    var showCommentsAfter = this.state.showNewCommentsAfter || this.threadStore.commentCount - 1\n    var howMany = this.threadStore.commentCount - showCommentsAfter\n    var timeComment = this.threadStore.getCommentByTimeIndex(showCommentsAfter + 1)\n    var text = `highlight ${howMany} comment${pluralise(howMany)} from `\n    return <span>\n      {text}<TimeAgo date={new Date(timeComment.time * 1000)}/>\n    </span>\n  },\n\n  highlightRecentComments() {\n    var showCommentsAfter = this.state.showNewCommentsAfter || this.threadStore.commentCount - 1\n    this.threadStore.highlightNewCommentsSince(showCommentsAfter)\n  },\n\n  render() {\n    var state = this.state\n    var item = state.item\n    var threadStore = this.threadStore\n    if (!item.id || !threadStore) { return <div className=\"Item Item--loading\"><Spinner size=\"20\"/></div> }\n    return <div className={cx('Item', {'Item--dead': item.dead})}>\n      <div className=\"Item__content\">\n        {this.renderItemTitle(item)}\n        {this.renderItemMeta(item, (threadStore.lastVisit !== null && threadStore.newCommentCount > 0 && <span>{' '}\n          (<em>{threadStore.newCommentCount} new</em> in the last <TimeAgo date={threadStore.lastVisit} formatter={timeUnitsAgo}/>{') | '}\n          <span className=\"control\" tabIndex=\"0\" onClick={this.autoCollapse} onKeyPress={this.autoCollapse} title=\"Collapse threads without new comments\">\n            auto collapse\n          </span>{' | '}\n          <span className=\"control\" tabIndex=\"0\" onClick={this.markAsRead} onKeyPress={this.markAsRead}>\n            mark as read\n          </span>\n        </span>))}\n        {!threadStore.loading && threadStore.commentCount > 1 && <div style={{marginTop: '1em'}}>\n          <input\n            max={threadStore.commentCount - 1}\n            min={1}\n            style={{margin: 0, verticalAlign: 'middle'}}\n            type=\"range\"\n            value={state.showNewCommentsAfter || threadStore.commentCount - 1}\n            onChange={(e) => {\n              var showNewCommentsAfter = Number(e.target.value)\n              this.setState({showNewCommentsAfter})\n            }}\n          />\n          <button type=\"button\" onClick={this.highlightRecentComments}>\n            {this.getButtonLabel()}\n          </button>\n        </div>}\n        {item.text && <div className=\"Item__text\">\n          <div dangerouslySetInnerHTML={{__html: item.text}}/>\n        </div>}\n        {item.type === 'poll' && <div className=\"Item__poll\">\n          {item.parts.map(function(id) {\n            return <PollOption key={id} id={id}/>\n          })}\n        </div>}\n      </div>\n      {item.kids && <div className=\"Item__kids\">\n        {item.kids.map(function(id, index) {\n          return <Comment key={id} id={id} level={0}\n            loadingSpinner={index === 0}\n            threadStore={threadStore}\n          />\n        })}\n      </div>}\n    </div>\n  }\n})\n\nexport default Item\n","var IndexRoute = require('react-router/lib/IndexRoute')\nvar React = require('react')\nvar Route = require('react-router/lib/Route')\nvar Item = require('./Item').default\n// Polyfill require.ensure\nif (typeof require.ensure !== 'function') require.ensure = function(d, c) { c(require) }\n\nvar App = require('./App').default\nvar Stories = require('./Stories').default\nvar Updates = require('./Updates').default\nvar PermalinkedComment = require('./PermalinkedComment').default\nvar UserProfile = require('./UserProfile').default\nvar NotFound = require('./NotFound').default\n\nfunction stories(route, type, limit, title) {\n  return React.createClass({\n    render() {\n      return <Stories {...this.props} key={route} route={route} type={type} limit={limit} title={title}/>\n    }\n  })\n}\n\nfunction updates(type) {\n  return React.createClass({\n    render() {\n      return <Updates {...this.props} key={type} type={type}/>\n    }\n  })\n}\n\nvar Ask = stories('ask', 'askstories', 200, 'Ask')\nvar Comments = updates('comments')\nvar Jobs = stories('jobs', 'jobstories', 200, 'Jobs')\nvar New = stories('newest', 'newstories', 500, 'New Links')\nvar Show = stories('show', 'showstories', 200, 'Show')\nvar Top = stories('news', 'topstories', 500)\nvar Read = stories('read', 'read', 0, 'Read Stories')\n\nexport default <Route path=\"/\" component={App}>\n  <IndexRoute component={Top}/>\n  <Route path=\"news\" component={Top}/>\n  <Route path=\"newest\" component={New}/>\n  <Route path=\"show\" component={Show}/>\n  <Route path=\"ask\" component={Ask}/>\n  <Route path=\"jobs\" component={Jobs}/>\n  <Route path=\"read\" component={Read}/>\n  <Route path=\"item/:id\" component={Item}/>\n  <Route path=\"job/:id\" component={Item}/>\n  <Route path=\"poll/:id\" component={Item}/>\n  <Route path=\"story/:id\" component={Item}/>\n  <Route path=\"comment/:id\" component={PermalinkedComment}/>\n  <Route path=\"newcomments\" component={Comments}/>\n  <Route path=\"user/:id\" component={UserProfile}/>\n  <Route path=\"*\" component={NotFound}/>\n</Route>\n","var React = require('react')\n\n// TODO Implement GIF-based fallback for IE9 and another non-animating browsers\n//      See https://github.com/tobiasahlin/SpinKit for how-to\nvar Spinner = React.createClass({\n  getDefaultProps() {\n    return {size: 6, spacing: 2}\n  },\n\n  render() {\n    var bounceSize = this.props.size + 'px'\n    var bounceStyle = {height: bounceSize, width: bounceSize, marginRight: this.props.spacing + 'px'}\n    return <div className=\"Spinner\" style={{width: ((Number(this.props.size) + Number(this.props.spacing)) * 3) + 'px'}}>\n      <div className=\"bounce1\" style={bounceStyle}/>\n      <div className=\"bounce2\" style={bounceStyle}/>\n      <div className=\"bounce3\" style={bounceStyle}/>\n    </div>\n  }\n})\n\nexport default Spinner\n","import {hashHistory} from 'react-router'\n\nrequire('./style.css')\n\nrequire('setimmediate')\n\nvar React = require('react')\nvar {render} = require('react-dom')\nvar Router = require('react-router/lib/Router')\nvar useScroll = require('react-router-scroll/lib/useScroll')\nvar applyRouterMiddleware = require('react-router/lib/applyRouterMiddleware')\n\nvar routes = require('./routes').default\n\nrender(\n  <Router\n    history={hashHistory}\n    render={applyRouterMiddleware(useScroll())}\n    routes={routes}\n  />,\n  document.getElementById('app')\n)\n","var {SITE_TITLE} = require('./constants').default\n\nfunction setTitle(title) {\n  if (typeof document === 'undefined') return\n  document.title = (title ? title + ' | ' + SITE_TITLE : SITE_TITLE)\n}\n\nexport default setTitle\n","/**\n * Creates a className string including some class names conditionally.\n * @param {string=} staticClassName class name(s) which should always be\n *   included.\n * @param {Object.<string, *>} conditionalClassNames an object mapping class\n *   names to a value which indicates if the class name should be included -\n *   class names will be included if their corresponding value is truthy.\n * @return {string}\n */\nfunction buildClassName(staticClassName, conditionalClassNames) {\n  var classNames = []\n  if (typeof conditionalClassNames == 'undefined') {\n    conditionalClassNames = staticClassName\n  }\n  else {\n    classNames.push(staticClassName)\n  }\n  var classNameKeys = Object.keys(conditionalClassNames)\n  for (var i = 0, l = classNameKeys.length; i < l; i++) {\n    if (conditionalClassNames[classNameKeys[i]]) {\n      classNames.push(classNameKeys[i])\n    }\n  }\n  return classNames.join(' ')\n}\n\nexport default buildClassName\n","function pluralise(howMany, suffixes) {\n  return (suffixes || ',s').split(',')[(howMany === 1 ? 0 : 1)]\n}\n\nexport default pluralise\n","function extend(dest, src1, src2) {\n  var props = Object.keys(src1)\n  for (var i = 0, l = props.length; i < l; i++) {\n    dest[props[i]] = src1[props[i]]\n  }\n  if (src2) {\n    props = Object.keys(src2)\n    for (i = 0, l = props.length; i < l; i++) {\n      dest[props[i]] = src2[props[i]]\n    }\n  }\n  return dest\n}\n\nexport default extend\n","export default {\n  ITEMS_PER_PAGE: 30,\n  SITE_TITLE: 'React HN',\n  UPDATES_CACHE_SIZE: 500\n}\n","var EventEmitter = require('events').EventEmitter\n\nvar HNService = require('../services/HNService').default\n\nvar {UPDATES_CACHE_SIZE} = require('../utils/constants').default\nvar extend = require('../utils/extend').default\n\n/**\n * Firebase reference used to stream updates.\n */\nvar updatesRef = null\n\n/**\n * Contains item id -> item cache objects. Persisted to sessionStorage.\n * @prop .comments {Object.<id,item>} comments cache.\n * @prop .stories {Object.<id,item>} story cache.\n */\nvar updatesCache = null\n\n/**\n * Lists of items in reverse chronological order for display.\n * @prop .comments {Array.<item>} comment updates.\n * @prop .stories {Array.<item>} story updates.\n */\nvar updates = {}\n\nfunction sortByTimeDesc(a, b) {\n  return b.time - a.time\n}\n\nfunction cacheObjToSortedArray(obj) {\n  var arr = Object.keys(obj).map(function(id) { return obj[id] })\n  arr.sort(sortByTimeDesc)\n  return arr\n}\n\n/**\n * Populate lists of updates for display from the cache.\n */\nfunction populateUpdates() {\n  updates.comments = processCacheObj(updatesCache.comments)\n  updates.stories = processCacheObj(updatesCache.stories)\n}\n\n/**\n * Create an array of items from a cache object, sorted in reverse chronological\n * order. Evict the oldest items from the cache if it's grown above\n * UPDATES_CACHE_SIZE.\n */\nfunction processCacheObj(cacheObj) {\n  var arr = cacheObjToSortedArray(cacheObj)\n  arr.splice(UPDATES_CACHE_SIZE, Math.max(0, arr.length - UPDATES_CACHE_SIZE))\n     .forEach(function(item) {\n       delete cacheObj[item.id]\n     })\n  return arr\n}\n\n/**\n * Lookup to filter out any items which appear in the updates feed which can't\n * be displayed by the Updates component.\n */\nvar updateItemTypes = {\n  comment: true,\n  job: true,\n  poll: true,\n  story: true\n}\n\n/**\n * Process incoming items from the update stream.\n */\nfunction handleUpdateItems(items) {\n  for (var i = 0, l = items.length; i < l; i++) {\n    var item = items[i]\n    // Silently ignore deleted items (because irony)\n    if (item.deleted) { continue }\n\n    if (typeof updateItemTypes[item.type] == 'undefined') {\n      if (process.env.NODE_ENV !== 'production') {\n        console.warn(\n          \"An item which can't be displayed by the Updates component was \" +\n          'received in the updates stream: ' + JSON.stringify(item)\n        )\n      }\n      continue\n    }\n\n    if (item.type === 'comment') {\n      updatesCache.comments[item.id] = item\n    }\n    else {\n      updatesCache.stories[item.id] = item\n    }\n  }\n  populateUpdates()\n  UpdatesStore.emit('updates', updates)\n}\n\nvar UpdatesStore = extend(new EventEmitter(), {\n  loadSession() {\n    var json = window.sessionStorage.updates\n    updatesCache = (json ? JSON.parse(json) : {comments: {}, stories: {}})\n    populateUpdates()\n  },\n\n  saveSession() {\n    window.sessionStorage.updates = JSON.stringify(updatesCache)\n  },\n\n  start() {\n    if (updatesRef === null) {\n      updatesRef = HNService.updatesRef()\n      updatesRef.on('value', function(snapshot) {\n        HNService.fetchItems(snapshot.val(), handleUpdateItems)\n      })\n    }\n  },\n\n  stop() {\n    updatesRef.off()\n    updatesRef = null\n  },\n\n  getUpdates() {\n    return updates\n  },\n\n  getItem(id) {\n    return (updatesCache.comments[id] || updatesCache.stories[id] || null)\n  },\n\n  getComment(id) {\n    return (updatesCache.comments[id] || null)\n  },\n\n  getStory(id) {\n    return (updatesCache.stories[id] || null)\n  }\n})\nUpdatesStore.off = UpdatesStore.removeListener\n\nexport default UpdatesStore\n","var {EventEmitter} = require('events')\n\nvar HNService = require('../services/HNService').default\n\nvar extend = require('../utils/extend').default\n\nvar ID_REGEXP = /^\\d+$/\n\n/**\n * Firebase reference used to stream updates - only one StoryStore instance can\n * be active at a time.\n */\nvar firebaseRef = null\n\n// Cache objects shared among StoryStore instances, also accessible via static\n// functions on the StoryStore constructor.\n\n/**\n * Story ids by type, in rank order. Persisted to sessionStorage.\n * @type Object.<type, Array.<id>>\n */\nvar idCache = {}\n\n/**\n * Item cache. Persisted to sessionStorage.\n * @type Object.<id, item>\n */\nvar itemCache = {}\n\n/**\n * Story items in rank order for display, by type.\n * @type Object.<type, Array.<item>>\n */\nvar storyLists = {}\n\n/**\n * Populate the story list for the given story type from the cache.\n */\nfunction populateStoryList(type) {\n  var ids = idCache[type]\n  var storyList = storyLists[type]\n  for (var i = 0, l = ids.length; i < l; i++) {\n    storyList[i] = itemCache[ids[i]] || null\n  }\n}\n\nfunction parseJSON(json, defaultValue) {\n  return (json ? JSON.parse(json) : defaultValue)\n}\n\nclass StoryStore extends EventEmitter {\n  constructor(type) {\n    super()\n    this.type = type\n\n    // Ensure cache objects for this type are initialised\n    if (!(type in idCache)) {\n      idCache[type] = []\n    }\n    if (!(type in storyLists)) {\n      storyLists[type] = []\n      populateStoryList(type)\n    }\n\n    // Pre-bind event handlers per instance\n    this.onStorage = this.onStorage.bind(this)\n    this.onStoriesUpdated = this.onStoriesUpdated.bind(this)\n  }\n\n  getState() {\n    return {\n      ids: idCache[this.type],\n      stories: storyLists[this.type]\n    }\n  }\n\n  itemUpdated(item, index) {\n    storyLists[this.type][index] = item\n    itemCache[item.id] = item\n  }\n\n  /**\n   * Emit an item id event if a storage key corresponding to an item in the\n   * cache has changed.\n   */\n  onStorage(e) {\n    if (itemCache[e.key]) {\n      this.emit(e.key)\n    }\n  }\n\n  /**\n   * Handle story id snapshots from Firebase.\n   */\n  onStoriesUpdated(snapshot) {\n    idCache[this.type] = snapshot.val()\n    populateStoryList(this.type)\n    this.emit('update', this.getState())\n  }\n\n  start() {\n    if (this.type === 'read') {\n      var readStoryIds = Object.keys(window.localStorage)\n        .filter(key => ID_REGEXP.test(key))\n        .map(id => Number(id))\n        .sort((a, b) => b - a)\n      setImmediate(() => this.onStoriesUpdated({val: () => readStoryIds}))\n    }\n    else {\n      firebaseRef = HNService.storiesRef(this.type)\n      firebaseRef.on('value', this.onStoriesUpdated)\n    }\n    window.addEventListener('storage', this.onStorage)\n  }\n\n  stop() {\n    if (firebaseRef !== null) {\n      firebaseRef.off()\n      firebaseRef = null\n    }\n    window.removeEventListener('storage', this.onStorage)\n  }\n}\n\n// Static, cache-related functions\nextend(StoryStore, {\n  /**\n   * Get an item from the cache.\n   */\n  getItem(id) {\n    return itemCache[id] || null\n  },\n\n  /**\n   * Deserialise caches from sessionStorage.\n   */\n  loadSession() {\n    idCache = parseJSON(window.sessionStorage.idCache, {})\n    itemCache = parseJSON(window.sessionStorage.itemCache, {})\n  },\n\n  /**\n   * Serialise caches to sessionStorage as JSON.\n   */\n  saveSession() {\n    window.sessionStorage.idCache = JSON.stringify(idCache)\n    window.sessionStorage.itemCache = JSON.stringify(itemCache)\n  }\n})\n\nexport default StoryStore\n","var React = require('react')\nvar Link = require('react-router/lib/Link')\nvar TimeAgo = require('react-timeago').default\n\nvar SettingsStore = require('../stores/SettingsStore').default\nvar pluralise = require('../utils/pluralise').default\nvar urlParse = require('url-parse')\n\nvar parseHost = function(url) {\n  var hostname = (urlParse(url, true)).hostname\n  var parts = hostname.split('.').slice(-3)\n  if (parts[0] === 'www') {\n    parts.shift()\n  }\n  return parts.join('.')\n}\n\n/**\n * Reusable logic for displaying an item.\n */\nvar ItemMixin = {\n  /**\n   * Render an item's metadata bar.\n   */\n  renderItemMeta(item, extraContent) {\n    var itemDate = new Date(item.time * 1000)\n\n    if (item.type === 'job') {\n      return <div className=\"Item__meta\">\n        <TimeAgo date={itemDate} className=\"Item__time\"/>\n      </div>\n    }\n\n    return <div className=\"Item__meta\">\n      <span className=\"Item__score\">\n        {item.score} point{pluralise(item.score)}\n      </span>{' '}\n      <span className=\"Item__by\">\n        by <Link to={`/user/${item.by}`}>{item.by}</Link>\n      </span>{' '}\n      <TimeAgo date={itemDate} className=\"Item__time\"/>\n      {' | '}\n      <Link to={`/${item.type}/${item.id}`}>\n        {item.descendants > 0 ? item.descendants + ' comment' + pluralise(item.descendants) : 'discuss'}\n      </Link>\n      {extraContent}\n    </div>\n  },\n\n  /**\n   * Render an item's title bar.\n   */\n  renderItemTitle(item) {\n    var hasURL = !!item.url\n    var title\n    if (item.dead) {\n      title = '[dead] ' + item.title\n    }\n    else {\n      title = (hasURL ? <a href={item.url}>{item.title}</a>\n        : <Link to={`/${item.type}/${item.id}`}>{item.title}</Link>)\n    }\n    return <div className=\"Item__title\" style={{fontSize: `${SettingsStore.titleFontSize}px`}}>\n      {title}\n      {hasURL && ' '}\n      {hasURL && <span className=\"Item__host\">({parseHost(item.url)})</span>}\n    </div>\n  }\n}\n\nexport default ItemMixin\n","var React = require('react')\nvar Link = require('react-router/lib/Link')\nvar TimeAgo = require('react-timeago').default\n\nvar ItemStore = require('../stores/ItemStore').default\nvar SettingsStore = require('../stores/SettingsStore').default\n\nvar Spinner = require('../Spinner').default\n\nvar pluralise = require('../utils/pluralise').default\n\nvar CommentMixin = {\n  fetchAncestors(comment) {\n    ItemStore.fetchCommentAncestors(comment, result => {\n      if (process.env.NODE_ENV !== 'production') {\n        console.info(\n          'fetchAncestors(' + comment.id + ') took ' +\n          result.timeTaken + ' ms for ' +\n          result.itemCount + ' item' + pluralise(result.itemCount) + ' with ' +\n          result.cacheHits + ' cache hit' + pluralise(result.cacheHits) + ' (' +\n          (result.cacheHits / result.itemCount * 100).toFixed(1) + '%)'\n        )\n      }\n      if (!this.isMounted()) {\n        if (process.env.NODE_ENV !== 'production') {\n          console.info(\"...but the comment isn't mounted\")\n        }\n        // Too late - the comment or the user has moved elsewhere\n        return\n      }\n      this.setState({\n        parent: result.parent,\n        op: result.op\n      })\n    })\n  },\n\n  renderCommentLoading(comment) {\n    return <div className={'Comment Comment--loading Comment--level' + this.props.level}>\n      {(this.props.loadingSpinner || comment.delayed) && <Spinner size=\"20\"/>}\n      {comment.delayed && <div className=\"Comment__text\">\n        Unable to load comment &ndash; this usually indicates the author has configured a delay.\n        Trying again in 30 seconds.\n      </div>}\n    </div>\n  },\n\n  renderCommentDeleted(comment, options) {\n    return <div className={options.className}>\n      <div className=\"Comment__content\">\n        <div className=\"Comment__meta\">\n          [deleted] | <a href={'https://news.ycombinator.com/item?id=' + comment.id}>view on Hacker News</a>\n        </div>\n      </div>\n    </div>\n  },\n\n  renderError(comment, options) {\n    return <div className={options.className}>\n      <div className=\"Comment__content\">\n        <div className=\"Comment__meta\">\n          [error] | comment is {JSON.stringify(comment)} | <a href={'https://news.ycombinator.com/item?id=' + options.id}>view on Hacker News</a>\n        </div>\n      </div>\n    </div>\n  },\n\n  renderCollapseControl(collapsed) {\n    return <span className=\"Comment__collapse\" onClick={this.toggleCollapse} onKeyPress={this.toggleCollapse} tabIndex=\"0\">\n      [{collapsed ? '+' : '–'}]\n    </span>\n  },\n\n  /**\n   * @param options.collapsible {Boolean} if true, assumes this.toggleCollspse()\n   * @param options.collapsed {Boolean}\n   * @param options.link {Boolean}\n   * @param options.parent {Boolean} if true, assumes this.state.parent\n   * @param options.op {Boolean} if true, assumes this.state.op\n   * @param options.childCounts {Object} with .children and .newComments\n   */\n  renderCommentMeta(comment, options) {\n    if (comment.dead && !SettingsStore.showDead) {\n      return <div className=\"Comment__meta\">\n        {options.collapsible && this.renderCollapseControl(options.collapsed)}\n        {options.collapsible && ' '}\n        [dead]\n        {options.childCounts && ' | (' + options.childCounts.children + ' child' + pluralise(options.childCounts.children, ',ren')}\n        {options.childCounts && options.childCounts.newComments > 0 && ', '}\n        {options.childCounts && options.childCounts.newComments > 0 && <em>{options.childCounts.newComments} new</em>}\n        {options.childCounts && ')'}\n      </div>\n    }\n\n    return <div className=\"Comment__meta\">\n      {options.collapsible && this.renderCollapseControl(options.collapsed)}\n      {options.collapsible && ' '}\n      <Link to={`/user/${comment.by}`} className=\"Comment__user\">{comment.by}</Link>{' '}\n      <TimeAgo date={comment.time * 1000}/>\n      {options.link && ' | '}\n      {options.link && <Link to={`/comment/${comment.id}`}>link</Link>}\n      {options.parent && ' | '}\n      {options.parent && <Link to={`/${this.state.parent.type}/${comment.parent}`}>parent</Link>}\n      {options.op && ' | on: '}\n      {options.op && <Link to={`/${this.state.op.type}/${this.state.op.id}`}>{this.state.op.title}</Link>}\n      {comment.dead && ' | [dead]'}\n      {options.childCounts && ' | (' + options.childCounts.children + ' child' + pluralise(options.childCounts.children, ',ren')}\n      {options.childCounts && options.childCounts.newComments > 0 && ', '}\n      {options.childCounts && options.childCounts.newComments > 0 && <em>{options.childCounts.newComments} new</em>}\n      {options.childCounts && ')'}\n    </div>\n  },\n\n  renderCommentText(comment, options) {\n    return <div className=\"Comment__text\">\n      {(!comment.dead || SettingsStore.showDead) ? <div dangerouslySetInnerHTML={{__html: comment.text}}/> : '[dead]'}\n      {SettingsStore.replyLinks && options.replyLink && !comment.dead && <p>\n        <a href={`https://news.ycombinator.com/reply?id=${comment.id}`}>reply</a>\n      </p>}\n    </div>\n  }\n}\n\nexport default CommentMixin\n","var extend = require('../utils/extend').default\n\nfunction CommentThreadStore(item, onCommentsChanged) {\n  this.itemId = item.id\n  this.onCommentsChanged = onCommentsChanged\n\n  /**\n   * Lookup from a comment id to the comment.\n   * @type {Object.<id,Comment>}\n   */\n  this.comments = {}\n\n  /**\n   * Lookup from a comment id to its child comment ids.\n   * @type {Object.<id,Array.<Number>>}\n   */\n  this.children = {}\n  this.children[item.id] = []\n\n  /**\n   * Lookup for new comment ids. Will only contain true.\n   * @type {Object.<id,Boolean>}\n   */\n  this.isNew = {}\n\n  /**\n   * Lookup for collapsed state of comment ids. May contain true or false.\n   * @type {Object.<id,Boolean>}\n   */\n  this.isCollapsed = {}\n\n  /**\n   * Lookup for dead comment ids\n   * @type {Object.<id,Boolean>}\n   */\n  this.deadComments = {}\n}\n\nextend(CommentThreadStore.prototype, {\n  /**\n   * Get counts of children and new comments under the given comment.\n   * @return .children {Number}\n   * @return .newComments {Number}\n   */\n  getChildCounts(comment) {\n    var childCount = 0\n    var newCommentCount = 0\n    var nodes = [comment.id]\n\n    while (nodes.length) {\n      var nextNodes = []\n      for (var i = 0, l = nodes.length; i < l; i++) {\n        var nodeChildren = this.children[nodes[i]]\n        if (nodeChildren.length) {\n          nextNodes.push.apply(nextNodes, nodeChildren)\n        }\n      }\n      for (i = 0, l = nextNodes.length; i < l; i++) {\n        if (this.isNew[nextNodes[i]]) {\n          newCommentCount++\n        }\n      }\n      childCount += nextNodes.length\n      nodes = nextNodes\n    }\n\n    return {\n      children: childCount,\n      newComments: newCommentCount\n    }\n  },\n\n  /**\n   * Register a comment's appearance in the thread.\n   */\n  commentAdded(comment) {\n    if (comment.deleted) { return }\n\n    this.comments[comment.id] = comment\n    this.children[comment.id] = []\n    this.children[comment.parent].push(comment.id)\n    if (comment.dead) {\n      this.deadComments[comment.id] = true\n    }\n  },\n\n  /**\n   * Register a comment's deletion from the thread.\n   */\n  commentDeleted(comment) {\n    // Comments which initially failed to load (null from Firebase API) can be\n    // deleted by the time the API catches up.\n    if (!comment) { return }\n\n    delete this.comments[comment.id]\n    var siblings = this.children[comment.parent]\n    siblings.splice(siblings.indexOf(comment.id), 1)\n    if (comment.dead) {\n      delete this.deadComments[comment.id]\n    }\n  },\n\n  toggleCollapse(commentId) {\n    this.isCollapsed[commentId] = !this.isCollapsed[commentId]\n    this.onCommentsChanged({type: 'collapse'})\n  }\n})\n\nexport default CommentThreadStore\n","var CommentThreadStore = require('./CommentThreadStore').default\nvar SettingsStore = require('./SettingsStore').default\n\nvar debounce = require('../utils/cancellableDebounce').default\nvar extend = require('../utils/extend').default\nvar pluralise = require('../utils/pluralise').default\nvar storage = require('../utils/storage').default\n\n/**\n * Load persisted comment thread state.\n * @return .lastVisit {Date} null if the item hasn't been visited before.\n * @return .commentCount {Number} 0 if the item hasn't been visited before.\n * @return .maxCommentId {Number} 0 if the item hasn't been visited before.\n */\nfunction loadState(itemId) {\n  var json = storage.get(itemId)\n  if (json) {\n    return JSON.parse(json)\n  }\n  return {\n    lastVisit: null,\n    commentCount: 0,\n    maxCommentId: 0\n  }\n}\n\nfunction StoryCommentThreadStore(item, onCommentsChanged, options) {\n  CommentThreadStore.call(this, item, onCommentsChanged)\n  this.startedLoading = Date.now()\n\n  /** Lookup from a comment id to its parent comment id. */\n  this.parents = {}\n  /** The number of comments which have loaded. */\n  this.commentCount = 0\n  /** The number of new comments which have loaded. */\n  this.newCommentCount = 0\n  /** The max comment id seen by the store. */\n  this.maxCommentId = 0\n  /** Has the comment thread finished loading? */\n  this.loading = true\n  /** The number of comments we're expecting to load. */\n  this.expectedComments = item.kids ? item.kids.length : 0\n  /**\n   * The number of descendants the story has according to the API.\n   * This count includes deleted comments, which aren't accessible via the API,\n   * so a thread with deleted comments (example story id: 9273709) will never\n   * load this number of comments\n   * However, we still need to persist the last known descendant count in order\n   * to determine how many new comments there are when displaying the story on a\n   * list page.\n   */\n  this.itemDescendantCount = item.descendants\n\n  var initialState = loadState(item.id)\n  /** Time of last visit to the story. */\n  this.lastVisit = initialState.lastVisit\n  /** Max comment id on the last visit - determines which comments are new. */\n  this.prevMaxCommentId = initialState.maxCommentId\n  /** Is this the user's first time viewing the story? */\n  this.isFirstVisit = (initialState.lastVisit === null)\n\n  // Trigger an immediate check for thread load completion if the item was not\n  // retrieved from the cache, so is the latest version. This completes page\n  // loading immediately for items which have no comments yet.\n  if (!options.cached) {\n    this.checkLoadCompletion()\n  }\n}\n\nStoryCommentThreadStore.loadState = loadState\n\nStoryCommentThreadStore.prototype = extend(Object.create(CommentThreadStore.prototype), {\n  constructor: StoryCommentThreadStore,\n\n  /**\n   * Callback to the item component with updated comment counts, debounced as\n   * comments will be loading frequently on initial load.\n   */\n  numberOfCommentsChanged: debounce(function() {\n    this.onCommentsChanged({type: 'number'})\n  }, 123),\n\n  /**\n   * If we don't have a last visit time stored for an item, it must have been\n   * visited for the first time. Once it finishes loading, establish the last\n   * visit time and max comment id which will be used to track and display new\n   * comments.\n   */\n  firstLoadComplete() {\n    this.lastVisit = Date.now()\n    this.prevMaxCommentId = this.maxCommentId\n    this.isFirstVisit = false\n    this.onCommentsChanged({type: 'first_load_complete'})\n  },\n\n  /**\n   * Check whether the number of comments has reached the expected number yet.\n   */\n  checkLoadCompletion() {\n    if (this.loading && this.commentCount >= this.expectedComments) {\n      if (process.env.NODE_ENV !== 'production') {\n        console.info(\n          'Initial load of ' +\n           this.commentCount + ' comment' + pluralise(this.commentCount) +\n          ' for ' + this.itemId + ' took ' +\n          ((Date.now() - this.startedLoading) / 1000).toFixed(2) + 's'\n        )\n      }\n      this.loading = false\n      if (this.isFirstVisit) {\n        this.firstLoadComplete()\n      }\n      else if (SettingsStore.autoCollapse && this.newCommentCount > 0) {\n        this.collapseThreadsWithoutNewComments()\n      }\n      this._storeState()\n    }\n  },\n\n  /**\n   * Persist comment thread state.\n   */\n  _storeState() {\n    storage.set(this.itemId, JSON.stringify({\n      lastVisit: Date.now(),\n      commentCount: this.itemDescendantCount,\n      maxCommentId: this.maxCommentId\n    }))\n  },\n\n  /**\n   * The item this comment thread belongs to got updated.\n   */\n  itemUpdated(item) {\n    this.itemDescendantCount = item.descendants\n  },\n\n  /**\n   * A comment got loaded initially or added later.\n   */\n  commentAdded(comment) {\n    // Deleted comments don't count towards the comment count\n    if (comment.deleted) {\n      // Adjust the number of comments expected during the initial page load.\n      if (this.loading) {\n        this.expectedComments--\n        this.checkLoadCompletion()\n      }\n      return\n    }\n\n    CommentThreadStore.prototype.commentAdded.call(this, comment)\n\n    // Dead comments don't contribute to the comment count if showDead is off\n    if (comment.dead && !SettingsStore.showDead) {\n      this.expectedComments--\n    }\n    else {\n      this.commentCount++\n    }\n    // Add the number of kids the comment has to the expected total for the\n    // initial load.\n    if (this.loading && comment.kids) {\n      this.expectedComments += comment.kids.length\n    }\n    // Register the comment as new if it's new, unless it's dead and showDead is off\n    if (this.prevMaxCommentId > 0 &&\n        comment.id > this.prevMaxCommentId &&\n        (!comment.dead || SettingsStore.showDead)) {\n      this.newCommentCount++\n      this.isNew[comment.id] = true\n    }\n    // Keep track of the biggest comment id seen\n    if (comment.id > this.maxCommentId) {\n      this.maxCommentId = comment.id\n    }\n    // We don't want the story to be part of the comment parent hierarchy\n    if (comment.parent !== this.itemId) {\n      this.parents[comment.id] = comment.parent\n    }\n\n    this.numberOfCommentsChanged()\n    if (this.loading) {\n      this.checkLoadCompletion()\n    }\n  },\n\n  /**\n   * A comment which hasn't loaded yet is being delayed.\n   */\n  commentDelayed(commentId) {\n    // Don't wait for delayed comments\n    this.expectedComments--\n  },\n\n  /**\n   * A comment which wasn't previously deleted became deleted.\n   */\n  commentDeleted(comment) {\n    CommentThreadStore.prototype.commentDeleted.call(this, comment)\n    this.commentCount--\n    if (this.isNew[comment.id]) {\n      this.newCommentCount--\n      delete this.isNew[comment.id]\n    }\n    delete this.parents[comment.id]\n    // Trigger debounced callbacks\n    this.numberOfCommentsChanged()\n  },\n\n  /**\n   * A comment which wasn't previously dead became dead.\n   */\n  commentDied(comment) {\n    if (!SettingsStore.showDead) {\n      this.commentCount--\n      if (this.isNew[comment.id]) {\n        this.newCommentCount--\n        delete this.isNew[comment.id]\n      }\n    }\n  },\n\n  /**\n   * Change the expected number of comments if an update was received during\n   * initial loding and trigger a re-check of loading completion.\n   */\n  adjustExpectedComments(change) {\n    this.expectedComments += change\n    this.checkLoadCompletion()\n  },\n\n  collapseThreadsWithoutNewComments() {\n    // Create an id lookup for comments which have a new comment as one of their\n    // descendants. New comments themselves are not added to the lookup.\n    var newCommentIds = Object.keys(this.isNew)\n    var hasNewComments = {}\n    for (var i = 0, l = newCommentIds.length; i < l; i++) {\n      var parent = this.parents[newCommentIds[i]]\n      while (parent) {\n        // Stop when we hit one we've seen before\n        if (hasNewComments[parent]) {\n          break\n        }\n        hasNewComments[parent] = true\n        parent = this.parents[parent]\n      }\n    }\n\n    // Walk the tree of comments one level at a time, only walking children to\n    // comments we know have new comment descendants, to find subtrees which\n    // don't have new comments.\n    // Other comments are marked for collapsing unless they are themselves a\n    // new comment (in which case all their replies must be new too).\n    var shouldCollapse = {}\n    var commentIds = this.children[this.itemId]\n    while (commentIds.length) {\n      var nextCommentIds = []\n      for (i = 0, l = commentIds.length; i < l; i++) {\n        var commentId = commentIds[i]\n        if (!hasNewComments[commentId]) {\n          if (!this.isNew[commentId]) {\n            shouldCollapse[commentId] = true\n          }\n        }\n        else {\n          var childCommentIds = this.children[commentId]\n          if (childCommentIds.length) {\n            nextCommentIds.push.apply(nextCommentIds, childCommentIds)\n          }\n        }\n      }\n      commentIds = nextCommentIds\n    }\n\n    this.isCollapsed = shouldCollapse\n    this.onCommentsChanged({type: 'collapse'})\n  },\n\n  getCommentByTimeIndex(timeIndex) {\n    var sortedCommentIds = Object.keys(this.comments).map(id => Number(id))\n    if (!SettingsStore.showDead) {\n      sortedCommentIds = sortedCommentIds.filter(id => !this.deadComments[id])\n    }\n    sortedCommentIds.sort()\n    var commentId = sortedCommentIds[timeIndex - 1]\n    return this.comments[commentId]\n  },\n\n  highlightNewCommentsSince(showCommentsAfter) {\n    var referenceComment = this.getCommentByTimeIndex(showCommentsAfter)\n\n    // Walk the tree of comments and create a new isNew lookup for comments\n    // newer than the reference comment we're using for highlighting.\n    var isNew = {}\n    var commentIds = this.children[this.itemId]\n    while (commentIds.length) {\n      var nextCommentIds = []\n      for (var i = 0, l = commentIds.length; i < l; i++) {\n        var commentId = commentIds[i]\n        if (commentId > referenceComment.id) {\n          isNew[commentId] = true\n        }\n        var childCommentIds = this.children[commentId]\n        if (childCommentIds.length) {\n          nextCommentIds.push.apply(nextCommentIds, childCommentIds)\n        }\n      }\n      commentIds = nextCommentIds\n    }\n\n    this.isNew = isNew\n    this.collapseThreadsWithoutNewComments()\n  },\n\n  /**\n   * Merk the thread as read.\n   */\n  markAsRead() {\n    this.lastVisit = Date.now()\n    this.newCommentCount = 0\n    this.prevMaxCommentId = this.maxCommentId\n    this.isNew = {}\n    this._storeState()\n  },\n\n  /**\n   * Persist comment thread state and perform any necessary internal cleanup.\n   */\n  dispose() {\n    // Cancel debounced callbacks in case any are pending\n    this.numberOfCommentsChanged.cancel()\n    this._storeState()\n  }\n})\n\nexport default StoryCommentThreadStore\n","var extend = require('../utils/extend').default\nvar storage = require('../utils/storage').default\n\nvar STORAGE_KEY = 'settings'\n\nvar SettingsStore = {\n  autoCollapse: true,\n  replyLinks: true,\n  showDead: false,\n  showDeleted: false,\n  titleFontSize: 18,\n  listSpacing: 16,\n\n  load() {\n    var json = storage.get(STORAGE_KEY)\n    if (json) {\n      extend(this, JSON.parse(json))\n    }\n  },\n\n  save() {\n    storage.set(STORAGE_KEY, JSON.stringify({\n      autoCollapse: this.autoCollapse,\n      replyLinks: this.replyLinks,\n      showDead: this.showDead,\n      showDeleted: this.showDeleted,\n      titleFontSize: this.titleFontSize,\n      listSpacing: this.listSpacing\n    }))\n  }\n}\n\nexport default SettingsStore\n","function pageCalc(pageNum, pageSize, numItems) {\n  var startIndex = (pageNum - 1) * pageSize\n  var endIndex = Math.min(numItems, startIndex + pageSize)\n  var hasNext = endIndex < numItems - 1\n  return {pageNum, startIndex, endIndex, hasNext}\n}\n\nexport default pageCalc\n","var React = require('react')\nvar Link = require('react-router/lib/Link')\n\nvar SettingsStore = require('../stores/SettingsStore').default\nvar cx = require('../utils/buildClassName').default\n\n/**\n * Reusable logic for displaying an item in a list.\n * Must be used in conjunction with ItemMixin for its rendering methods.\n */\nvar ListItemMixin = {\n  getNewCommentCount(item, threadState) {\n    if (threadState.lastVisit === null) {\n      return 0\n    }\n    return item.descendants - threadState.commentCount\n  },\n\n  renderListItem(item, threadState) {\n    if (item.deleted) { return null }\n    var newCommentCount = this.getNewCommentCount(item, threadState)\n    return <li className={cx('ListItem', {'ListItem--dead': item.dead})} style={{marginBottom: SettingsStore.listSpacing}}>\n      {this.renderItemTitle(item)}\n      {this.renderItemMeta(item, (newCommentCount > 0 && <span className=\"ListItem__newcomments\">{' '}\n        (<Link to={`/${item.type}/${item.id}`}>\n          {newCommentCount} new\n        </Link>)\n      </span>))}\n    </li>\n  }\n}\n\nexport default ListItemMixin\n","var React = require('react')\nvar Link = require('react-router/lib/Link')\n\nvar Paginator = React.createClass({\n  _onClick(e) {\n    setTimeout(function() { window.scrollTo(0, 0) }, 0)\n  },\n\n  render() {\n    if (this.props.page === 1 && !this.props.hasNext) { return null }\n    return <div className=\"Paginator\">\n      {this.props.page > 1 && <span className=\"Paginator__prev\">\n        <Link to={{pathname: `/${this.props.route}`, query: {page: this.props.page - 1}}} onClick={this._onClick}>Prev</Link>\n      </span>}\n      {this.props.page > 1 && this.props.hasNext && ' | '}\n      {this.props.hasNext && <span className=\"Paginator__next\">\n        <Link to={{pathname: `/${this.props.route}`, query: {page: this.props.page + 1}}} onClick={this._onClick}>More</Link>\n      </span>}\n    </div>\n  }\n})\n\nexport default Paginator\n","var PageNumberMixin = {\n  getPageNumber(page) {\n    if (typeof page == 'undefined') {\n      page = this.props.location.query.page\n    }\n    return (page && /^\\d+$/.test(page) ? Math.max(1, Number(page)) : 1)\n  }\n}\n\nexport default PageNumberMixin\n"],"sourceRoot":""}