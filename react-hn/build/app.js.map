{"version":3,"sources":["webpack:///app.js","webpack:///C:/repos/react-hn/src/index.js","webpack:///C:/repos/react-hn/src/stores/SettingsStore.js","webpack:///C:/repos/react-hn/src/services/HNService.js","webpack:///C:/repos/react-hn/src/Spinner.js","webpack:///C:/repos/react-hn/src/utils/buildClassName.js","webpack:///C:/repos/react-hn/src/utils/extend.js","webpack:///C:/repos/react-hn/src/utils/setTitle.js","webpack:///C:/repos/react-hn/src/stores/StoryStore.js","webpack:///C:/repos/react-hn/src/stores/UpdatesStore.js","webpack:///C:/repos/react-hn/src/utils/constants.js","webpack:///C:/repos/react-hn/src/utils/pluralise.js","webpack:///../nwb/~/webpack/~/node-libs-browser/~/timers-browserify/main.js","webpack:///C:/repos/react-hn/src/mixins/CommentMixin.js","webpack:///C:/repos/react-hn/src/mixins/ItemMixin.js","webpack:///C:/repos/react-hn/src/stores/CommentThreadStore.js","webpack:///C:/repos/react-hn/src/stores/StoryCommentThreadStore.js","webpack:///C:/repos/react-hn/src/Comment.js","webpack:///C:/repos/react-hn/src/Paginator.js","webpack:///C:/repos/react-hn/src/mixins/ListItemMixin.js","webpack:///C:/repos/react-hn/src/mixins/PageNumberMixin.js","webpack:///C:/repos/react-hn/src/stores/ItemStore.js","webpack:///C:/repos/react-hn/src/utils/pageCalc.js","webpack:///C:/repos/react-hn/src/utils/storage.js","webpack:///../nwb/~/webpack/~/node-libs-browser/~/process/browser.js","webpack:///C:/repos/react-hn/src/App.js","webpack:///C:/repos/react-hn/src/DisplayComment.js","webpack:///C:/repos/react-hn/src/DisplayListItem.js","webpack:///C:/repos/react-hn/src/Item.js","webpack:///C:/repos/react-hn/src/NotFound.js","webpack:///C:/repos/react-hn/src/PermalinkedComment.js","webpack:///C:/repos/react-hn/src/PollOption.js","webpack:///C:/repos/react-hn/src/Settings.js","webpack:///C:/repos/react-hn/src/Stories.js","webpack:///C:/repos/react-hn/src/StoryListItem.js","webpack:///C:/repos/react-hn/src/Updates.js","webpack:///C:/repos/react-hn/src/UserProfile.js","webpack:///C:/repos/react-hn/src/routes.js","webpack:///C:/repos/react-hn/src/utils/cancellableDebounce.js"],"names":["webpackJsonp","module","exports","__webpack_require__","createHashHistory","React","Router","_require","render","useScroll","routes","history","createElement","document","getElementById","extend","storage","STORAGE_KEY","SettingsStore","autoCollapse","replyLinks","showDead","showDeleted","titleFontSize","listSpacing","load","json","get","this","JSON","parse","save","set","stringify","fetchItem","id","cb","itemRef","once","snapshot","val","fetchItems","ids","addItem","item","items","push","length","forEach","storiesRef","path","api","child","userRef","updatesRef","Firebase","Spinner","createClass","displayName","getDefaultProps","size","spacing","bounceSize","props","bounceStyle","height","width","marginRight","className","style","Number","buildClassName","staticClassName","conditionalClassNames","classNames","classNameKeys","Object","keys","i","l","join","dest","src1","src2","setTitle","title","SITE_TITLE","_classCallCheck","instance","Constructor","TypeError","_inherits","subClass","superClass","prototype","create","constructor","value","enumerable","writable","configurable","setPrototypeOf","__proto__","populateStoryList","type","idCache","storyList","storyLists","itemCache","parseJSON","defaultValue","EventEmitter","HNService","firebaseRef","StoryStore","_EventEmitter","call","onStorage","bind","onStoriesUpdated","getState","stories","itemUpdated","index","e","key","emit","start","on","window","addEventListener","stop","off","removeEventListener","getItem","loadSession","sessionStorage","saveSession","sortByTimeDesc","a","b","time","cacheObjToSortedArray","obj","arr","map","sort","populateUpdates","updates","comments","processCacheObj","updatesCache","cacheObj","splice","UPDATES_CACHE_SIZE","Math","max","handleUpdateItems","deleted","updateItemTypes","UpdatesStore","comment","job","poll","story","getUpdates","getComment","getStory","removeListener","ITEMS_PER_PAGE","pluralise","howMany","suffixes","split","setImmediate","clearImmediate","Timeout","clearFn","_id","_clearFn","nextTick","apply","Function","slice","Array","immediateIds","nextImmediateId","setTimeout","arguments","clearTimeout","setInterval","clearInterval","timeout","close","unref","ref","enroll","msecs","_idleTimeoutId","_idleTimeout","unenroll","_unrefActive","active","_onTimeout","fn","args","Link","TimeAgo","ItemStore","CommentMixin","fetchAncestors","_this","fetchCommentAncestors","result","isMounted","setState","parent","op","renderCommentLoading","level","loadingSpinner","delayed","renderCommentDeleted","options","href","renderError","renderCollapseControl","collapsed","onClick","toggleCollapse","onKeyPress","tabIndex","renderCommentMeta","dead","collapsible","childCounts","children","newComments","to","by","date","link","state","renderCommentText","dangerouslySetInnerHTML","__html","text","replyLink","parseHost","url","parts","hostname","shift","ItemMixin","renderItemMeta","extraContent","itemDate","Date","score","descendants","renderItemTitle","hasURL","fontSize","CommentThreadStore","onCommentsChanged","itemId","isNew","isCollapsed","getChildCounts","childCount","newCommentCount","nodes","nextNodes","nodeChildren","commentAdded","commentDeleted","siblings","indexOf","commentId","loadState","lastVisit","commentCount","maxCommentId","StoryCommentThreadStore","startedLoading","now","parents","loading","expectedComments","kids","itemDescendantCount","initialState","prevMaxCommentId","isFirstVisit","cached","checkLoadCompletion","debounce","numberOfCommentsChanged","firstLoadComplete","collapseThreadsWithoutNewComments","_storeState","commentDelayed","commentDied","adjustExpectedComments","change","newCommentIds","hasNewComments","shouldCollapse","commentIds","nextCommentIds","childCommentIds","markAsRead","dispose","cancel","ReactFireMixin","cx","Comment","mixins","propTypes","PropTypes","number","isRequired","bool","threadStore","instanceOf","getInitialState","componentWillMount","bindFirebaseRef","componentWillUnmount","clearDelayTimeout","componentDidUpdate","prevProps","prevState","prevKids","bindAsObject","handleFirebaseRefCancelled","unbind","forceUpdate","preventDefault","Comment--collapsed","Comment--dead","Comment--new","Paginator","_onClick","scrollTo","page","hasNext","route","query","ListItemMixin","getNewCommentCount","threadState","renderListItem","ListItem--dead","marginBottom","PageNumberMixin","getPageNumber","location","test","fetchCommentParent","parentId","commentParentLookup","titleCache","itemCount","cacheHits","processCommentParent","cachedItem","getCachedItem","getCachedStory","startTime","timeTaken","pageCalc","pageNum","pageSize","numItems","startIndex","endIndex","min","localStorage","cleanUpNextTick","draining","currentQueue","queue","concat","queueIndex","drainQueue","len","run","Item","fun","array","noop","process","browser","env","argv","version","versions","addListener","removeAllListeners","binding","name","Error","cwd","chdir","dir","umask","Settings","App","showSettings","handleBeforeUnload","toggleSettings","src","alt","activeClassName","DisplayComment","object","DisplayListItem","timeUnitsAgo","unit","suffix","PollOption","params","handleCommentsChanged","componentWillReceiveProps","nextProps","componentWillUpdate","nextState","kidDiff","payload","Item--dead","formatter","NotFound","_setTitle","PermalinkedComment","commentLoaded","context","router","replaceWith","pollopt","componentDidMount","refs","container","focus","onChange","el","target","checked","stopPropagation","htmlFor","step","StoryListItem","Stories","limit","string","store","handleUpdate","update","dummyItems","renderItems","rendered","initLiveItem","updateThreadState","filterDead","filterUpdates","filter","Updates","handleUpdates","UserProfile","user","createdDate","created","toDateString","karma","delay","about","_extends","assign","source","hasOwnProperty","IndexRoute","Route","Ask","Comments","Jobs","New","Show","Top","component","cancellableDebounce","func","wait","immediate","timestamp","later","last","debounced","callNow"],"mappings":"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","file":"app.js","sourcesContent":["webpackJsonp([1],[\n/* 0 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\t__webpack_require__(246);\n\t\n\tvar createHashHistory = __webpack_require__(91);\n\tvar React = __webpack_require__(3);\n\tvar Router = __webpack_require__(162);\n\t\n\tvar _require = __webpack_require__(159);\n\t\n\tvar render = _require.render;\n\t\n\tvar useScroll = __webpack_require__(238);\n\t\n\tvar routes = __webpack_require__(143);\n\t\n\tvar history = useScroll(createHashHistory)();\n\t\n\trender(React.createElement(Router, { history: history, routes: routes }), document.getElementById('app'));\n\n/***/ },\n/* 1 */,\n/* 2 */,\n/* 3 */,\n/* 4 */,\n/* 5 */,\n/* 6 */,\n/* 7 */,\n/* 8 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\tvar extend = __webpack_require__(24);\n\tvar storage = __webpack_require__(85);\n\t\n\tvar STORAGE_KEY = 'settings';\n\t\n\tvar SettingsStore = {\n\t  autoCollapse: true,\n\t  replyLinks: true,\n\t  showDead: false,\n\t  showDeleted: false,\n\t  titleFontSize: 18,\n\t  listSpacing: 16,\n\t\n\t  load: function load() {\n\t    var json = storage.get(STORAGE_KEY);\n\t    if (json) {\n\t      extend(this, JSON.parse(json));\n\t    }\n\t  },\n\t\n\t  save: function save() {\n\t    storage.set(STORAGE_KEY, JSON.stringify({\n\t      autoCollapse: this.autoCollapse,\n\t      replyLinks: this.replyLinks,\n\t      showDead: this.showDead,\n\t      showDeleted: this.showDeleted,\n\t      titleFontSize: this.titleFontSize,\n\t      listSpacing: this.listSpacing\n\t    }));\n\t  }\n\t};\n\t\n\tmodule.exports = SettingsStore;\n\n/***/ },\n/* 9 */,\n/* 10 */,\n/* 11 */,\n/* 12 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\tvar Firebase = __webpack_require__(145);\n\t\n\tvar api = new Firebase('https://hacker-news.firebaseio.com/v0');\n\t\n\tfunction fetchItem(id, cb) {\n\t  itemRef(id).once('value', function (snapshot) {\n\t    cb(snapshot.val());\n\t  });\n\t}\n\t\n\tfunction fetchItems(ids, cb) {\n\t  var items = [];\n\t  ids.forEach(function (id) {\n\t    fetchItem(id, addItem);\n\t  });\n\t  function addItem(item) {\n\t    items.push(item);\n\t    if (items.length >= ids.length) {\n\t      cb(items);\n\t    }\n\t  }\n\t}\n\t\n\tfunction storiesRef(path) {\n\t  return api.child(path);\n\t}\n\t\n\tfunction itemRef(id) {\n\t  return api.child('item/' + id);\n\t}\n\t\n\tfunction userRef(id) {\n\t  return api.child('user/' + id);\n\t}\n\t\n\tfunction updatesRef() {\n\t  return api.child('updates/items');\n\t}\n\t\n\tmodule.exports = {\n\t  fetchItem: fetchItem,\n\t  fetchItems: fetchItems,\n\t  storiesRef: storiesRef,\n\t  itemRef: itemRef,\n\t  userRef: userRef,\n\t  updatesRef: updatesRef\n\t};\n\n/***/ },\n/* 13 */,\n/* 14 */,\n/* 15 */,\n/* 16 */,\n/* 17 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\tvar React = __webpack_require__(3);\n\t\n\t// TODO Implement GIF-based fallback for IE9 and another non-animating browsers\n\t//      See https://github.com/tobiasahlin/SpinKit for how-to\n\tvar Spinner = React.createClass({\n\t  displayName: 'Spinner',\n\t\n\t  getDefaultProps: function getDefaultProps() {\n\t    return { size: 6, spacing: 2 };\n\t  },\n\t\n\t  render: function render() {\n\t    var bounceSize = this.props.size + 'px';\n\t    var bounceStyle = { height: bounceSize, width: bounceSize, marginRight: this.props.spacing + 'px' };\n\t    return React.createElement(\n\t      'div',\n\t      { className: 'Spinner', style: { width: (Number(this.props.size) + Number(this.props.spacing)) * 3 + 'px' } },\n\t      React.createElement('div', { className: 'bounce1', style: bounceStyle }),\n\t      React.createElement('div', { className: 'bounce2', style: bounceStyle }),\n\t      React.createElement('div', { className: 'bounce3', style: bounceStyle })\n\t    );\n\t  }\n\t});\n\t\n\tmodule.exports = Spinner;\n\n/***/ },\n/* 18 */,\n/* 19 */,\n/* 20 */,\n/* 21 */,\n/* 22 */,\n/* 23 */\n/***/ function(module, exports) {\n\n\t/**\n\t * Creates a className string including some class names conditionally.\n\t * @param {string=} staticClassName class name(s) which should always be\n\t *   included.\n\t * @param {Object.<string, *>} conditionalClassNames an object mapping class\n\t *   names to a value which indicates if the class name should be included -\n\t *   class names will be included if their corresponding value is truthy.\n\t * @return {string}\n\t */\n\t'use strict';\n\t\n\tfunction buildClassName(staticClassName, conditionalClassNames) {\n\t  var classNames = [];\n\t  if (typeof conditionalClassNames == 'undefined') {\n\t    conditionalClassNames = staticClassName;\n\t  } else {\n\t    classNames.push(staticClassName);\n\t  }\n\t  var classNameKeys = Object.keys(conditionalClassNames);\n\t  for (var i = 0, l = classNameKeys.length; i < l; i++) {\n\t    if (conditionalClassNames[classNameKeys[i]]) {\n\t      classNames.push(classNameKeys[i]);\n\t    }\n\t  }\n\t  return classNames.join(' ');\n\t}\n\t\n\tmodule.exports = buildClassName;\n\n/***/ },\n/* 24 */\n/***/ function(module, exports) {\n\n\t\"use strict\";\n\t\n\tfunction extend(dest, src1, src2) {\n\t  var props = Object.keys(src1);\n\t  for (var i = 0, l = props.length; i < l; i++) {\n\t    dest[props[i]] = src1[props[i]];\n\t  }\n\t  if (src2) {\n\t    props = Object.keys(src2);\n\t    for (i = 0, l = props.length; i < l; i++) {\n\t      dest[props[i]] = src2[props[i]];\n\t    }\n\t  }\n\t  return dest;\n\t}\n\t\n\tmodule.exports = extend;\n\n/***/ },\n/* 25 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\tvar _require = __webpack_require__(37);\n\t\n\tvar SITE_TITLE = _require.SITE_TITLE;\n\t\n\tfunction setTitle(title) {\n\t  document.title = title ? title + ' | ' + SITE_TITLE : SITE_TITLE;\n\t}\n\t\n\tmodule.exports = setTitle;\n\n/***/ },\n/* 26 */,\n/* 27 */,\n/* 28 */,\n/* 29 */,\n/* 30 */,\n/* 31 */,\n/* 32 */,\n/* 33 */,\n/* 34 */,\n/* 35 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\tfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError('Cannot call a class as a function'); } }\n\t\n\tfunction _inherits(subClass, superClass) { if (typeof superClass !== 'function' && superClass !== null) { throw new TypeError('Super expression must either be null or a function, not ' + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n\t\n\tvar _require = __webpack_require__(87);\n\t\n\tvar EventEmitter = _require.EventEmitter;\n\t\n\tvar HNService = __webpack_require__(12);\n\t\n\tvar extend = __webpack_require__(24);\n\t\n\t/**\n\t * Firebase reference used to stream updates - only one StoryStore instance can\n\t * be active at a time.\n\t */\n\tvar firebaseRef = null;\n\t\n\t// Cache objects shared among StoryStore instances, also accessible via static\n\t// functions on the StoryStore constructor.\n\t\n\t/**\n\t * Story ids by type, in rank order. Persisted to sessionStorage.\n\t * @type Object.<type, Array.<id>>\n\t */\n\tvar idCache = {};\n\t\n\t/**\n\t * Item cache. Persisted to sessionStorage.\n\t * @type Object.<id, item>\n\t */\n\tvar itemCache = {};\n\t\n\t/**\n\t * Story items in rank order for display, by type.\n\t * @type Object.<type, Array.<item>>\n\t */\n\tvar storyLists = {};\n\t\n\t/**\n\t * Populate the story list for the given story type from the cache.\n\t */\n\tfunction populateStoryList(type) {\n\t  var ids = idCache[type];\n\t  var storyList = storyLists[type];\n\t  for (var i = 0, l = ids.length; i < l; i++) {\n\t    storyList[i] = itemCache[ids[i]] || null;\n\t  }\n\t}\n\t\n\tfunction parseJSON(json, defaultValue) {\n\t  return json ? JSON.parse(json) : defaultValue;\n\t}\n\t\n\tvar StoryStore = (function (_EventEmitter) {\n\t  _inherits(StoryStore, _EventEmitter);\n\t\n\t  function StoryStore(type) {\n\t    _classCallCheck(this, StoryStore);\n\t\n\t    _EventEmitter.call(this);\n\t    this.type = type;\n\t\n\t    // Ensure cache objects for this type are initialised\n\t    if (!(type in idCache)) {\n\t      idCache[type] = [];\n\t    }\n\t    if (!(type in storyLists)) {\n\t      storyLists[type] = [];\n\t      populateStoryList(type);\n\t    }\n\t\n\t    // Pre-bind event handlers per instance\n\t    this.onStorage = this.onStorage.bind(this);\n\t    this.onStoriesUpdated = this.onStoriesUpdated.bind(this);\n\t  }\n\t\n\t  // Static, cache-related functions\n\t\n\t  StoryStore.prototype.getState = function getState() {\n\t    return {\n\t      ids: idCache[this.type],\n\t      stories: storyLists[this.type]\n\t    };\n\t  };\n\t\n\t  StoryStore.prototype.itemUpdated = function itemUpdated(item, index) {\n\t    storyLists[this.type][index] = item;\n\t    itemCache[item.id] = item;\n\t  };\n\t\n\t  /**\n\t   * Emit an item id event if a storage key corresponding to an item in the\n\t   * cache has changed.\n\t   */\n\t\n\t  StoryStore.prototype.onStorage = function onStorage(e) {\n\t    if (itemCache[e.key]) {\n\t      this.emit(e.key);\n\t    }\n\t  };\n\t\n\t  /**\n\t   * Handle story id snapshots from Firebase.\n\t   */\n\t\n\t  StoryStore.prototype.onStoriesUpdated = function onStoriesUpdated(snapshot) {\n\t    idCache[this.type] = snapshot.val();\n\t    populateStoryList(this.type);\n\t    this.emit('update', this.getState());\n\t  };\n\t\n\t  StoryStore.prototype.start = function start() {\n\t    firebaseRef = HNService.storiesRef(this.type);\n\t    firebaseRef.on('value', this.onStoriesUpdated);\n\t    window.addEventListener('storage', this.onStorage);\n\t  };\n\t\n\t  StoryStore.prototype.stop = function stop() {\n\t    if (firebaseRef !== null) {\n\t      firebaseRef.off();\n\t      firebaseRef = null;\n\t    }\n\t    window.removeEventListener('storage', this.onStorage);\n\t  };\n\t\n\t  return StoryStore;\n\t})(EventEmitter);\n\t\n\textend(StoryStore, {\n\t  /**\n\t   * Get an item from the cache.\n\t   */\n\t  getItem: function getItem(id) {\n\t    return itemCache[id] || null;\n\t  },\n\t\n\t  /**\n\t   * Deserialise caches from sessionStorage.\n\t   */\n\t  loadSession: function loadSession() {\n\t    idCache = parseJSON(window.sessionStorage.idCache, {});\n\t    itemCache = parseJSON(window.sessionStorage.itemCache, {});\n\t  },\n\t\n\t  /**\n\t   * Serialise caches to sessionStorage as JSON.\n\t   */\n\t  saveSession: function saveSession() {\n\t    window.sessionStorage.idCache = JSON.stringify(idCache);\n\t    window.sessionStorage.itemCache = JSON.stringify(itemCache);\n\t  }\n\t});\n\t\n\tmodule.exports = StoryStore;\n\n/***/ },\n/* 36 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\tvar EventEmitter = __webpack_require__(87).EventEmitter;\n\t\n\tvar HNService = __webpack_require__(12);\n\t\n\tvar _require = __webpack_require__(37);\n\t\n\tvar UPDATES_CACHE_SIZE = _require.UPDATES_CACHE_SIZE;\n\t\n\tvar extend = __webpack_require__(24);\n\t\n\t/**\n\t * Firebase reference used to stream updates.\n\t */\n\tvar updatesRef = null;\n\t\n\t/**\n\t * Contains item id -> item cache objects. Persisted to sessionStorage.\n\t * @prop .comments {Object.<id,item>} comments cache.\n\t * @prop .stories {Object.<id,item>} story cache.\n\t */\n\tvar updatesCache = null;\n\t\n\t/**\n\t * Lists of items in reverse chronological order for display.\n\t * @prop .comments {Array.<item>} comment updates.\n\t * @prop .stories {Array.<item>} story updates.\n\t */\n\tvar updates = {};\n\t\n\tfunction sortByTimeDesc(a, b) {\n\t  return b.time - a.time;\n\t}\n\t\n\tfunction cacheObjToSortedArray(obj) {\n\t  var arr = Object.keys(obj).map(function (id) {\n\t    return obj[id];\n\t  });\n\t  arr.sort(sortByTimeDesc);\n\t  return arr;\n\t}\n\t\n\t/**\n\t * Populate lists of updates for display from the cache.\n\t */\n\tfunction populateUpdates() {\n\t  updates.comments = processCacheObj(updatesCache.comments);\n\t  updates.stories = processCacheObj(updatesCache.stories);\n\t}\n\t\n\t/**\n\t * Create an array of items from a cache object, sorted in reverse chronological\n\t * order. Evict the oldest items from the cache if it's grown above\n\t * UPDATES_CACHE_SIZE.\n\t */\n\tfunction processCacheObj(cacheObj) {\n\t  var arr = cacheObjToSortedArray(cacheObj);\n\t  arr.splice(UPDATES_CACHE_SIZE, Math.max(0, arr.length - UPDATES_CACHE_SIZE)).forEach(function (item) {\n\t    delete cacheObj[item.id];\n\t  });\n\t  return arr;\n\t}\n\t\n\t/**\n\t * Lookup to filter out any items which appear in the updates feed which can't\n\t * be displayed by the Updates component.\n\t */\n\tvar updateItemTypes = {\n\t  comment: true,\n\t  job: true,\n\t  poll: true,\n\t  story: true\n\t};\n\t\n\t/**\n\t * Process incoming items from the update stream.\n\t */\n\tfunction handleUpdateItems(items) {\n\t  for (var i = 0, l = items.length; i < l; i++) {\n\t    var item = items[i];\n\t    // Silently ignore deleted items (because irony)\n\t    if (item.deleted) {\n\t      continue;\n\t    }\n\t\n\t    if (typeof updateItemTypes[item.type] == 'undefined') {\n\t      if (false) {\n\t        console.warn(\"An item which can't be displayed by the Updates component was \" + 'received in the updates stream: ' + JSON.stringify(item));\n\t      }\n\t      continue;\n\t    }\n\t\n\t    if (item.type === 'comment') {\n\t      updatesCache.comments[item.id] = item;\n\t    } else {\n\t      updatesCache.stories[item.id] = item;\n\t    }\n\t  }\n\t\n\t  populateUpdates();\n\t  UpdatesStore.emit('updates', updates);\n\t}\n\t\n\tvar UpdatesStore = extend(new EventEmitter(), {\n\t  loadSession: function loadSession() {\n\t    var json = window.sessionStorage.updates;\n\t    updatesCache = json ? JSON.parse(json) : { comments: {}, stories: {} };\n\t    populateUpdates();\n\t  },\n\t\n\t  saveSession: function saveSession() {\n\t    window.sessionStorage.updates = JSON.stringify(updatesCache);\n\t  },\n\t\n\t  start: function start() {\n\t    if (updatesRef === null) {\n\t      updatesRef = HNService.updatesRef();\n\t      updatesRef.on('value', function (snapshot) {\n\t        HNService.fetchItems(snapshot.val(), handleUpdateItems);\n\t      });\n\t    }\n\t  },\n\t\n\t  stop: function stop() {\n\t    updatesRef.off();\n\t    updatesRef = null;\n\t  },\n\t\n\t  getUpdates: function getUpdates() {\n\t    return updates;\n\t  },\n\t\n\t  getItem: function getItem(id) {\n\t    return updatesCache.comments[id] || updatesCache.stories[id] || null;\n\t  },\n\t\n\t  getComment: function getComment(id) {\n\t    return updatesCache.comments[id] || null;\n\t  },\n\t\n\t  getStory: function getStory(id) {\n\t    return updatesCache.stories[id] || null;\n\t  }\n\t});\n\tUpdatesStore.off = UpdatesStore.removeListener;\n\t\n\tmodule.exports = UpdatesStore;\n\n/***/ },\n/* 37 */\n/***/ function(module, exports) {\n\n\t'use strict';\n\t\n\tmodule.exports = {\n\t  ITEMS_PER_PAGE: 30,\n\t  SITE_TITLE: 'React HN',\n\t  UPDATES_CACHE_SIZE: 500\n\t};\n\n/***/ },\n/* 38 */\n/***/ function(module, exports) {\n\n\t'use strict';\n\t\n\tfunction pluralise(howMany, suffixes) {\n\t  return (suffixes || ',s').split(',')[howMany === 1 ? 0 : 1];\n\t}\n\t\n\tmodule.exports = pluralise;\n\n/***/ },\n/* 39 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t/* WEBPACK VAR INJECTION */(function(setImmediate, clearImmediate) {var nextTick = __webpack_require__(86).nextTick;\n\tvar apply = Function.prototype.apply;\n\tvar slice = Array.prototype.slice;\n\tvar immediateIds = {};\n\tvar nextImmediateId = 0;\n\t\n\t// DOM APIs, for completeness\n\t\n\texports.setTimeout = function() {\n\t  return new Timeout(apply.call(setTimeout, window, arguments), clearTimeout);\n\t};\n\texports.setInterval = function() {\n\t  return new Timeout(apply.call(setInterval, window, arguments), clearInterval);\n\t};\n\texports.clearTimeout =\n\texports.clearInterval = function(timeout) { timeout.close(); };\n\t\n\tfunction Timeout(id, clearFn) {\n\t  this._id = id;\n\t  this._clearFn = clearFn;\n\t}\n\tTimeout.prototype.unref = Timeout.prototype.ref = function() {};\n\tTimeout.prototype.close = function() {\n\t  this._clearFn.call(window, this._id);\n\t};\n\t\n\t// Does not start the time, just sets up the members needed.\n\texports.enroll = function(item, msecs) {\n\t  clearTimeout(item._idleTimeoutId);\n\t  item._idleTimeout = msecs;\n\t};\n\t\n\texports.unenroll = function(item) {\n\t  clearTimeout(item._idleTimeoutId);\n\t  item._idleTimeout = -1;\n\t};\n\t\n\texports._unrefActive = exports.active = function(item) {\n\t  clearTimeout(item._idleTimeoutId);\n\t\n\t  var msecs = item._idleTimeout;\n\t  if (msecs >= 0) {\n\t    item._idleTimeoutId = setTimeout(function onTimeout() {\n\t      if (item._onTimeout)\n\t        item._onTimeout();\n\t    }, msecs);\n\t  }\n\t};\n\t\n\t// That's not how node.js implements it but the exposed api is the same.\n\texports.setImmediate = typeof setImmediate === \"function\" ? setImmediate : function(fn) {\n\t  var id = nextImmediateId++;\n\t  var args = arguments.length < 2 ? false : slice.call(arguments, 1);\n\t\n\t  immediateIds[id] = true;\n\t\n\t  nextTick(function onNextTick() {\n\t    if (immediateIds[id]) {\n\t      // fn.call() is faster so we optimize for the common use-case\n\t      // @see http://jsperf.com/call-apply-segu\n\t      if (args) {\n\t        fn.apply(null, args);\n\t      } else {\n\t        fn.call(null);\n\t      }\n\t      // Prevent ids from leaking\n\t      exports.clearImmediate(id);\n\t    }\n\t  });\n\t\n\t  return id;\n\t};\n\t\n\texports.clearImmediate = typeof clearImmediate === \"function\" ? clearImmediate : function(id) {\n\t  delete immediateIds[id];\n\t};\n\t/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(39).setImmediate, __webpack_require__(39).clearImmediate))\n\n/***/ },\n/* 40 */,\n/* 41 */,\n/* 42 */,\n/* 43 */,\n/* 44 */,\n/* 45 */,\n/* 46 */,\n/* 47 */,\n/* 48 */,\n/* 49 */,\n/* 50 */,\n/* 51 */,\n/* 52 */,\n/* 53 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\tvar React = __webpack_require__(3);\n\tvar Link = __webpack_require__(27);\n\tvar TimeAgo = __webpack_require__(43);\n\t\n\tvar ItemStore = __webpack_require__(83);\n\tvar SettingsStore = __webpack_require__(8);\n\t\n\tvar Spinner = __webpack_require__(17);\n\t\n\tvar pluralise = __webpack_require__(38);\n\t\n\tvar CommentMixin = {\n\t  fetchAncestors: function fetchAncestors(comment) {\n\t    var _this = this;\n\t\n\t    ItemStore.fetchCommentAncestors(comment, function (result) {\n\t      if (false) {\n\t        console.info('fetchAncestors(' + comment.id + ') took ' + result.timeTaken + ' ms for ' + result.itemCount + ' item' + pluralise(result.itemCount) + ' with ' + result.cacheHits + ' cache hit' + pluralise(result.cacheHits) + ' (' + (result.cacheHits / result.itemCount * 100).toFixed(1) + '%)');\n\t      }\n\t      if (!_this.isMounted()) {\n\t        if (false) {\n\t          console.info(\"...but the comment isn't mounted\");\n\t        }\n\t        // Too late - the comment or the user has moved elsewhere\n\t        return;\n\t      }\n\t      _this.setState({\n\t        parent: result.parent,\n\t        op: result.op\n\t      });\n\t    });\n\t  },\n\t\n\t  renderCommentLoading: function renderCommentLoading(comment) {\n\t    return React.createElement(\n\t      'div',\n\t      { className: 'Comment Comment--loading Comment--level' + this.props.level },\n\t      (this.props.loadingSpinner || comment.delayed) && React.createElement(Spinner, { size: '20' }),\n\t      comment.delayed && React.createElement(\n\t        'div',\n\t        { className: 'Comment__text' },\n\t        'Unable to load comment – this usually indicates the author has configured a delay. Trying again in 30 seconds.'\n\t      )\n\t    );\n\t  },\n\t\n\t  renderCommentDeleted: function renderCommentDeleted(comment, options) {\n\t    return React.createElement(\n\t      'div',\n\t      { className: options.className },\n\t      React.createElement(\n\t        'div',\n\t        { className: 'Comment__content' },\n\t        React.createElement(\n\t          'div',\n\t          { className: 'Comment__meta' },\n\t          '[deleted] | ',\n\t          React.createElement(\n\t            'a',\n\t            { href: 'https://news.ycombinator.com/item?id=' + comment.id },\n\t            'view on Hacker News'\n\t          )\n\t        )\n\t      )\n\t    );\n\t  },\n\t\n\t  renderError: function renderError(comment, options) {\n\t    return React.createElement(\n\t      'div',\n\t      { className: options.className },\n\t      React.createElement(\n\t        'div',\n\t        { className: 'Comment__content' },\n\t        React.createElement(\n\t          'div',\n\t          { className: 'Comment__meta' },\n\t          '[error] | comment is ',\n\t          JSON.stringify(comment),\n\t          ' | ',\n\t          React.createElement(\n\t            'a',\n\t            { href: 'https://news.ycombinator.com/item?id=' + options.id },\n\t            'view on Hacker News'\n\t          )\n\t        )\n\t      )\n\t    );\n\t  },\n\t\n\t  renderCollapseControl: function renderCollapseControl(collapsed) {\n\t    return React.createElement(\n\t      'span',\n\t      { className: 'Comment__collapse', onClick: this.toggleCollapse, onKeyPress: this.toggleCollapse, tabIndex: '0' },\n\t      '[',\n\t      collapsed ? '+' : '–',\n\t      ']'\n\t    );\n\t  },\n\t\n\t  /**\n\t   * @param options.collapsible {Boolean} if true, assumes this.toggleCollspse()\n\t   * @param options.collapsed {Boolean}\n\t   * @param options.link {Boolean}\n\t   * @param options.parent {Boolean} if true, assumes this.state.parent\n\t   * @param options.op {Boolean} if true, assumes this.state.op\n\t   * @param options.childCounts {Object} with .children and .newComments\n\t   */\n\t  renderCommentMeta: function renderCommentMeta(comment, options) {\n\t    if (comment.dead && !SettingsStore.showDead) {\n\t      return React.createElement(\n\t        'div',\n\t        { className: 'Comment__meta' },\n\t        options.collapsible && this.renderCollapseControl(options.collapsed),\n\t        options.collapsible && ' ',\n\t        '[dead]',\n\t        options.childCounts && ' | (' + options.childCounts.children + ' child' + pluralise(options.childCounts.children, ',ren'),\n\t        options.childCounts && options.childCounts.newComments > 0 && ', ',\n\t        options.childCounts && options.childCounts.newComments > 0 && React.createElement(\n\t          'em',\n\t          null,\n\t          options.childCounts.newComments,\n\t          ' new'\n\t        ),\n\t        options.childCounts && ')'\n\t      );\n\t    }\n\t\n\t    return React.createElement(\n\t      'div',\n\t      { className: 'Comment__meta' },\n\t      options.collapsible && this.renderCollapseControl(options.collapsed),\n\t      options.collapsible && ' ',\n\t      React.createElement(\n\t        Link,\n\t        { to: '/user/' + comment.by, className: 'Comment__user' },\n\t        comment.by\n\t      ),\n\t      ' ',\n\t      React.createElement(TimeAgo, { date: comment.time * 1000 }),\n\t      options.link && ' | ',\n\t      options.link && React.createElement(\n\t        Link,\n\t        { to: '/comment/' + comment.id },\n\t        'link'\n\t      ),\n\t      options.parent && ' | ',\n\t      options.parent && React.createElement(\n\t        Link,\n\t        { to: '/' + this.state.parent.type + '/' + comment.parent },\n\t        'parent'\n\t      ),\n\t      options.op && ' | on: ',\n\t      options.op && React.createElement(\n\t        Link,\n\t        { to: '/' + this.state.op.type + '/' + this.state.op.id },\n\t        this.state.op.title\n\t      ),\n\t      comment.dead && ' | [dead]',\n\t      options.childCounts && ' | (' + options.childCounts.children + ' child' + pluralise(options.childCounts.children, ',ren'),\n\t      options.childCounts && options.childCounts.newComments > 0 && ', ',\n\t      options.childCounts && options.childCounts.newComments > 0 && React.createElement(\n\t        'em',\n\t        null,\n\t        options.childCounts.newComments,\n\t        ' new'\n\t      ),\n\t      options.childCounts && ')'\n\t    );\n\t  },\n\t\n\t  renderCommentText: function renderCommentText(comment, options) {\n\t    return React.createElement(\n\t      'div',\n\t      { className: 'Comment__text' },\n\t      !comment.dead || SettingsStore.showDead ? React.createElement('div', { dangerouslySetInnerHTML: { __html: comment.text } }) : '[dead]',\n\t      SettingsStore.replyLinks && options.replyLink && !comment.dead && React.createElement(\n\t        'p',\n\t        null,\n\t        React.createElement(\n\t          'a',\n\t          { href: 'https://news.ycombinator.com/reply?id=' + comment.id },\n\t          'reply'\n\t        )\n\t      )\n\t    );\n\t  }\n\t};\n\t\n\tmodule.exports = CommentMixin;\n\n/***/ },\n/* 54 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\tvar React = __webpack_require__(3);\n\tvar Link = __webpack_require__(27);\n\tvar TimeAgo = __webpack_require__(43);\n\t\n\tvar SettingsStore = __webpack_require__(8);\n\tvar pluralise = __webpack_require__(38);\n\t\n\tvar parseHost = (function () {\n\t  var a = document.createElement('a');\n\t  return function (url) {\n\t    a.href = url;\n\t    var parts = a.hostname.split('.').slice(-3);\n\t    if (parts[0] === 'www') {\n\t      parts.shift();\n\t    }\n\t    return parts.join('.');\n\t  };\n\t})();\n\t\n\t/**\n\t * Reusable logic for displaying an item.\n\t */\n\tvar ItemMixin = {\n\t  /**\n\t   * Render an item's metadata bar.\n\t   */\n\t  renderItemMeta: function renderItemMeta(item, extraContent) {\n\t    var itemDate = new Date(item.time * 1000);\n\t\n\t    if (item.type === 'job') {\n\t      return React.createElement(\n\t        'div',\n\t        { className: 'Item__meta' },\n\t        React.createElement(TimeAgo, { date: itemDate, className: 'Item__time' })\n\t      );\n\t    }\n\t\n\t    return React.createElement(\n\t      'div',\n\t      { className: 'Item__meta' },\n\t      React.createElement(\n\t        'span',\n\t        { className: 'Item__score' },\n\t        item.score,\n\t        ' point',\n\t        pluralise(item.score)\n\t      ),\n\t      ' ',\n\t      React.createElement(\n\t        'span',\n\t        { className: 'Item__by' },\n\t        'by ',\n\t        React.createElement(\n\t          Link,\n\t          { to: '/user/' + item.by },\n\t          item.by\n\t        )\n\t      ),\n\t      ' ',\n\t      React.createElement(TimeAgo, { date: itemDate, className: 'Item__time' }),\n\t      ' | ',\n\t      React.createElement(\n\t        Link,\n\t        { to: '/' + item.type + '/' + item.id },\n\t        item.descendants > 0 ? item.descendants + ' comment' + pluralise(item.descendants) : 'discuss'\n\t      ),\n\t      extraContent\n\t    );\n\t  },\n\t\n\t  /**\n\t   * Render an item's title bar.\n\t   */\n\t  renderItemTitle: function renderItemTitle(item) {\n\t    var hasURL = !!item.url;\n\t    var title;\n\t    if (item.dead) {\n\t      title = '[dead] ' + item.title;\n\t    } else {\n\t      title = hasURL ? React.createElement(\n\t        'a',\n\t        { href: item.url },\n\t        item.title\n\t      ) : React.createElement(\n\t        Link,\n\t        { to: '/' + item.type + '/' + item.id },\n\t        item.title\n\t      );\n\t    }\n\t    return React.createElement(\n\t      'div',\n\t      { className: 'Item__title', style: { fontSize: SettingsStore.titleFontSize } },\n\t      title,\n\t      hasURL && ' ',\n\t      hasURL && React.createElement(\n\t        'span',\n\t        { className: 'Item__host' },\n\t        '(',\n\t        parseHost(item.url),\n\t        ')'\n\t      )\n\t    );\n\t  }\n\t};\n\t\n\tmodule.exports = ItemMixin;\n\n/***/ },\n/* 55 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\tvar extend = __webpack_require__(24);\n\t\n\tfunction CommentThreadStore(item, onCommentsChanged) {\n\t  this.itemId = item.id;\n\t  this.onCommentsChanged = onCommentsChanged;\n\t\n\t  /**\n\t   * Lookup from a comment id to its child comment ids.\n\t   * @type {Object.<id,Array.<Number>>}\n\t   */\n\t  this.children = {};\n\t  this.children[item.id] = [];\n\t\n\t  /**\n\t   * Lookup for new comment ids. Will only contain true.\n\t   * @type {Object.<id,Boolean>}\n\t   */\n\t  this.isNew = {};\n\t\n\t  /**\n\t   * Lookup for collapsed state of comment ids. May contain true or false.\n\t   * @type {Object.<id,Boolean>}\n\t   */\n\t  this.isCollapsed = {};\n\t}\n\t\n\textend(CommentThreadStore.prototype, {\n\t  /**\n\t   * Get counts of children and new comments under the given comment.\n\t   * @return .children {Number}\n\t   * @return .newComments {Number}\n\t   */\n\t  getChildCounts: function getChildCounts(comment) {\n\t    var childCount = 0;\n\t    var newCommentCount = 0;\n\t    var nodes = [comment.id];\n\t\n\t    while (nodes.length) {\n\t      var nextNodes = [];\n\t      for (var i = 0, l = nodes.length; i < l; i++) {\n\t        var nodeChildren = this.children[nodes[i]];\n\t        if (nodeChildren.length) {\n\t          nextNodes.push.apply(nextNodes, nodeChildren);\n\t        }\n\t      }\n\t      for (i = 0, l = nextNodes.length; i < l; i++) {\n\t        if (this.isNew[nextNodes[i]]) {\n\t          newCommentCount++;\n\t        }\n\t      }\n\t      childCount += nextNodes.length;\n\t      nodes = nextNodes;\n\t    }\n\t\n\t    return {\n\t      children: childCount,\n\t      newComments: newCommentCount\n\t    };\n\t  },\n\t\n\t  /**\n\t   * Register a comment's appearance in the thread.\n\t   */\n\t  commentAdded: function commentAdded(comment) {\n\t    if (comment.deleted) {\n\t      return;\n\t    }\n\t\n\t    this.children[comment.id] = [];\n\t    this.children[comment.parent].push(comment.id);\n\t  },\n\t\n\t  /**\n\t   * Register a comment's deletion from the thread.\n\t   */\n\t  commentDeleted: function commentDeleted(comment) {\n\t    // Comments which initially failed to load (null from Firebase API) can be\n\t    // deleted by the time the API catches up.\n\t    if (!comment) {\n\t      return;\n\t    }\n\t\n\t    var siblings = this.children[comment.parent];\n\t    siblings.splice(siblings.indexOf(comment.id), 1);\n\t  },\n\t\n\t  toggleCollapse: function toggleCollapse(commentId) {\n\t    this.isCollapsed[commentId] = !this.isCollapsed[commentId];\n\t    this.onCommentsChanged({ type: 'collapse' });\n\t  }\n\t});\n\t\n\tmodule.exports = CommentThreadStore;\n\n/***/ },\n/* 56 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\tvar CommentThreadStore = __webpack_require__(55);\n\tvar SettingsStore = __webpack_require__(8);\n\t\n\tvar debounce = __webpack_require__(144);\n\tvar extend = __webpack_require__(24);\n\tvar pluralise = __webpack_require__(38);\n\tvar storage = __webpack_require__(85);\n\t\n\t/**\n\t * Load persisted comment thread state.\n\t * @return .lastVisit {Date} null if the item hasn't been visited before.\n\t * @return .commentCount {Number} 0 if the item hasn't been visited before.\n\t * @return .maxCommentId {Number} 0 if the item hasn't been visited before.\n\t */\n\tfunction loadState(itemId) {\n\t  var json = storage.get(itemId);\n\t  if (json) {\n\t    return JSON.parse(json);\n\t  }\n\t  return {\n\t    lastVisit: null,\n\t    commentCount: 0,\n\t    maxCommentId: 0\n\t  };\n\t}\n\t\n\tfunction StoryCommentThreadStore(item, onCommentsChanged, options) {\n\t  CommentThreadStore.call(this, item, onCommentsChanged);\n\t  this.startedLoading = Date.now();\n\t\n\t  /** Lookup from a comment id to its parent comment id. */\n\t  this.parents = {};\n\t  /** The number of comments which have loaded. */\n\t  this.commentCount = 0;\n\t  /** The number of new comments which have loaded. */\n\t  this.newCommentCount = 0;\n\t  /** The max comment id seen by the store. */\n\t  this.maxCommentId = 0;\n\t  /** Has the comment thread finished loading? */\n\t  this.loading = true;\n\t  /** The number of comments we're expecting to load. */\n\t  this.expectedComments = item.kids ? item.kids.length : 0;\n\t  /**\n\t   * The number of descendants the story has according to the API.\n\t   * This count includes deleted comments, which aren't accessible via the API,\n\t   * so a thread with deleted comments (example story id: 9273709) will never\n\t   * load this number of comments\n\t   * However, we still need to persist the last known descendant count in order\n\t   * to determine how many new comments there are when displaying the story on a\n\t   * list page.\n\t   */\n\t  this.itemDescendantCount = item.descendants;\n\t\n\t  var initialState = loadState(item.id);\n\t  /** Time of last visit to the story. */\n\t  this.lastVisit = initialState.lastVisit;\n\t  /** Max comment id on the last visit - determines which comments are new. */\n\t  this.prevMaxCommentId = initialState.maxCommentId;\n\t  /** Is this the user's first time viewing the story? */\n\t  this.isFirstVisit = initialState.lastVisit === null;\n\t\n\t  // Trigger an immediate check for thread load completion if the item was not\n\t  // retrieved from the cache, so is the latest version. This completes page\n\t  // loading immediately for items which have no comments yet.\n\t  if (!options.cached) {\n\t    this.checkLoadCompletion();\n\t  }\n\t}\n\t\n\tStoryCommentThreadStore.loadState = loadState;\n\t\n\tStoryCommentThreadStore.prototype = extend(Object.create(CommentThreadStore.prototype), {\n\t  constructor: StoryCommentThreadStore,\n\t\n\t  /**\n\t   * Callback to the item component with updated comment counts, debounced as\n\t   * comments will be loading frequently on initial load.\n\t   */\n\t  numberOfCommentsChanged: debounce(function () {\n\t    this.onCommentsChanged({ type: 'number' });\n\t  }, 123),\n\t\n\t  /**\n\t   * If we don't have a last visit time stored for an item, it must have been\n\t   * visited for the first time. Once it finishes loading, establish the last\n\t   * visit time and max comment id which will be used to track and display new\n\t   * comments.\n\t   */\n\t  firstLoadComplete: function firstLoadComplete() {\n\t    this.lastVisit = Date.now();\n\t    this.prevMaxCommentId = this.maxCommentId;\n\t    this.isFirstVisit = false;\n\t    this.onCommentsChanged({ type: 'first_load_complete' });\n\t  },\n\t\n\t  /**\n\t   * Check whether the number of comments has reached the expected number yet.\n\t   */\n\t  checkLoadCompletion: function checkLoadCompletion() {\n\t    if (this.loading && this.commentCount >= this.expectedComments) {\n\t      if (false) {\n\t        console.info('Initial load of ' + this.commentCount + ' comment' + pluralise(this.commentCount) + ' for ' + this.itemId + ' took ' + ((Date.now() - this.startedLoading) / 1000).toFixed(2) + 's');\n\t      }\n\t      this.loading = false;\n\t      if (this.isFirstVisit) {\n\t        this.firstLoadComplete();\n\t      } else if (SettingsStore.autoCollapse && this.newCommentCount > 0) {\n\t        this.collapseThreadsWithoutNewComments();\n\t      }\n\t      this._storeState();\n\t    }\n\t  },\n\t\n\t  /**\n\t   * Persist comment thread state.\n\t   */\n\t  _storeState: function _storeState() {\n\t    storage.set(this.itemId, JSON.stringify({\n\t      lastVisit: Date.now(),\n\t      commentCount: this.itemDescendantCount,\n\t      maxCommentId: this.maxCommentId\n\t    }));\n\t  },\n\t\n\t  /**\n\t   * The item this comment thread belongs to got updated.\n\t   */\n\t  itemUpdated: function itemUpdated(item) {\n\t    this.itemDescendantCount = item.descendants;\n\t  },\n\t\n\t  /**\n\t   * A comment got loaded initially or added later.\n\t   */\n\t  commentAdded: function commentAdded(comment) {\n\t    // Deleted comments don't count towards the comment count\n\t    if (comment.deleted) {\n\t      // Adjust the number of comments expected during the initial page load.\n\t      if (this.loading) {\n\t        this.expectedComments--;\n\t        this.checkLoadCompletion();\n\t      }\n\t      return;\n\t    }\n\t\n\t    CommentThreadStore.prototype.commentAdded.call(this, comment);\n\t\n\t    // Dead comments don't contribute to the comment count if showDead is off\n\t    if (comment.dead && !SettingsStore.showDead) {\n\t      this.expectedComments--;\n\t    } else {\n\t      this.commentCount++;\n\t    }\n\t    // Add the number of kids the comment has to the expected total for the\n\t    // initial load.\n\t    if (this.loading && comment.kids) {\n\t      this.expectedComments += comment.kids.length;\n\t    }\n\t    // Register the comment as new if it's new, unless it's dead and showDead is off\n\t    if (this.prevMaxCommentId > 0 && comment.id > this.prevMaxCommentId && (!comment.dead || SettingsStore.showDead)) {\n\t      this.newCommentCount++;\n\t      this.isNew[comment.id] = true;\n\t    }\n\t    // Keep track of the biggest comment id seen\n\t    if (comment.id > this.maxCommentId) {\n\t      this.maxCommentId = comment.id;\n\t    }\n\t    // We don't want the story to be part of the comment parent hierarchy\n\t    if (comment.parent !== this.itemId) {\n\t      this.parents[comment.id] = comment.parent;\n\t    }\n\t\n\t    this.numberOfCommentsChanged();\n\t    if (this.loading) {\n\t      this.checkLoadCompletion();\n\t    }\n\t  },\n\t\n\t  /**\n\t   * A comment which hasn't loaded yet is being delayed.\n\t   */\n\t  commentDelayed: function commentDelayed(commentId) {\n\t    // Don't wait for delayed comments\n\t    this.expectedComments--;\n\t  },\n\t\n\t  /**\n\t   * A comment which wasn't previously deleted became deleted.\n\t   */\n\t  commentDeleted: function commentDeleted(comment) {\n\t    CommentThreadStore.prototype.commentDeleted.call(this, comment);\n\t    this.commentCount--;\n\t    if (this.isNew[comment.id]) {\n\t      this.newCommentCount--;\n\t      delete this.isNew[comment.id];\n\t    }\n\t    delete this.parents[comment.id];\n\t    // Trigger debounced callbacks\n\t    this.numberOfCommentsChanged();\n\t  },\n\t\n\t  /**\n\t   * A comment which wasn't previously dead became dead.\n\t   */\n\t  commentDied: function commentDied(comment) {\n\t    if (!SettingsStore.showDead) {\n\t      this.commentCount--;\n\t      if (this.isNew[comment.id]) {\n\t        this.newCommentCount--;\n\t        delete this.isNew[comment.id];\n\t      }\n\t    }\n\t  },\n\t\n\t  /**\n\t   * Change the expected number of comments if an update was received during\n\t   * initial loding and trigger a re-check of loading completion.\n\t   */\n\t  adjustExpectedComments: function adjustExpectedComments(change) {\n\t    this.expectedComments += change;\n\t    this.checkLoadCompletion();\n\t  },\n\t\n\t  collapseThreadsWithoutNewComments: function collapseThreadsWithoutNewComments() {\n\t    // Create an id lookup for comments which have a new comment as one of their\n\t    // descendants. New comments themselves are not added to the lookup.\n\t    var newCommentIds = Object.keys(this.isNew);\n\t    var hasNewComments = {};\n\t    for (var i = 0, l = newCommentIds.length; i < l; i++) {\n\t      var parent = this.parents[newCommentIds[i]];\n\t      while (parent) {\n\t        // Stop when we hit one we've seen before\n\t        if (hasNewComments[parent]) {\n\t          break;\n\t        }\n\t        hasNewComments[parent] = true;\n\t        parent = this.parents[parent];\n\t      }\n\t    }\n\t\n\t    // Walk the tree of comments one level at a time, only walking children to\n\t    // comments we know have new comment descendants, to find subtrees which\n\t    // don't have new comments.\n\t    // Other comments are marked for collapsing unless they are themselves a\n\t    // new comment (in which case all their replies must be new too).\n\t    var shouldCollapse = {};\n\t    var commentIds = this.children[this.itemId];\n\t    while (commentIds.length) {\n\t      var nextCommentIds = [];\n\t      for (i = 0, l = commentIds.length; i < l; i++) {\n\t        var commentId = commentIds[i];\n\t        if (!hasNewComments[commentId]) {\n\t          if (!this.isNew[commentId]) {\n\t            shouldCollapse[commentId] = true;\n\t          }\n\t        } else {\n\t          var childCommentIds = this.children[commentId];\n\t          if (childCommentIds.length) {\n\t            nextCommentIds.push.apply(nextCommentIds, childCommentIds);\n\t          }\n\t        }\n\t      }\n\t      commentIds = nextCommentIds;\n\t    }\n\t\n\t    this.isCollapsed = shouldCollapse;\n\t    this.onCommentsChanged({ type: 'collapse' });\n\t  },\n\t\n\t  /**\n\t   * Merk the thread as read.\n\t   */\n\t  markAsRead: function markAsRead() {\n\t    this.lastVisit = Date.now();\n\t    this.newCommentCount = 0;\n\t    this.prevMaxCommentId = this.maxCommentId;\n\t    this.isNew = {};\n\t    this._storeState();\n\t  },\n\t\n\t  /**\n\t   * Persist comment thread state and perform any necessary internal cleanup.\n\t   */\n\t  dispose: function dispose() {\n\t    // Cancel debounced callbacks in case any are pending\n\t    this.numberOfCommentsChanged.cancel();\n\t    this._storeState();\n\t  }\n\t});\n\t\n\tmodule.exports = StoryCommentThreadStore;\n\n/***/ },\n/* 57 */,\n/* 58 */,\n/* 59 */,\n/* 60 */,\n/* 61 */,\n/* 62 */,\n/* 63 */,\n/* 64 */,\n/* 65 */,\n/* 66 */,\n/* 67 */,\n/* 68 */,\n/* 69 */,\n/* 70 */,\n/* 71 */,\n/* 72 */,\n/* 73 */,\n/* 74 */,\n/* 75 */,\n/* 76 */,\n/* 77 */,\n/* 78 */,\n/* 79 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\tvar React = __webpack_require__(3);\n\tvar ReactFireMixin = __webpack_require__(22);\n\t\n\tvar CommentThreadStore = __webpack_require__(55);\n\tvar HNService = __webpack_require__(12);\n\tvar SettingsStore = __webpack_require__(8);\n\t\n\tvar CommentMixin = __webpack_require__(53);\n\t\n\tvar cx = __webpack_require__(23);\n\t\n\t/**\n\t * A comment in a thread.\n\t */\n\tvar Comment = React.createClass({\n\t  displayName: 'Comment',\n\t\n\t  mixins: [CommentMixin, ReactFireMixin],\n\t\n\t  propTypes: {\n\t    id: React.PropTypes.number.isRequired,\n\t    level: React.PropTypes.number.isRequired,\n\t    loadingSpinner: React.PropTypes.bool,\n\t    threadStore: React.PropTypes.instanceOf(CommentThreadStore).isRequired\n\t  },\n\t\n\t  getDefaultProps: function getDefaultProps() {\n\t    return {\n\t      loadingSpinner: false\n\t    };\n\t  },\n\t\n\t  getInitialState: function getInitialState() {\n\t    return {\n\t      comment: {}\n\t    };\n\t  },\n\t\n\t  componentWillMount: function componentWillMount() {\n\t    this.bindFirebaseRef();\n\t  },\n\t\n\t  componentWillUnmount: function componentWillUnmount() {\n\t    this.clearDelayTimeout();\n\t  },\n\t\n\t  componentDidUpdate: function componentDidUpdate(prevProps, prevState) {\n\t    // Huge, fast-growing threads like https://news.ycombinator.com/item?id=9784470\n\t    // seem to break the API - some comments are coming back from Firebase as null.\n\t    if (!this.state.comment) {\n\t      this.props.threadStore.adjustExpectedComments(-1);\n\t      return;\n\t    }\n\t\n\t    // On !prevState.comment: a comment which was initially null - see\n\t    // above - may eventually load when the API catches up.\n\t    if (!prevState.comment || !prevState.comment.id) {\n\t      // Register a newly-loaded comment with the thread store\n\t      if (this.state.comment.id) {\n\t        // If the comment was delayed, cancel any pending timeout\n\t        if (prevState.comment && prevState.comment.delayed) {\n\t          this.clearDelayTimeout();\n\t        }\n\t        this.props.threadStore.commentAdded(this.state.comment);\n\t      }\n\t      if (prevState.comment && !prevState.comment.delayed && this.state.comment.delayed) {\n\t        this.props.threadStore.commentDelayed(this.props.id);\n\t      }\n\t    }\n\t    // The comment was already loaded, look for changes to it\n\t    else {\n\t        if (!prevState.comment.deleted && this.state.comment.deleted) {\n\t          this.props.threadStore.commentDeleted(this.state.comment);\n\t        }\n\t        if (!prevState.comment.dead && this.state.comment.dead) {\n\t          this.props.threadStore.commentDied(this.state.comment);\n\t        }\n\t        // If the comment has been updated and the initial set of comments is\n\t        // still loading, the number of expected comments might need to be\n\t        // adjusted.\n\t        else if (prevState.comment !== this.state.comment && this.props.threadStore.loading) {\n\t            var kids = this.state.comment.kids ? this.state.comment.kids.length : 0;\n\t            var prevKids = prevState.comment.kids ? prevState.comment.kids.length : 0;\n\t            this.props.threadStore.adjustExpectedComments(kids - prevKids);\n\t          }\n\t      }\n\t  },\n\t\n\t  bindFirebaseRef: function bindFirebaseRef() {\n\t    this.bindAsObject(HNService.itemRef(this.props.id), 'comment', this.handleFirebaseRefCancelled);\n\t    if (this.timeout) {\n\t      this.timeout = null;\n\t    }\n\t  },\n\t\n\t  /**\n\t   * This is usually caused by a permissions error loading the comment due to\n\t   * its author using the delay setting (note: this is conjecture), which is\n\t   * measured in minutes - try again in 30 seconds.\n\t   */\n\t  handleFirebaseRefCancelled: function handleFirebaseRefCancelled(e) {\n\t    if (false) {\n\t      console.error('Firebase ref for comment ' + this.props.id + ' was cancelled: ' + e.message);\n\t    }\n\t    this.unbind('comment');\n\t    this.timeout = setTimeout(this.bindFirebaseRef, 30000);\n\t    if (this.state.comment && !this.state.comment.delayed) {\n\t      this.state.comment.delayed = true;\n\t      this.forceUpdate();\n\t    }\n\t  },\n\t\n\t  clearDelayTimeout: function clearDelayTimeout() {\n\t    if (this.timeout) {\n\t      clearTimeout(this.timeout);\n\t      this.timeout = null;\n\t    }\n\t  },\n\t\n\t  toggleCollapse: function toggleCollapse(e) {\n\t    e.preventDefault();\n\t    this.props.threadStore.toggleCollapse(this.state.comment.id);\n\t  },\n\t\n\t  render: function render() {\n\t    var comment = this.state.comment;\n\t    var props = this.props;\n\t    if (!comment) {\n\t      return this.renderError(comment, {\n\t        id: this.props.id,\n\t        className: 'Comment Comment--error Comment--level' + props.level\n\t      });\n\t    }\n\t    // Render a placeholder while we're waiting for the comment to load\n\t    if (!comment.id) {\n\t      return this.renderCommentLoading(comment);\n\t    }\n\t    // Don't show dead coments or their children, when configured\n\t    if (comment.dead && !SettingsStore.showDead) {\n\t      return null;\n\t    }\n\t    // Render a link to HN for deleted comments if they're being displayed\n\t    if (comment.deleted) {\n\t      if (!SettingsStore.showDeleted) {\n\t        return null;\n\t      }\n\t      return this.renderCommentDeleted(comment, {\n\t        className: 'Comment Comment--deleted Comment--level' + props.level\n\t      });\n\t    }\n\t\n\t    var isNew = props.threadStore.isNew[comment.id];\n\t    var collapsed = !!props.threadStore.isCollapsed[comment.id];\n\t    var childCounts = collapsed && props.threadStore.getChildCounts(comment);\n\t    if (collapsed && isNew) {\n\t      childCounts.newComments = 0;\n\t    }\n\t    var className = cx('Comment Comment--level' + props.level, {\n\t      'Comment--collapsed': collapsed,\n\t      'Comment--dead': comment.dead,\n\t      'Comment--new': isNew\n\t    });\n\t\n\t    return React.createElement(\n\t      'div',\n\t      { className: className },\n\t      React.createElement(\n\t        'div',\n\t        { className: 'Comment__content' },\n\t        this.renderCommentMeta(comment, {\n\t          collapsible: true,\n\t          collapsed: collapsed,\n\t          link: true,\n\t          childCounts: childCounts\n\t        }),\n\t        this.renderCommentText(comment, { replyLink: true })\n\t      ),\n\t      comment.kids && React.createElement(\n\t        'div',\n\t        { className: 'Comment__kids' },\n\t        comment.kids.map(function (id) {\n\t          return React.createElement(Comment, { key: id, id: id,\n\t            level: props.level + 1,\n\t            loadingSpinner: props.loadingSpinner,\n\t            threadStore: props.threadStore\n\t          });\n\t        })\n\t      )\n\t    );\n\t  }\n\t});\n\t\n\tmodule.exports = Comment;\n\n/***/ },\n/* 80 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\tvar React = __webpack_require__(3);\n\tvar Link = __webpack_require__(27);\n\t\n\tvar Paginator = React.createClass({\n\t  displayName: 'Paginator',\n\t\n\t  _onClick: function _onClick(e) {\n\t    setTimeout(function () {\n\t      window.scrollTo(0, 0);\n\t    }, 0);\n\t  },\n\t\n\t  render: function render() {\n\t    if (this.props.page === 1 && !this.props.hasNext) {\n\t      return null;\n\t    }\n\t    return React.createElement(\n\t      'div',\n\t      { className: 'Paginator' },\n\t      this.props.page > 1 && React.createElement(\n\t        'span',\n\t        { className: 'Paginator__prev' },\n\t        React.createElement(\n\t          Link,\n\t          { to: '/' + this.props.route, query: { page: this.props.page - 1 }, onClick: this._onClick },\n\t          'Prev'\n\t        )\n\t      ),\n\t      this.props.page > 1 && this.props.hasNext && ' | ',\n\t      this.props.hasNext && React.createElement(\n\t        'span',\n\t        { className: 'Paginator__next' },\n\t        React.createElement(\n\t          Link,\n\t          { to: '/' + this.props.route, query: { page: this.props.page + 1 }, onClick: this._onClick },\n\t          'More'\n\t        )\n\t      )\n\t    );\n\t  }\n\t});\n\t\n\tmodule.exports = Paginator;\n\n/***/ },\n/* 81 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\tvar React = __webpack_require__(3);\n\tvar Link = __webpack_require__(27);\n\t\n\tvar SettingsStore = __webpack_require__(8);\n\tvar cx = __webpack_require__(23);\n\t\n\t/**\n\t * Reusable logic for displaying an item in a list.\n\t * Must be used in conjunction with ItemMixin for its rendering methods.\n\t */\n\tvar ListItemMixin = {\n\t  getNewCommentCount: function getNewCommentCount(item, threadState) {\n\t    if (threadState.lastVisit === null) {\n\t      return 0;\n\t    }\n\t    return item.descendants - threadState.commentCount;\n\t  },\n\t\n\t  renderListItem: function renderListItem(item, threadState) {\n\t    if (item.deleted) {\n\t      return null;\n\t    }\n\t    var newCommentCount = this.getNewCommentCount(item, threadState);\n\t    return React.createElement(\n\t      'li',\n\t      { className: cx('ListItem', { 'ListItem--dead': item.dead }), style: { marginBottom: SettingsStore.listSpacing } },\n\t      this.renderItemTitle(item),\n\t      this.renderItemMeta(item, newCommentCount > 0 && React.createElement(\n\t        'span',\n\t        { className: 'ListItem__newcomments' },\n\t        ' ',\n\t        '(',\n\t        React.createElement(\n\t          Link,\n\t          { to: '/' + item.type + '/' + item.id },\n\t          newCommentCount,\n\t          ' new'\n\t        ),\n\t        ')'\n\t      ))\n\t    );\n\t  }\n\t};\n\t\n\tmodule.exports = ListItemMixin;\n\n/***/ },\n/* 82 */\n/***/ function(module, exports) {\n\n\t'use strict';\n\t\n\tvar PageNumberMixin = {\n\t  getPageNumber: function getPageNumber(page) {\n\t    if (typeof page == 'undefined') {\n\t      page = this.props.location.query.page;\n\t    }\n\t    return page && /^\\d+$/.test(page) ? Math.max(1, Number(page)) : 1;\n\t  }\n\t};\n\t\n\tmodule.exports = PageNumberMixin;\n\n/***/ },\n/* 83 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t/* WEBPACK VAR INJECTION */(function(setImmediate) {'use strict';\n\t\n\tvar HNService = __webpack_require__(12);\n\t\n\tvar StoryStore = __webpack_require__(35);\n\tvar UpdatesStore = __webpack_require__(36);\n\t\n\tvar commentParentLookup = {};\n\tvar titleCache = {};\n\t\n\tfunction fetchCommentParent(comment, cb, result) {\n\t  var commentId = comment.id;\n\t  var parentId = comment.parent;\n\t\n\t  while (commentParentLookup[parentId] || titleCache[parentId]) {\n\t    // We just saved ourselves an item fetch\n\t    result.itemCount++;\n\t    result.cacheHits++;\n\t\n\t    // The parent is a known non-comment\n\t    if (titleCache[parentId]) {\n\t      if (result.itemCount === 1) {\n\t        result.parent = titleCache[parentId];\n\t      }\n\t      result.op = titleCache[parentId];\n\t      cb(result);\n\t      return;\n\t    }\n\t\n\t    // The parent is a known comment\n\t    if (commentParentLookup[parentId]) {\n\t      if (result.itemCount === 1) {\n\t        result.parent = { id: parentId, type: 'comment' };\n\t      }\n\t      // Set the parent comment's ids up for the next iteration\n\t      commentId = parentId;\n\t      parentId = commentParentLookup[parentId];\n\t    }\n\t  }\n\t\n\t  // The parent of the current comment isn't known, so we'll have to fetch it\n\t  ItemStore.getItem(parentId, function (parent) {\n\t    result.itemCount++;\n\t    // Add the current comment's parent to the lookup for next time\n\t    commentParentLookup[commentId] = parentId;\n\t    if (parent.type === 'comment') {\n\t      commentParentLookup[parent.id] = parent.parent;\n\t    }\n\t    processCommentParent(parent, cb, result);\n\t  }, result);\n\t}\n\t\n\tfunction processCommentParent(item, cb, result) {\n\t  if (result.itemCount === 1) {\n\t    result.parent = item;\n\t  }\n\t  if (item.type !== 'comment') {\n\t    result.op = item;\n\t    titleCache[item.id] = {\n\t      id: item.id,\n\t      type: item.type,\n\t      title: item.title\n\t    };\n\t    cb(result);\n\t  } else {\n\t    fetchCommentParent(item, cb, result);\n\t  }\n\t}\n\t\n\tvar ItemStore = {\n\t  getItem: function getItem(id, cb, result) {\n\t    var cachedItem = this.getCachedItem(id);\n\t    if (cachedItem) {\n\t      if (result) {\n\t        result.cacheHits++;\n\t      }\n\t      setImmediate(cb, cachedItem);\n\t    } else {\n\t      HNService.fetchItem(id, cb);\n\t    }\n\t  },\n\t\n\t  getCachedItem: function getCachedItem(id) {\n\t    return StoryStore.getItem(id) || UpdatesStore.getItem(id) || null;\n\t  },\n\t\n\t  getCachedStory: function getCachedStory(id) {\n\t    return StoryStore.getItem(id) || UpdatesStore.getStory(id) || null;\n\t  },\n\t\n\t  fetchCommentAncestors: function fetchCommentAncestors(comment, cb) {\n\t    var startTime = Date.now();\n\t    var result = { itemCount: 0, cacheHits: 0 };\n\t    fetchCommentParent(comment, function () {\n\t      result.timeTaken = Date.now() - startTime;\n\t      setImmediate(cb, result);\n\t    }, result);\n\t  }\n\t};\n\t\n\tmodule.exports = ItemStore;\n\t/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(39).setImmediate))\n\n/***/ },\n/* 84 */\n/***/ function(module, exports) {\n\n\t\"use strict\";\n\t\n\tfunction pageCalc(pageNum, pageSize, numItems) {\n\t  var startIndex = (pageNum - 1) * pageSize;\n\t  var endIndex = Math.min(numItems, startIndex + pageSize);\n\t  var hasNext = endIndex < numItems - 1;\n\t  return { pageNum: pageNum, startIndex: startIndex, endIndex: endIndex, hasNext: hasNext };\n\t}\n\t\n\tmodule.exports = pageCalc;\n\n/***/ },\n/* 85 */\n/***/ function(module, exports) {\n\n\t'use strict';\n\t\n\tmodule.exports = {\n\t  get: function get(key, defaultValue) {\n\t    var value = window.localStorage[key];\n\t    return typeof value != 'undefined' ? value : defaultValue;\n\t  },\n\t  set: function set(key, value) {\n\t    window.localStorage[key] = value;\n\t  }\n\t};\n\n/***/ },\n/* 86 */\n/***/ function(module, exports) {\n\n\t// shim for using process in browser\n\t\n\tvar process = module.exports = {};\n\tvar queue = [];\n\tvar draining = false;\n\tvar currentQueue;\n\tvar queueIndex = -1;\n\t\n\tfunction cleanUpNextTick() {\n\t    draining = false;\n\t    if (currentQueue.length) {\n\t        queue = currentQueue.concat(queue);\n\t    } else {\n\t        queueIndex = -1;\n\t    }\n\t    if (queue.length) {\n\t        drainQueue();\n\t    }\n\t}\n\t\n\tfunction drainQueue() {\n\t    if (draining) {\n\t        return;\n\t    }\n\t    var timeout = setTimeout(cleanUpNextTick);\n\t    draining = true;\n\t\n\t    var len = queue.length;\n\t    while(len) {\n\t        currentQueue = queue;\n\t        queue = [];\n\t        while (++queueIndex < len) {\n\t            if (currentQueue) {\n\t                currentQueue[queueIndex].run();\n\t            }\n\t        }\n\t        queueIndex = -1;\n\t        len = queue.length;\n\t    }\n\t    currentQueue = null;\n\t    draining = false;\n\t    clearTimeout(timeout);\n\t}\n\t\n\tprocess.nextTick = function (fun) {\n\t    var args = new Array(arguments.length - 1);\n\t    if (arguments.length > 1) {\n\t        for (var i = 1; i < arguments.length; i++) {\n\t            args[i - 1] = arguments[i];\n\t        }\n\t    }\n\t    queue.push(new Item(fun, args));\n\t    if (queue.length === 1 && !draining) {\n\t        setTimeout(drainQueue, 0);\n\t    }\n\t};\n\t\n\t// v8 likes predictible objects\n\tfunction Item(fun, array) {\n\t    this.fun = fun;\n\t    this.array = array;\n\t}\n\tItem.prototype.run = function () {\n\t    this.fun.apply(null, this.array);\n\t};\n\tprocess.title = 'browser';\n\tprocess.browser = true;\n\tprocess.env = {};\n\tprocess.argv = [];\n\tprocess.version = ''; // empty string to avoid regexp issues\n\tprocess.versions = {};\n\t\n\tfunction noop() {}\n\t\n\tprocess.on = noop;\n\tprocess.addListener = noop;\n\tprocess.once = noop;\n\tprocess.off = noop;\n\tprocess.removeListener = noop;\n\tprocess.removeAllListeners = noop;\n\tprocess.emit = noop;\n\t\n\tprocess.binding = function (name) {\n\t    throw new Error('process.binding is not supported');\n\t};\n\t\n\tprocess.cwd = function () { return '/' };\n\tprocess.chdir = function (dir) {\n\t    throw new Error('process.chdir is not supported');\n\t};\n\tprocess.umask = function() { return 0; };\n\n\n/***/ },\n/* 87 */,\n/* 88 */,\n/* 89 */,\n/* 90 */,\n/* 91 */,\n/* 92 */,\n/* 93 */,\n/* 94 */,\n/* 95 */,\n/* 96 */,\n/* 97 */,\n/* 98 */,\n/* 99 */,\n/* 100 */,\n/* 101 */,\n/* 102 */,\n/* 103 */,\n/* 104 */,\n/* 105 */,\n/* 106 */,\n/* 107 */,\n/* 108 */,\n/* 109 */,\n/* 110 */,\n/* 111 */,\n/* 112 */,\n/* 113 */,\n/* 114 */,\n/* 115 */,\n/* 116 */,\n/* 117 */,\n/* 118 */,\n/* 119 */,\n/* 120 */,\n/* 121 */,\n/* 122 */,\n/* 123 */,\n/* 124 */,\n/* 125 */,\n/* 126 */,\n/* 127 */,\n/* 128 */,\n/* 129 */,\n/* 130 */,\n/* 131 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\tvar React = __webpack_require__(3);\n\tvar Link = __webpack_require__(27);\n\t\n\tvar Settings = __webpack_require__(138);\n\t\n\tvar StoryStore = __webpack_require__(35);\n\tvar UpdatesStore = __webpack_require__(36);\n\tvar SettingsStore = __webpack_require__(8);\n\t\n\tvar App = React.createClass({\n\t  displayName: 'App',\n\t\n\t  getInitialState: function getInitialState() {\n\t    return {\n\t      showSettings: false\n\t    };\n\t  },\n\t\n\t  componentWillMount: function componentWillMount() {\n\t    SettingsStore.load();\n\t    StoryStore.loadSession();\n\t    UpdatesStore.loadSession();\n\t    window.addEventListener('beforeunload', this.handleBeforeUnload);\n\t  },\n\t\n\t  componentWillUnmount: function componentWillUnmount() {\n\t    window.removeEventListener('beforeunload', this.handleBeforeUnload);\n\t  },\n\t\n\t  /**\n\t   * Give stores a chance to persist data to sessionStorage in case this is a\n\t   * refresh or an external link in the same tab.\n\t   */\n\t  handleBeforeUnload: function handleBeforeUnload() {\n\t    StoryStore.saveSession();\n\t    UpdatesStore.saveSession();\n\t  },\n\t\n\t  toggleSettings: function toggleSettings(e) {\n\t    e.preventDefault();\n\t    this.setState({ showSettings: !this.state.showSettings });\n\t  },\n\t\n\t  render: function render() {\n\t    return React.createElement(\n\t      'div',\n\t      { className: 'App', onClick: this.state.showSettings && this.toggleSettings },\n\t      React.createElement(\n\t        'div',\n\t        { className: 'App__wrap' },\n\t        React.createElement(\n\t          'div',\n\t          { className: 'App__header' },\n\t          React.createElement('img', { src: 'img/logo.png', width: '16', height: '16', alt: '' }),\n\t          ' ',\n\t          React.createElement(\n\t            Link,\n\t            { to: '/news', activeClassName: 'active', className: 'App__homelink' },\n\t            'React HN'\n\t          ),\n\t          ' ',\n\t          React.createElement(\n\t            Link,\n\t            { to: '/newest', activeClassName: 'active' },\n\t            'new'\n\t          ),\n\t          ' | ',\n\t          React.createElement(\n\t            Link,\n\t            { to: '/newcomments', activeClassName: 'active' },\n\t            'comments'\n\t          ),\n\t          ' ',\n\t          ' | ',\n\t          React.createElement(\n\t            Link,\n\t            { to: '/show', activeClassName: 'active' },\n\t            'show'\n\t          ),\n\t          ' | ',\n\t          React.createElement(\n\t            Link,\n\t            { to: '/ask', activeClassName: 'active' },\n\t            'ask'\n\t          ),\n\t          ' | ',\n\t          React.createElement(\n\t            Link,\n\t            { to: '/jobs', activeClassName: 'active' },\n\t            'jobs'\n\t          ),\n\t          React.createElement(\n\t            'a',\n\t            { className: 'App__settings', tabIndex: '0', onClick: this.toggleSettings, onKeyPress: this.toggleSettings },\n\t            this.state.showSettings ? 'hide settings' : 'settings'\n\t          ),\n\t          this.state.showSettings && React.createElement(Settings, { key: 'settings' })\n\t        ),\n\t        React.createElement(\n\t          'div',\n\t          { className: 'App__content' },\n\t          this.props.children\n\t        ),\n\t        React.createElement(\n\t          'div',\n\t          { className: 'App__footer' },\n\t          'react-hn v' + (\"1.4.3\") + ' | ',\n\t          React.createElement(\n\t            'a',\n\t            { href: 'https://github.com/insin/react-hn' },\n\t            'insin/react-hn'\n\t          )\n\t        )\n\t      )\n\t    );\n\t  }\n\t});\n\t\n\tmodule.exports = App;\n\n/***/ },\n/* 132 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\tvar React = __webpack_require__(3);\n\t\n\tvar SettingsStore = __webpack_require__(8);\n\t\n\tvar CommentMixin = __webpack_require__(53);\n\t\n\tvar cx = __webpack_require__(23);\n\t\n\t/**\n\t * Displays a standalone comment passed as a prop.\n\t */\n\tvar DisplayComment = React.createClass({\n\t  displayName: 'DisplayComment',\n\t\n\t  mixins: [CommentMixin],\n\t\n\t  propTypes: {\n\t    comment: React.PropTypes.object.isRequired\n\t  },\n\t\n\t  getInitialState: function getInitialState() {\n\t    return {\n\t      op: {},\n\t      parent: { type: 'comment' }\n\t    };\n\t  },\n\t\n\t  componentWillMount: function componentWillMount() {\n\t    this.fetchAncestors(this.props.comment);\n\t  },\n\t\n\t  render: function render() {\n\t    if (this.props.comment.deleted) {\n\t      return null;\n\t    }\n\t    if (this.props.comment.dead && !SettingsStore.showDead) {\n\t      return null;\n\t    }\n\t\n\t    var comment = this.props.comment;\n\t    var className = cx('Comment Comment--level0', {\n\t      'Comment--dead': comment.dead\n\t    });\n\t\n\t    return React.createElement(\n\t      'div',\n\t      { className: className },\n\t      React.createElement(\n\t        'div',\n\t        { className: 'Comment__content' },\n\t        this.renderCommentMeta(comment, {\n\t          link: true,\n\t          parent: !!this.state.parent.id && !!this.state.op.id && comment.parent !== this.state.op.id,\n\t          op: !!this.state.op.id\n\t        }),\n\t        this.renderCommentText(comment, { replyLink: false })\n\t      )\n\t    );\n\t  }\n\t});\n\t\n\tmodule.exports = DisplayComment;\n\n/***/ },\n/* 133 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\tvar React = __webpack_require__(3);\n\t\n\tvar StoryCommentThreadStore = __webpack_require__(56);\n\t\n\tvar ItemMixin = __webpack_require__(54);\n\tvar ListItemMixin = __webpack_require__(81);\n\t\n\t/**\n\t * Display story title and metadata as a list item.\n\t * The story to display will be passed as a prop.\n\t */\n\tvar DisplayListItem = React.createClass({\n\t  displayName: 'DisplayListItem',\n\t\n\t  mixins: [ItemMixin, ListItemMixin],\n\t\n\t  propTypes: {\n\t    item: React.PropTypes.object.isRequired\n\t  },\n\t\n\t  componentWillMount: function componentWillMount() {\n\t    this.threadState = StoryCommentThreadStore.loadState(this.props.item.id);\n\t  },\n\t\n\t  render: function render() {\n\t    return this.renderListItem(this.props.item, this.threadState);\n\t  }\n\t});\n\t\n\tmodule.exports = DisplayListItem;\n\n/***/ },\n/* 134 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\tvar React = __webpack_require__(3);\n\tvar ReactFireMixin = __webpack_require__(22);\n\tvar TimeAgo = __webpack_require__(43);\n\t\n\tvar HNService = __webpack_require__(12);\n\tvar StoryCommentThreadStore = __webpack_require__(56);\n\tvar ItemStore = __webpack_require__(83);\n\t\n\tvar Comment = __webpack_require__(79);\n\tvar PollOption = __webpack_require__(137);\n\tvar Spinner = __webpack_require__(17);\n\tvar ItemMixin = __webpack_require__(54);\n\t\n\tvar cx = __webpack_require__(23);\n\tvar setTitle = __webpack_require__(25);\n\t\n\tfunction timeUnitsAgo(value, unit, suffix) {\n\t  if (value === 1) {\n\t    return unit;\n\t  }\n\t  return value + ' ' + unit + 's';\n\t}\n\t\n\tvar Item = React.createClass({\n\t  displayName: 'Item',\n\t\n\t  mixins: [ItemMixin, ReactFireMixin],\n\t\n\t  getInitialState: function getInitialState() {\n\t    return {\n\t      item: ItemStore.getCachedStory(Number(this.props.params.id)) || {}\n\t    };\n\t  },\n\t\n\t  componentWillMount: function componentWillMount() {\n\t    this.bindAsObject(HNService.itemRef(this.props.params.id), 'item');\n\t    if (this.state.item.id) {\n\t      this.threadStore = new StoryCommentThreadStore(this.state.item, this.handleCommentsChanged, { cached: true });\n\t      setTitle(this.state.item.title);\n\t    }\n\t    window.addEventListener('beforeunload', this.handleBeforeUnload);\n\t  },\n\t\n\t  componentWillUnmount: function componentWillUnmount() {\n\t    if (this.threadStore) {\n\t      this.threadStore.dispose();\n\t    }\n\t    window.removeEventListener('beforeunload', this.handleBeforeUnload);\n\t  },\n\t\n\t  componentWillReceiveProps: function componentWillReceiveProps(nextProps) {\n\t    if (this.props.params.id !== nextProps.params.id) {\n\t      // Tear it down...\n\t      this.threadStore.dispose();\n\t      this.threadStore = null;\n\t      this.unbind('item');\n\t      // ...and set it up again\n\t      var item = ItemStore.getCachedStory(Number(nextProps.params.id));\n\t      if (item) {\n\t        this.threadStore = new StoryCommentThreadStore(item, this.handleCommentsChanged, { cached: true });\n\t        setTitle(item.title);\n\t      }\n\t      this.bindAsObject(HNService.itemRef(nextProps.params.id), 'item');\n\t      this.setState({ item: item || {} });\n\t    }\n\t  },\n\t\n\t  componentWillUpdate: function componentWillUpdate(nextProps, nextState) {\n\t    // Update the title when the item has loaded.\n\t    if (!this.state.item.id && nextState.item.id) {\n\t      setTitle(nextState.item.title);\n\t    }\n\t  },\n\t\n\t  componentDidUpdate: function componentDidUpdate(prevProps, prevState) {\n\t    // If the state item id changed, an initial or new item must have loaded\n\t    if (prevState.item.id !== this.state.item.id) {\n\t      if (!this.threadStore || this.threadStore.itemId !== this.state.item.id) {\n\t        this.threadStore = new StoryCommentThreadStore(this.state.item, this.handleCommentsChanged, { cached: false });\n\t        setTitle(this.state.item.title);\n\t        this.forceUpdate();\n\t      }\n\t    } else if (prevState.item !== this.state.item) {\n\t      // If the item has been updated from Firebase and the initial set\n\t      // of comments is still loading, the number of expected comments might\n\t      // need to be adjusted.\n\t      // This triggers a check for thread load completion, completing it\n\t      // immediately if a cached item had 0 kids and the latest version from\n\t      // Firebase also has 0 kids.\n\t      if (this.threadStore.loading) {\n\t        var kids = this.state.item.kids ? this.state.item.kids.length : 0;\n\t        var prevKids = prevState.item.kids ? prevState.item.kids.length : 0;\n\t        var kidDiff = kids - prevKids;\n\t        if (kidDiff !== 0) {\n\t          this.threadStore.adjustExpectedComments(kidDiff);\n\t        }\n\t      }\n\t      this.threadStore.itemUpdated(this.state.item);\n\t    }\n\t  },\n\t\n\t  /**\n\t   * Ensure the last visit time and comment details get stored for this item if\n\t   * the user refreshes or otherwise navigates off the page.\n\t   */\n\t  handleBeforeUnload: function handleBeforeUnload() {\n\t    if (this.threadStore) {\n\t      this.threadStore.dispose();\n\t    }\n\t  },\n\t\n\t  handleCommentsChanged: function handleCommentsChanged(payload) {\n\t    this.forceUpdate();\n\t  },\n\t\n\t  autoCollapse: function autoCollapse(e) {\n\t    e.preventDefault();\n\t    this.threadStore.collapseThreadsWithoutNewComments();\n\t  },\n\t\n\t  markAsRead: function markAsRead(e) {\n\t    e.preventDefault();\n\t    this.threadStore.markAsRead();\n\t    this.forceUpdate();\n\t  },\n\t\n\t  render: function render() {\n\t    var state = this.state;\n\t    var item = state.item;\n\t    var threadStore = this.threadStore;\n\t    if (!item.id || !threadStore) {\n\t      return React.createElement(\n\t        'div',\n\t        { className: 'Item Item--loading' },\n\t        React.createElement(Spinner, { size: '20' })\n\t      );\n\t    }\n\t    return React.createElement(\n\t      'div',\n\t      { className: cx('Item', { 'Item--dead': item.dead }) },\n\t      React.createElement(\n\t        'div',\n\t        { className: 'Item__content' },\n\t        this.renderItemTitle(item),\n\t        this.renderItemMeta(item, threadStore.lastVisit !== null && threadStore.newCommentCount > 0 && React.createElement(\n\t          'span',\n\t          null,\n\t          ' ',\n\t          '(',\n\t          React.createElement(\n\t            'em',\n\t            null,\n\t            threadStore.newCommentCount,\n\t            ' new'\n\t          ),\n\t          ' in the last ',\n\t          React.createElement(TimeAgo, { date: threadStore.lastVisit, formatter: timeUnitsAgo }),\n\t          ') | ',\n\t          React.createElement(\n\t            'span',\n\t            { className: 'control', tabIndex: '0', onClick: this.autoCollapse, onKeyPress: this.autoCollapse, title: 'Collapse threads without new comments' },\n\t            'auto collapse'\n\t          ),\n\t          ' | ',\n\t          React.createElement(\n\t            'span',\n\t            { className: 'control', tabIndex: '0', onClick: this.markAsRead, onKeyPress: this.markAsRead },\n\t            'mark as read'\n\t          )\n\t        )),\n\t        item.text && React.createElement(\n\t          'div',\n\t          { className: 'Item__text' },\n\t          React.createElement('div', { dangerouslySetInnerHTML: { __html: item.text } })\n\t        ),\n\t        item.type === 'poll' && React.createElement(\n\t          'div',\n\t          { className: 'Item__poll' },\n\t          item.parts.map(function (id) {\n\t            return React.createElement(PollOption, { key: id, id: id });\n\t          })\n\t        )\n\t      ),\n\t      item.kids && React.createElement(\n\t        'div',\n\t        { className: 'Item__kids' },\n\t        item.kids.map(function (id, index) {\n\t          return React.createElement(Comment, { key: id, id: id, level: 0,\n\t            loadingSpinner: index === 0,\n\t            threadStore: threadStore\n\t          });\n\t        })\n\t      )\n\t    );\n\t  }\n\t});\n\t\n\tmodule.exports = Item;\n\n/***/ },\n/* 135 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\tvar React = __webpack_require__(3);\n\t\n\tvar NotFound = React.createClass({\n\t  displayName: 'NotFound',\n\t\n\t  render: function render() {\n\t    return React.createElement(\n\t      'h2',\n\t      null,\n\t      'Not found'\n\t    );\n\t  }\n\t});\n\t\n\tmodule.exports = NotFound;\n\n/***/ },\n/* 136 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\tvar React = __webpack_require__(3);\n\tvar ReactFireMixin = __webpack_require__(22);\n\t\n\tvar CommentThreadStore = __webpack_require__(55);\n\tvar HNService = __webpack_require__(12);\n\tvar SettingsStore = __webpack_require__(8);\n\tvar UpdatesStore = __webpack_require__(36);\n\t\n\tvar Comment = __webpack_require__(79);\n\tvar CommentMixin = __webpack_require__(53);\n\t\n\tvar cx = __webpack_require__(23);\n\tvar _setTitle = __webpack_require__(25);\n\t\n\tvar PermalinkedComment = React.createClass({\n\t  displayName: 'PermalinkedComment',\n\t\n\t  mixins: [CommentMixin, ReactFireMixin],\n\t\n\t  getDefaultProps: function getDefaultProps() {\n\t    return {\n\t      level: 0,\n\t      loadingSpinner: true\n\t    };\n\t  },\n\t\n\t  getInitialState: function getInitialState() {\n\t    return {\n\t      comment: UpdatesStore.getComment(this.props.params.id) || {},\n\t      parent: { type: 'comment' },\n\t      op: {}\n\t    };\n\t  },\n\t\n\t  componentWillMount: function componentWillMount() {\n\t    this.bindAsObject(HNService.itemRef(this.props.params.id), 'comment');\n\t    if (this.state.comment.id) {\n\t      this.commentLoaded(this.state.comment);\n\t    }\n\t  },\n\t\n\t  componentWillReceiveProps: function componentWillReceiveProps(nextProps) {\n\t    if (nextProps.params.id !== this.props.params.id) {\n\t      var comment = UpdatesStore.getComment(nextProps.params.id);\n\t      if (comment) {\n\t        this.commentLoaded(comment);\n\t        this.setState({ comment: comment });\n\t      }\n\t      this.unbind('comment');\n\t      this.bindAsObject(HNService.itemRef(nextProps.params.id), 'comment');\n\t    }\n\t  },\n\t\n\t  componentWillUpdate: function componentWillUpdate(nextProps, nextState) {\n\t    if (!nextState.comment) {\n\t      return;\n\t    }\n\t\n\t    if (this.state.comment.id !== nextState.comment.id) {\n\t      if (!nextState.comment.deleted) {\n\t        // Redirect to the appropriate route if a Comment \"parent\" link had a\n\t        // non-comment item id.\n\t        if (nextState.comment.type !== 'comment') {\n\t          this.context.router.replaceWith(nextState.comment.type, { id: nextState.comment.id });\n\t          return;\n\t        }\n\t      }\n\t      if (!this.threadStore || this.threadStore.itemId !== nextState.comment.id) {\n\t        this.commentLoaded(nextState.comment);\n\t      }\n\t    }\n\t  },\n\t\n\t  commentLoaded: function commentLoaded(comment) {\n\t    this.setTitle(comment);\n\t    if (!comment.deleted) {\n\t      this.threadStore = new CommentThreadStore(comment, this.handleCommentsChanged);\n\t      this.fetchAncestors(comment);\n\t    }\n\t  },\n\t\n\t  setTitle: function setTitle(comment) {\n\t    if (comment.deleted) {\n\t      return _setTitle('Deleted comment');\n\t    }\n\t    var title = 'Comment by ' + comment.by;\n\t    if (this.state.op.id) {\n\t      title += ' | ' + this.state.op.title;\n\t    }\n\t    _setTitle(title);\n\t  },\n\t\n\t  handleCommentsChanged: function handleCommentsChanged(payload) {\n\t    // We're only interested in re-rendering to update collapsed display\n\t    if (payload.type === 'collapse') {\n\t      this.forceUpdate();\n\t    }\n\t  },\n\t\n\t  render: function render() {\n\t    var comment = this.state.comment;\n\t    if (!comment) {\n\t      return this.renderError(comment, {\n\t        id: this.props.params.id,\n\t        className: 'Comment Comment--level0 Comment--error'\n\t      });\n\t    }\n\t    // Render a placeholder while we're waiting for the comment to load\n\t    if (!comment.id) {\n\t      return this.renderCommentLoading(comment);\n\t    }\n\t    // Render a link to HN for deleted comments\n\t    if (comment.deleted) {\n\t      return this.renderCommentDeleted(comment, {\n\t        className: 'Comment Comment--level0 Comment--deleted'\n\t      });\n\t    }\n\t    // XXX Don't render anything if we're replacing the route after loading a non-comment\n\t    if (comment.type !== 'comment') {\n\t      return null;\n\t    }\n\t\n\t    var className = cx('PermalinkedComment Comment Comment--level0', { 'Comment--dead': comment.dead });\n\t    var threadStore = this.threadStore;\n\t\n\t    return React.createElement(\n\t      'div',\n\t      { className: className },\n\t      React.createElement(\n\t        'div',\n\t        { className: 'Comment__content' },\n\t        this.renderCommentMeta(comment, {\n\t          parent: !!this.state.parent.id && !!this.state.op.id && comment.parent !== this.state.op.id,\n\t          op: !!this.state.op.id\n\t        }),\n\t        (!comment.dead || SettingsStore.showDead) && this.renderCommentText(comment, { replyLink: true })\n\t      ),\n\t      comment.kids && React.createElement(\n\t        'div',\n\t        { className: 'Comment__kids' },\n\t        comment.kids.map(function (id, index) {\n\t          return React.createElement(Comment, { key: id, id: id,\n\t            level: 0,\n\t            loadingSpinner: index === 0,\n\t            threadStore: threadStore\n\t          });\n\t        })\n\t      )\n\t    );\n\t  }\n\t});\n\t\n\tmodule.exports = PermalinkedComment;\n\n/***/ },\n/* 137 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\tvar React = __webpack_require__(3);\n\tvar ReactFireMixin = __webpack_require__(22);\n\t\n\tvar HNService = __webpack_require__(12);\n\t\n\tvar Spinner = __webpack_require__(17);\n\t\n\tvar pluralise = __webpack_require__(38);\n\t\n\tvar PollOption = React.createClass({\n\t  displayName: 'PollOption',\n\t\n\t  mixins: [ReactFireMixin],\n\t\n\t  getInitialState: function getInitialState() {\n\t    return { pollopt: {} };\n\t  },\n\t\n\t  componentWillMount: function componentWillMount() {\n\t    this.bindAsObject(HNService.itemRef(this.props.id), 'pollopt');\n\t  },\n\t\n\t  render: function render() {\n\t    var pollopt = this.state.pollopt;\n\t    if (!pollopt.id) {\n\t      return React.createElement(\n\t        'div',\n\t        { className: 'PollOption PollOption--loading' },\n\t        React.createElement(Spinner, { size: '20' })\n\t      );\n\t    }\n\t    return React.createElement(\n\t      'div',\n\t      { className: 'PollOption' },\n\t      React.createElement(\n\t        'div',\n\t        { className: 'PollOption__text' },\n\t        pollopt.text\n\t      ),\n\t      React.createElement(\n\t        'div',\n\t        { className: 'PollOption__score' },\n\t        pollopt.score,\n\t        ' point',\n\t        pluralise(pollopt.score)\n\t      )\n\t    );\n\t  }\n\t});\n\t\n\tmodule.exports = PollOption;\n\n/***/ },\n/* 138 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\tvar React = __webpack_require__(3);\n\t\n\tvar SettingsStore = __webpack_require__(8);\n\t\n\tvar Settings = React.createClass({\n\t  displayName: 'Settings',\n\t\n\t  componentDidMount: function componentDidMount() {\n\t    this.refs.container.focus();\n\t  },\n\t\n\t  onChange: function onChange(e) {\n\t    var el = e.target;\n\t    if (el.type === 'checkbox') {\n\t      SettingsStore[el.name] = el.checked;\n\t    } else if (el.type === 'number' && el.value) {\n\t      SettingsStore[el.name] = el.value;\n\t    }\n\t    this.forceUpdate();\n\t    SettingsStore.save();\n\t  },\n\t\n\t  onClick: function onClick(e) {\n\t    e.stopPropagation();\n\t  },\n\t\n\t  render: function render() {\n\t    return React.createElement(\n\t      'div',\n\t      { ref: 'container', className: 'Settings', tabIndex: '-1', onClick: this.onClick },\n\t      React.createElement(\n\t        'form',\n\t        { onChange: this.onChange },\n\t        React.createElement(\n\t          'div',\n\t          { className: 'Settings__setting Settings__setting--checkbox' },\n\t          React.createElement(\n\t            'label',\n\t            { htmlFor: 'autoCollapse' },\n\t            React.createElement('input', { type: 'checkbox', name: 'autoCollapse', id: 'autoCollapse', checked: SettingsStore.autoCollapse }),\n\t            ' auto collapse'\n\t          ),\n\t          React.createElement(\n\t            'p',\n\t            null,\n\t            'Automatically collapse comment threads without new comments on page load.'\n\t          )\n\t        ),\n\t        React.createElement(\n\t          'div',\n\t          { className: 'Settings__setting Settings__setting--checkbox' },\n\t          React.createElement(\n\t            'label',\n\t            { htmlFor: 'replyLinks' },\n\t            React.createElement('input', { type: 'checkbox', name: 'replyLinks', id: 'replyLinks', checked: SettingsStore.replyLinks }),\n\t            ' show reply links'\n\t          ),\n\t          React.createElement(\n\t            'p',\n\t            null,\n\t            'Show \"reply\" links to Hacker News'\n\t          )\n\t        ),\n\t        React.createElement(\n\t          'div',\n\t          { className: 'Settings__setting Settings__setting--checkbox' },\n\t          React.createElement(\n\t            'label',\n\t            { htmlFor: 'showDead' },\n\t            React.createElement('input', { type: 'checkbox', name: 'showDead', id: 'showDead', checked: SettingsStore.showDead }),\n\t            ' show dead'\n\t          ),\n\t          React.createElement(\n\t            'p',\n\t            null,\n\t            'Show items flagged as dead.'\n\t          )\n\t        ),\n\t        React.createElement(\n\t          'div',\n\t          { className: 'Settings__setting Settings__setting--checkbox' },\n\t          React.createElement(\n\t            'label',\n\t            { htmlFor: 'showDeleted' },\n\t            React.createElement('input', { type: 'checkbox', name: 'showDeleted', id: 'showDeleted', checked: SettingsStore.showDeleted }),\n\t            ' show deleted'\n\t          ),\n\t          React.createElement(\n\t            'p',\n\t            null,\n\t            'Show comments flagged as deleted in threads.'\n\t          )\n\t        ),\n\t        React.createElement(\n\t          'div',\n\t          { className: 'Settings__setting' },\n\t          React.createElement(\n\t            'table',\n\t            null,\n\t            React.createElement(\n\t              'tbody',\n\t              null,\n\t              React.createElement(\n\t                'tr',\n\t                null,\n\t                React.createElement(\n\t                  'td',\n\t                  null,\n\t                  React.createElement(\n\t                    'label',\n\t                    { htmlFor: 'titleFontSize' },\n\t                    'title font size:'\n\t                  )\n\t                ),\n\t                React.createElement(\n\t                  'td',\n\t                  null,\n\t                  React.createElement('input', { type: 'number', min: '13.333', step: '1', name: 'titleFontSize', id: 'titleFontSize', value: SettingsStore.titleFontSize })\n\t                )\n\t              ),\n\t              React.createElement(\n\t                'tr',\n\t                null,\n\t                React.createElement(\n\t                  'td',\n\t                  null,\n\t                  React.createElement(\n\t                    'label',\n\t                    { htmlFor: 'listSpacing' },\n\t                    'list spacing:'\n\t                  )\n\t                ),\n\t                React.createElement(\n\t                  'td',\n\t                  null,\n\t                  React.createElement('input', { type: 'number', min: '0', name: 'listSpacing', id: 'listSpacing', value: SettingsStore.listSpacing })\n\t                )\n\t              )\n\t            )\n\t          )\n\t        )\n\t      )\n\t    );\n\t  }\n\t});\n\t\n\tmodule.exports = Settings;\n\n/***/ },\n/* 139 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\tvar React = __webpack_require__(3);\n\t\n\tvar StoryStore = __webpack_require__(35);\n\t\n\tvar PageNumberMixin = __webpack_require__(82);\n\tvar Paginator = __webpack_require__(80);\n\tvar Spinner = __webpack_require__(17);\n\tvar StoryListItem = __webpack_require__(140);\n\tvar SettingsStore = __webpack_require__(8);\n\t\n\tvar _require = __webpack_require__(37);\n\t\n\tvar ITEMS_PER_PAGE = _require.ITEMS_PER_PAGE;\n\t\n\tvar pageCalc = __webpack_require__(84);\n\tvar setTitle = __webpack_require__(25);\n\t\n\tvar Stories = React.createClass({\n\t  displayName: 'Stories',\n\t\n\t  mixins: [PageNumberMixin],\n\t\n\t  propTypes: {\n\t    // The number of stories which may be paginated through\n\t    limit: React.PropTypes.number.isRequired,\n\t    // The route name being used\n\t    route: React.PropTypes.string.isRequired,\n\t    // The type of stories to be displayed\n\t    type: React.PropTypes.string.isRequired,\n\t\n\t    // Page title associated with the stories being displayed\n\t    title: React.PropTypes.string\n\t  },\n\t\n\t  getInitialState: function getInitialState() {\n\t    return {\n\t      ids: [],\n\t      limit: this.props.limit,\n\t      stories: []\n\t    };\n\t  },\n\t\n\t  componentWillMount: function componentWillMount() {\n\t    setTitle(this.props.title);\n\t    this.store = new StoryStore(this.props.type);\n\t    this.store.addListener('update', this.handleUpdate);\n\t    this.store.start();\n\t    this.setState(this.store.getState());\n\t  },\n\t\n\t  componentWillUnmount: function componentWillUnmount() {\n\t    this.store.removeListener('update', this.handleUpdate);\n\t    this.store.stop();\n\t    this.store = null;\n\t  },\n\t\n\t  handleUpdate: function handleUpdate(update) {\n\t    if (!this.isMounted()) {\n\t      if (false) {\n\t        console.warn('Skipping update as the ' + this.props.type + ' Stories component is no longer mounted.');\n\t      }\n\t      return;\n\t    }\n\t    update.limit = update.ids.length;\n\t    this.setState(update);\n\t  },\n\t\n\t  render: function render() {\n\t    var page = pageCalc(this.getPageNumber(), ITEMS_PER_PAGE, this.state.limit);\n\t\n\t    // Display a list of placeholder items while we're waiting for the initial\n\t    // list of story ids to load from Firebase.\n\t    if (this.state.stories.length === 0 && this.state.ids.length === 0) {\n\t      var dummyItems = [];\n\t      for (var i = page.startIndex; i < page.endIndex; i++) {\n\t        dummyItems.push(React.createElement(\n\t          'li',\n\t          { key: i, className: 'ListItem ListItem--loading', style: { marginBottom: SettingsStore.listSpacing } },\n\t          React.createElement(Spinner, null)\n\t        ));\n\t      }\n\t      return React.createElement(\n\t        'div',\n\t        { className: 'Items Items--loading' },\n\t        React.createElement(\n\t          'ol',\n\t          { className: 'Items__list', start: page.startIndex + 1 },\n\t          dummyItems\n\t        ),\n\t        React.createElement(Paginator, { route: this.props.route, page: page.pageNum, hasNext: page.hasNext })\n\t      );\n\t    }\n\t\n\t    return React.createElement(\n\t      'div',\n\t      { className: 'Items' },\n\t      React.createElement(\n\t        'ol',\n\t        { className: 'Items__list', start: page.startIndex + 1 },\n\t        this.renderItems(page.startIndex, page.endIndex)\n\t      ),\n\t      React.createElement(Paginator, { route: this.props.route, page: page.pageNum, hasNext: page.hasNext })\n\t    );\n\t  },\n\t\n\t  renderItems: function renderItems(startIndex, endIndex) {\n\t    var rendered = [];\n\t    for (var i = startIndex; i < endIndex; i++) {\n\t      var item = this.state.stories[i];\n\t      var id = this.state.ids[i];\n\t      if (id) {\n\t        rendered.push(React.createElement(StoryListItem, { key: id, id: id, index: i, cachedItem: item, store: this.store }));\n\t      } else {\n\t        rendered.push(React.createElement(StoryListItem, { cachedItem: item, store: this.store }));\n\t      }\n\t    }\n\t    return rendered;\n\t  }\n\t});\n\t\n\tmodule.exports = Stories;\n\n/***/ },\n/* 140 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\tvar React = __webpack_require__(3);\n\tvar ReactFireMixin = __webpack_require__(22);\n\t\n\tvar StoryCommentThreadStore = __webpack_require__(56);\n\tvar HNService = __webpack_require__(12);\n\tvar SettingsStore = __webpack_require__(8);\n\tvar StoryStore = __webpack_require__(35);\n\t\n\tvar ItemMixin = __webpack_require__(54);\n\tvar ListItemMixin = __webpack_require__(81);\n\tvar Spinner = __webpack_require__(17);\n\t\n\t/**\n\t * Display story title and metadata as as a list item.\n\t * Cached story data may be given as a prop, but this component is also\n\t * responsible for listening to updates to the story and providing the latest\n\t * version for StoryStore's cache.\n\t */\n\tvar StoryListItem = React.createClass({\n\t  displayName: 'StoryListItem',\n\t\n\t  mixins: [ItemMixin, ListItemMixin, ReactFireMixin],\n\t\n\t  propTypes: {\n\t    // The StoryStore handling caching and updates to the stories being displayed\n\t    store: React.PropTypes.instanceOf(StoryStore).isRequired,\n\t\n\t    // The story's id in Hacker News\n\t    id: React.PropTypes.number,\n\t    // A version of the story from the cache, for initial display\n\t    cachedItem: React.PropTypes.object,\n\t    // The current index of the story in the list being displayed\n\t    index: React.PropTypes.number\n\t  },\n\t\n\t  getDefaultProps: function getDefaultProps() {\n\t    return {\n\t      id: null,\n\t      cachedItem: null,\n\t      index: null\n\t    };\n\t  },\n\t\n\t  getInitialState: function getInitialState() {\n\t    return {\n\t      item: this.props.cachedItem || {}\n\t    };\n\t  },\n\t\n\t  componentWillMount: function componentWillMount() {\n\t    if (this.props.id != null) {\n\t      this.initLiveItem(this.props);\n\t    } else if (this.props.cachedItem != null) {\n\t      // Display the comment state of the cached item we were given while we're\n\t      // waiting for the live item to load.\n\t      this.threadState = StoryCommentThreadStore.loadState(this.state.item.id);\n\t    }\n\t  },\n\t\n\t  componentWillUnmount: function componentWillUnmount() {\n\t    if (this.props.id != null) {\n\t      this.props.store.removeListener(this.props.id, this.updateThreadState);\n\t    }\n\t  },\n\t\n\t  /**\n\t   * Catch the transition from not having an id prop to having one.\n\t   * Scenario: we were waiting for the initial list of story ids to load.\n\t   */\n\t  componentWillReceiveProps: function componentWillReceiveProps(nextProps) {\n\t    if (this.props.id == null && nextProps.id != null) {\n\t      this.initLiveItem(nextProps);\n\t    }\n\t  },\n\t\n\t  /**\n\t   * If the live item has been loaded or updated, update the StoryStore cache\n\t   * with its current index and latest data.\n\t   */\n\t  componentWillUpdate: function componentWillUpdate(nextProps, nextState) {\n\t    if (this.state.item !== nextState.item) {\n\t      if (nextState.item != null) {\n\t        this.props.store.itemUpdated(nextState.item, this.props.index);\n\t      } else {\n\t        if (false) {\n\t          console.warn('Item ' + this.props.id + ' went from ' + JSON.stringify(this.state.item) + ' to ' + nextProps.item);\n\t        }\n\t      }\n\t    }\n\t  },\n\t\n\t  /**\n\t   * Initialise listening to updates for the item with the given id and\n\t   * initialise its comment thread state.\n\t   */\n\t  initLiveItem: function initLiveItem(props) {\n\t    // If we were given a cached item to display initially, it will be replaced\n\t    this.bindAsObject(HNService.itemRef(props.id), 'item');\n\t    this.threadState = StoryCommentThreadStore.loadState(props.id);\n\t    this.props.store.addListener(props.id, this.updateThreadState);\n\t  },\n\t\n\t  /**\n\t   * Update thread state in response to a storage event indicating it has been\n\t   * modified.\n\t   */\n\t  updateThreadState: function updateThreadState() {\n\t    this.threadState = StoryCommentThreadStore.loadState(this.props.id);\n\t    this.forceUpdate();\n\t  },\n\t\n\t  render: function render() {\n\t    // Display the loading spinner if we have nothing to show initially\n\t    if (!this.state.item || !this.state.item.id) {\n\t      return React.createElement(\n\t        'li',\n\t        { className: 'ListItem ListItem--loading', style: { marginBottom: SettingsStore.listSpacing } },\n\t        React.createElement(Spinner, null)\n\t      );\n\t    }\n\t\n\t    return this.renderListItem(this.state.item, this.threadState);\n\t  }\n\t});\n\t\n\tmodule.exports = StoryListItem;\n\n/***/ },\n/* 141 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\tvar React = __webpack_require__(3);\n\t\n\tvar SettingsStore = __webpack_require__(8);\n\tvar UpdatesStore = __webpack_require__(36);\n\t\n\tvar DisplayListItem = __webpack_require__(133);\n\tvar DisplayComment = __webpack_require__(132);\n\tvar Paginator = __webpack_require__(80);\n\tvar Spinner = __webpack_require__(17);\n\t\n\tvar PageNumberMixin = __webpack_require__(82);\n\t\n\tvar _require = __webpack_require__(37);\n\t\n\tvar ITEMS_PER_PAGE = _require.ITEMS_PER_PAGE;\n\t\n\tvar pageCalc = __webpack_require__(84);\n\tvar _setTitle = __webpack_require__(25);\n\t\n\tfunction filterDead(item) {\n\t  return !item.dead;\n\t}\n\t\n\tfunction filterUpdates(updates) {\n\t  if (!SettingsStore.showDead) {\n\t    return {\n\t      comments: updates.comments.filter(filterDead),\n\t      stories: updates.stories.filter(filterDead)\n\t    };\n\t  }\n\t  return updates;\n\t}\n\t\n\tvar Updates = React.createClass({\n\t  displayName: 'Updates',\n\t\n\t  mixins: [PageNumberMixin],\n\t\n\t  getInitialState: function getInitialState() {\n\t    return filterUpdates(UpdatesStore.getUpdates());\n\t  },\n\t\n\t  componentWillMount: function componentWillMount() {\n\t    this.setTitle(this.props.type);\n\t    UpdatesStore.start();\n\t    UpdatesStore.on('updates', this.handleUpdates);\n\t  },\n\t\n\t  componentWillUnmount: function componentWillUnmount() {\n\t    UpdatesStore.off('updates', this.handleUpdates);\n\t    UpdatesStore.stop();\n\t  },\n\t\n\t  componentWillReceiveProps: function componentWillReceiveProps(nextProps) {\n\t    if (this.props.type !== nextProps.type) {\n\t      this.setTitle(nextProps.type);\n\t    }\n\t  },\n\t\n\t  setTitle: function setTitle(type) {\n\t    _setTitle('New ' + (type === 'comments' ? 'Comments' : 'Links'));\n\t  },\n\t\n\t  handleUpdates: function handleUpdates(updates) {\n\t    if (!this.isMounted()) {\n\t      if (false) {\n\t        console.warn('Skipping update of ' + this.props.type + ' as the Updates component is not mounted');\n\t      }\n\t      return;\n\t    }\n\t    this.setState(filterUpdates(updates));\n\t  },\n\t\n\t  render: function render() {\n\t    var items = this.props.type === 'comments' ? this.state.comments : this.state.stories;\n\t    if (items.length === 0) {\n\t      return React.createElement(\n\t        'div',\n\t        { className: 'Updates Updates--loading' },\n\t        React.createElement(Spinner, { size: '20' })\n\t      );\n\t    }\n\t\n\t    var page = pageCalc(this.getPageNumber(), ITEMS_PER_PAGE, items.length);\n\t\n\t    if (this.props.type === 'comments') {\n\t      return React.createElement(\n\t        'div',\n\t        { className: 'Updates Comments' },\n\t        items.slice(page.startIndex, page.endIndex).map(function (comment) {\n\t          return React.createElement(DisplayComment, { key: comment.id, id: comment.id, comment: comment });\n\t        }),\n\t        React.createElement(Paginator, { route: 'newcomments', page: page.pageNum, hasNext: page.hasNext })\n\t      );\n\t    } else {\n\t      return React.createElement(\n\t        'div',\n\t        { className: 'Updates Items' },\n\t        React.createElement(\n\t          'ol',\n\t          { className: 'Items__list', start: page.startIndex + 1 },\n\t          items.slice(page.startIndex, page.endIndex).map(function (item) {\n\t            return React.createElement(DisplayListItem, { key: item.id, item: item });\n\t          })\n\t        ),\n\t        React.createElement(Paginator, { route: 'newest', page: page.pageNum, hasNext: page.hasNext })\n\t      );\n\t    }\n\t  }\n\t});\n\t\n\tmodule.exports = Updates;\n\n/***/ },\n/* 142 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\tvar React = __webpack_require__(3);\n\tvar ReactFireMixin = __webpack_require__(22);\n\tvar TimeAgo = __webpack_require__(43);\n\t\n\tvar HNService = __webpack_require__(12);\n\t\n\tvar Spinner = __webpack_require__(17);\n\t\n\tvar setTitle = __webpack_require__(25);\n\t\n\t// TODO User submissions\n\t\n\t// TODO User comments\n\t\n\tvar UserProfile = React.createClass({\n\t  displayName: 'UserProfile',\n\t\n\t  mixins: [ReactFireMixin],\n\t  getInitialState: function getInitialState() {\n\t    return { user: {} };\n\t  },\n\t\n\t  componentWillMount: function componentWillMount() {\n\t    this.bindAsObject(HNService.userRef(this.props.params.id), 'user');\n\t  },\n\t\n\t  componentWillUpdate: function componentWillUpdate(nextProps, nextState) {\n\t    if (this.state.user.id !== nextState.user.id) {\n\t      setTitle('Profile: ' + nextState.user.id);\n\t    }\n\t  },\n\t\n\t  componentWillReceiveProps: function componentWillReceiveProps(nextProps) {\n\t    if (this.props.params.id !== nextProps.params.id) {\n\t      this.unbind('user');\n\t      this.bindAsObject(HNService.userRef(nextProps.params.id), 'user');\n\t    }\n\t  },\n\t\n\t  render: function render() {\n\t    var user = this.state.user;\n\t    if (!user.id) {\n\t      return React.createElement(\n\t        'div',\n\t        { className: 'UserProfile UserProfile--loading' },\n\t        React.createElement(\n\t          'h4',\n\t          null,\n\t          this.props.params.id\n\t        ),\n\t        React.createElement(Spinner, { size: '20' })\n\t      );\n\t    }\n\t    var createdDate = new Date(user.created * 1000);\n\t    return React.createElement(\n\t      'div',\n\t      { className: 'UserProfile' },\n\t      React.createElement(\n\t        'h4',\n\t        null,\n\t        user.id\n\t      ),\n\t      React.createElement(\n\t        'dl',\n\t        null,\n\t        React.createElement(\n\t          'dt',\n\t          null,\n\t          'Created'\n\t        ),\n\t        React.createElement(\n\t          'dd',\n\t          null,\n\t          React.createElement(TimeAgo, { date: createdDate }),\n\t          ' (',\n\t          createdDate.toDateString(),\n\t          ')'\n\t        ),\n\t        React.createElement(\n\t          'dt',\n\t          null,\n\t          'Karma'\n\t        ),\n\t        React.createElement(\n\t          'dd',\n\t          null,\n\t          user.karma\n\t        ),\n\t        React.createElement(\n\t          'dt',\n\t          null,\n\t          'Delay'\n\t        ),\n\t        React.createElement(\n\t          'dd',\n\t          null,\n\t          user.delay\n\t        ),\n\t        user.about && React.createElement(\n\t          'dt',\n\t          null,\n\t          'About'\n\t        ),\n\t        user.about && React.createElement(\n\t          'dd',\n\t          null,\n\t          React.createElement('div', { className: 'UserProfile__about', dangerouslySetInnerHTML: { __html: user.about } })\n\t        )\n\t      )\n\t    );\n\t  }\n\t});\n\t\n\tmodule.exports = UserProfile;\n\n/***/ },\n/* 143 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\tvar _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };\n\t\n\tvar IndexRoute = __webpack_require__(160);\n\tvar React = __webpack_require__(3);\n\tvar Route = __webpack_require__(161);\n\t\n\tvar App = __webpack_require__(131);\n\tvar Item = __webpack_require__(134);\n\tvar NotFound = __webpack_require__(135);\n\tvar PermalinkedComment = __webpack_require__(136);\n\tvar Stories = __webpack_require__(139);\n\tvar Updates = __webpack_require__(141);\n\tvar UserProfile = __webpack_require__(142);\n\t\n\tfunction stories(route, type, limit, title) {\n\t  return React.createClass({\n\t    render: function render() {\n\t      return React.createElement(Stories, _extends({}, this.props, { key: route, route: route, type: type, limit: limit, title: title }));\n\t    }\n\t  });\n\t}\n\t\n\tfunction updates(type) {\n\t  return React.createClass({\n\t    render: function render() {\n\t      return React.createElement(Updates, _extends({}, this.props, { key: type, type: type }));\n\t    }\n\t  });\n\t}\n\t\n\tvar Ask = stories('ask', 'askstories', 200, 'Ask');\n\tvar Comments = updates('comments');\n\tvar Jobs = stories('jobs', 'jobstories', 200, 'Jobs');\n\tvar New = stories('newest', 'newstories', 500, 'New Links');\n\tvar Show = stories('show', 'showstories', 200, 'Show');\n\tvar Top = stories('news', 'topstories', 500);\n\t\n\tmodule.exports = React.createElement(\n\t  Route,\n\t  { path: '/', component: App },\n\t  React.createElement(IndexRoute, { component: Top }),\n\t  React.createElement(Route, { path: 'news', component: Top }),\n\t  React.createElement(Route, { path: 'newest', component: New }),\n\t  React.createElement(Route, { path: 'show', component: Show }),\n\t  React.createElement(Route, { path: 'ask', component: Ask }),\n\t  React.createElement(Route, { path: 'jobs', component: Jobs }),\n\t  React.createElement(Route, { path: 'item/:id', component: Item }),\n\t  React.createElement(Route, { path: 'job/:id', component: Item }),\n\t  React.createElement(Route, { path: 'poll/:id', component: Item }),\n\t  React.createElement(Route, { path: 'story/:id', component: Item }),\n\t  React.createElement(Route, { path: 'comment/:id', component: PermalinkedComment }),\n\t  React.createElement(Route, { path: 'newcomments', component: Comments }),\n\t  React.createElement(Route, { path: 'user/:id', component: UserProfile }),\n\t  React.createElement(Route, { path: '*', component: NotFound })\n\t);\n\n/***/ },\n/* 144 */\n/***/ function(module, exports) {\n\n\t/**\n\t * Based on the implementation of _.debounce() from Underscore.js 1.7.0\n\t * http://underscorejs.org\n\t * (c) 2009-2014 Jeremy Ashkenas, DocumentCloud and Investigative Reporters & Editors\n\t * Distributed under the MIT license.\n\t *\n\t * Returns a function, that, as long as it continues to be invoked, will not\n\t * be triggered. The function will be called after it stops being called for\n\t * N milliseconds. If `immediate` is passed, trigger the function on the\n\t * leading edge, instead of the trailing.\n\t *\n\t * The returned function has a .cancel() function which can be used to prevent\n\t * the debounced functiom being called.\n\t */\n\t\"use strict\";\n\t\n\tfunction cancellableDebounce(func, wait, immediate) {\n\t  var timeout, args, context, timestamp, result;\n\t\n\t  var later = function later() {\n\t    var last = Date.now() - timestamp;\n\t    if (last < wait && last > 0) {\n\t      timeout = setTimeout(later, wait - last);\n\t    } else {\n\t      timeout = null;\n\t      if (!immediate) {\n\t        result = func.apply(context, args);\n\t        if (!timeout) {\n\t          context = args = null;\n\t        }\n\t      }\n\t    }\n\t  };\n\t\n\t  var debounced = function debounced() {\n\t    context = this;\n\t    args = arguments;\n\t    timestamp = Date.now();\n\t    var callNow = immediate && !timeout;\n\t    if (!timeout) {\n\t      timeout = setTimeout(later, wait);\n\t    }\n\t    if (callNow) {\n\t      result = func.apply(context, args);\n\t      context = args = null;\n\t    }\n\t    return result;\n\t  };\n\t\n\t  debounced.cancel = function () {\n\t    if (timeout) {\n\t      clearTimeout(timeout);\n\t    }\n\t  };\n\t\n\t  return debounced;\n\t}\n\t\n\tmodule.exports = cancellableDebounce;\n\n/***/ }\n]);\n\n\n/** WEBPACK FOOTER **\n ** app.js\n **/","require('setimmediate')\n\nvar createHashHistory = require('history/lib/createHashHistory')\nvar React = require('react')\nvar Router = require('react-router/lib/Router')\nvar {render} = require('react-dom')\nvar useScroll = require('scroll-behavior/lib/useStandardScroll')\n\nvar routes = require('./routes')\n\nvar history = useScroll(createHashHistory)()\n\nrender(<Router history={history} routes={routes}/>, document.getElementById('app'))\n\n\n\n/** WEBPACK FOOTER **\n ** C:/repos/react-hn/src/index.js\n **/","var extend = require('../utils/extend')\nvar storage = require('../utils/storage')\n\nvar STORAGE_KEY = 'settings'\n\nvar SettingsStore = {\n  autoCollapse: true,\n  replyLinks: true,\n  showDead: false,\n  showDeleted: false,\n  titleFontSize: 18,\n  listSpacing: 16,\n\n  load() {\n    var json = storage.get(STORAGE_KEY)\n    if (json) {\n      extend(this, JSON.parse(json))\n    }\n  },\n\n  save() {\n    storage.set(STORAGE_KEY, JSON.stringify({\n      autoCollapse: this.autoCollapse,\n      replyLinks: this.replyLinks,\n      showDead: this.showDead,\n      showDeleted: this.showDeleted,\n      titleFontSize: this.titleFontSize,\n      listSpacing: this.listSpacing\n    }))\n  }\n}\n\nmodule.exports = SettingsStore\n\n\n\n/** WEBPACK FOOTER **\n ** C:/repos/react-hn/src/stores/SettingsStore.js\n **/","var Firebase = require('firebase')\n\nvar api = new Firebase('https://hacker-news.firebaseio.com/v0')\n\nfunction fetchItem(id, cb) {\n  itemRef(id).once('value', function(snapshot) {\n    cb(snapshot.val())\n  })\n}\n\nfunction fetchItems(ids, cb) {\n  var items = []\n  ids.forEach(function(id) {\n    fetchItem(id, addItem)\n  })\n  function addItem(item) {\n    items.push(item)\n    if (items.length >= ids.length) {\n      cb(items)\n    }\n  }\n}\n\nfunction storiesRef(path) {\n  return api.child(path)\n}\n\nfunction itemRef(id) {\n  return api.child('item/' + id)\n}\n\nfunction userRef(id) {\n  return api.child('user/' + id)\n}\n\nfunction updatesRef() {\n  return api.child('updates/items')\n}\n\nmodule.exports = {\n  fetchItem,\n  fetchItems,\n  storiesRef,\n  itemRef,\n  userRef,\n  updatesRef\n}\n\n\n\n/** WEBPACK FOOTER **\n ** C:/repos/react-hn/src/services/HNService.js\n **/","var React = require('react')\n\n// TODO Implement GIF-based fallback for IE9 and another non-animating browsers\n//      See https://github.com/tobiasahlin/SpinKit for how-to\nvar Spinner = React.createClass({\n  getDefaultProps() {\n    return {size: 6, spacing: 2}\n  },\n\n  render() {\n    var bounceSize = this.props.size + 'px'\n    var bounceStyle = {height: bounceSize, width: bounceSize, marginRight: this.props.spacing + 'px'}\n    return <div className=\"Spinner\" style={{width: ((Number(this.props.size) + Number(this.props.spacing)) * 3) + 'px'}}>\n      <div className=\"bounce1\" style={bounceStyle}/>\n      <div className=\"bounce2\" style={bounceStyle}/>\n      <div className=\"bounce3\" style={bounceStyle}/>\n    </div>\n  }\n})\n\nmodule.exports = Spinner\n\n\n\n/** WEBPACK FOOTER **\n ** C:/repos/react-hn/src/Spinner.js\n **/","/**\n * Creates a className string including some class names conditionally.\n * @param {string=} staticClassName class name(s) which should always be\n *   included.\n * @param {Object.<string, *>} conditionalClassNames an object mapping class\n *   names to a value which indicates if the class name should be included -\n *   class names will be included if their corresponding value is truthy.\n * @return {string}\n */\nfunction buildClassName(staticClassName, conditionalClassNames) {\n  var classNames = []\n  if (typeof conditionalClassNames == 'undefined') {\n    conditionalClassNames = staticClassName\n  }\n  else {\n    classNames.push(staticClassName)\n  }\n  var classNameKeys = Object.keys(conditionalClassNames)\n  for (var i = 0, l = classNameKeys.length; i < l; i++) {\n    if (conditionalClassNames[classNameKeys[i]]) {\n      classNames.push(classNameKeys[i])\n    }\n  }\n  return classNames.join(' ')\n}\n\nmodule.exports = buildClassName\n\n\n\n/** WEBPACK FOOTER **\n ** C:/repos/react-hn/src/utils/buildClassName.js\n **/","function extend(dest, src1, src2) {\n  var props = Object.keys(src1)\n  for (var i = 0, l = props.length; i < l; i++) {\n    dest[props[i]] = src1[props[i]]\n  }\n  if (src2) {\n    props = Object.keys(src2)\n    for (i = 0, l = props.length; i < l; i++) {\n      dest[props[i]] = src2[props[i]]\n    }\n  }\n  return dest\n}\n\nmodule.exports = extend\n\n\n\n/** WEBPACK FOOTER **\n ** C:/repos/react-hn/src/utils/extend.js\n **/","var {SITE_TITLE} = require('./constants')\n\nfunction setTitle(title) {\n  document.title = (title ? title + ' | ' + SITE_TITLE : SITE_TITLE)\n}\n\nmodule.exports = setTitle\n\n\n\n/** WEBPACK FOOTER **\n ** C:/repos/react-hn/src/utils/setTitle.js\n **/","var {EventEmitter} = require('events')\n\nvar HNService = require('../services/HNService')\n\nvar extend = require('../utils/extend')\n\n/**\n * Firebase reference used to stream updates - only one StoryStore instance can\n * be active at a time.\n */\nvar firebaseRef = null\n\n// Cache objects shared among StoryStore instances, also accessible via static\n// functions on the StoryStore constructor.\n\n/**\n * Story ids by type, in rank order. Persisted to sessionStorage.\n * @type Object.<type, Array.<id>>\n */\nvar idCache = {}\n\n/**\n * Item cache. Persisted to sessionStorage.\n * @type Object.<id, item>\n */\nvar itemCache = {}\n\n/**\n * Story items in rank order for display, by type.\n * @type Object.<type, Array.<item>>\n */\nvar storyLists = {}\n\n/**\n * Populate the story list for the given story type from the cache.\n */\nfunction populateStoryList(type) {\n  var ids = idCache[type]\n  var storyList = storyLists[type]\n  for (var i = 0, l = ids.length; i < l; i++) {\n    storyList[i] = itemCache[ids[i]] || null\n  }\n}\n\nfunction parseJSON(json, defaultValue) {\n  return (json ? JSON.parse(json) : defaultValue)\n}\n\nclass StoryStore extends EventEmitter {\n  constructor(type) {\n    super()\n    this.type = type\n\n    // Ensure cache objects for this type are initialised\n    if (!(type in idCache)) {\n      idCache[type] = []\n    }\n    if (!(type in storyLists)) {\n      storyLists[type] = []\n      populateStoryList(type)\n    }\n\n    // Pre-bind event handlers per instance\n    this.onStorage = this.onStorage.bind(this)\n    this.onStoriesUpdated = this.onStoriesUpdated.bind(this)\n  }\n\n  getState() {\n    return {\n      ids: idCache[this.type],\n      stories: storyLists[this.type]\n    }\n  }\n\n  itemUpdated(item, index) {\n    storyLists[this.type][index] = item\n    itemCache[item.id] = item\n  }\n\n  /**\n   * Emit an item id event if a storage key corresponding to an item in the\n   * cache has changed.\n   */\n  onStorage(e) {\n    if (itemCache[e.key]) {\n      this.emit(e.key)\n    }\n  }\n\n  /**\n   * Handle story id snapshots from Firebase.\n   */\n  onStoriesUpdated(snapshot) {\n    idCache[this.type] = snapshot.val()\n    populateStoryList(this.type)\n    this.emit('update', this.getState())\n  }\n\n  start() {\n    firebaseRef = HNService.storiesRef(this.type)\n    firebaseRef.on('value', this.onStoriesUpdated)\n    window.addEventListener('storage', this.onStorage)\n  }\n\n  stop() {\n    if (firebaseRef !== null) {\n      firebaseRef.off()\n      firebaseRef = null\n    }\n    window.removeEventListener('storage', this.onStorage)\n  }\n}\n\n// Static, cache-related functions\nextend(StoryStore, {\n  /**\n   * Get an item from the cache.\n   */\n  getItem(id) {\n    return itemCache[id] || null\n  },\n\n  /**\n   * Deserialise caches from sessionStorage.\n   */\n  loadSession() {\n    idCache = parseJSON(window.sessionStorage.idCache, {})\n    itemCache = parseJSON(window.sessionStorage.itemCache, {})\n  },\n\n  /**\n   * Serialise caches to sessionStorage as JSON.\n   */\n  saveSession() {\n    window.sessionStorage.idCache = JSON.stringify(idCache)\n    window.sessionStorage.itemCache = JSON.stringify(itemCache)\n  }\n})\n\nmodule.exports = StoryStore\n\n\n\n/** WEBPACK FOOTER **\n ** C:/repos/react-hn/src/stores/StoryStore.js\n **/","var EventEmitter = require('events').EventEmitter\n\nvar HNService = require('../services/HNService')\n\nvar {UPDATES_CACHE_SIZE} = require('../utils/constants')\nvar extend = require('../utils/extend')\n\n/**\n * Firebase reference used to stream updates.\n */\nvar updatesRef = null\n\n/**\n * Contains item id -> item cache objects. Persisted to sessionStorage.\n * @prop .comments {Object.<id,item>} comments cache.\n * @prop .stories {Object.<id,item>} story cache.\n */\nvar updatesCache = null\n\n/**\n * Lists of items in reverse chronological order for display.\n * @prop .comments {Array.<item>} comment updates.\n * @prop .stories {Array.<item>} story updates.\n */\nvar updates = {}\n\nfunction sortByTimeDesc(a, b) {\n  return b.time - a.time\n}\n\nfunction cacheObjToSortedArray(obj) {\n  var arr = Object.keys(obj).map(function(id) { return obj[id] })\n  arr.sort(sortByTimeDesc)\n  return arr\n}\n\n/**\n * Populate lists of updates for display from the cache.\n */\nfunction populateUpdates() {\n  updates.comments = processCacheObj(updatesCache.comments)\n  updates.stories = processCacheObj(updatesCache.stories)\n}\n\n/**\n * Create an array of items from a cache object, sorted in reverse chronological\n * order. Evict the oldest items from the cache if it's grown above\n * UPDATES_CACHE_SIZE.\n */\nfunction processCacheObj(cacheObj) {\n  var arr = cacheObjToSortedArray(cacheObj)\n  arr.splice(UPDATES_CACHE_SIZE, Math.max(0, arr.length - UPDATES_CACHE_SIZE))\n     .forEach(function(item) {\n       delete cacheObj[item.id]\n     })\n  return arr\n}\n\n/**\n * Lookup to filter out any items which appear in the updates feed which can't\n * be displayed by the Updates component.\n */\nvar updateItemTypes = {\n  comment: true,\n  job: true,\n  poll: true,\n  story: true\n}\n\n/**\n * Process incoming items from the update stream.\n */\nfunction handleUpdateItems(items) {\n  for (var i = 0, l = items.length; i < l; i++) {\n    var item = items[i]\n    // Silently ignore deleted items (because irony)\n    if (item.deleted) { continue }\n\n    if (typeof updateItemTypes[item.type] == 'undefined') {\n      if (process.env.NODE_ENV !== 'production') {\n        console.warn(\n          \"An item which can't be displayed by the Updates component was \" +\n          'received in the updates stream: ' + JSON.stringify(item)\n        )\n      }\n      continue\n    }\n\n    if (item.type === 'comment') {\n      updatesCache.comments[item.id] = item\n    }\n    else {\n      updatesCache.stories[item.id] = item\n    }\n  }\n\n  populateUpdates()\n  UpdatesStore.emit('updates', updates)\n}\n\nvar UpdatesStore = extend(new EventEmitter(), {\n  loadSession() {\n    var json = window.sessionStorage.updates\n    updatesCache = (json ? JSON.parse(json) : {comments: {}, stories: {}})\n    populateUpdates()\n  },\n\n  saveSession() {\n    window.sessionStorage.updates = JSON.stringify(updatesCache)\n  },\n\n  start() {\n    if (updatesRef === null) {\n      updatesRef = HNService.updatesRef()\n      updatesRef.on('value', function(snapshot) {\n        HNService.fetchItems(snapshot.val(), handleUpdateItems)\n      })\n    }\n  },\n\n  stop() {\n    updatesRef.off()\n    updatesRef = null\n  },\n\n  getUpdates() {\n    return updates\n  },\n\n  getItem(id) {\n    return (updatesCache.comments[id] || updatesCache.stories[id] || null)\n  },\n\n  getComment(id) {\n    return (updatesCache.comments[id] || null)\n  },\n\n  getStory(id) {\n    return (updatesCache.stories[id] || null)\n  }\n})\nUpdatesStore.off = UpdatesStore.removeListener\n\nmodule.exports = UpdatesStore\n\n\n\n/** WEBPACK FOOTER **\n ** C:/repos/react-hn/src/stores/UpdatesStore.js\n **/","module.exports = {\n  ITEMS_PER_PAGE: 30,\n  SITE_TITLE: 'React HN',\n  UPDATES_CACHE_SIZE: 500\n}\n\n\n\n/** WEBPACK FOOTER **\n ** C:/repos/react-hn/src/utils/constants.js\n **/","function pluralise(howMany, suffixes) {\n  return (suffixes || ',s').split(',')[(howMany === 1 ? 0 : 1)]\n}\n\nmodule.exports = pluralise\n\n\n\n/** WEBPACK FOOTER **\n ** C:/repos/react-hn/src/utils/pluralise.js\n **/","var nextTick = require('process/browser.js').nextTick;\nvar apply = Function.prototype.apply;\nvar slice = Array.prototype.slice;\nvar immediateIds = {};\nvar nextImmediateId = 0;\n\n// DOM APIs, for completeness\n\nexports.setTimeout = function() {\n  return new Timeout(apply.call(setTimeout, window, arguments), clearTimeout);\n};\nexports.setInterval = function() {\n  return new Timeout(apply.call(setInterval, window, arguments), clearInterval);\n};\nexports.clearTimeout =\nexports.clearInterval = function(timeout) { timeout.close(); };\n\nfunction Timeout(id, clearFn) {\n  this._id = id;\n  this._clearFn = clearFn;\n}\nTimeout.prototype.unref = Timeout.prototype.ref = function() {};\nTimeout.prototype.close = function() {\n  this._clearFn.call(window, this._id);\n};\n\n// Does not start the time, just sets up the members needed.\nexports.enroll = function(item, msecs) {\n  clearTimeout(item._idleTimeoutId);\n  item._idleTimeout = msecs;\n};\n\nexports.unenroll = function(item) {\n  clearTimeout(item._idleTimeoutId);\n  item._idleTimeout = -1;\n};\n\nexports._unrefActive = exports.active = function(item) {\n  clearTimeout(item._idleTimeoutId);\n\n  var msecs = item._idleTimeout;\n  if (msecs >= 0) {\n    item._idleTimeoutId = setTimeout(function onTimeout() {\n      if (item._onTimeout)\n        item._onTimeout();\n    }, msecs);\n  }\n};\n\n// That's not how node.js implements it but the exposed api is the same.\nexports.setImmediate = typeof setImmediate === \"function\" ? setImmediate : function(fn) {\n  var id = nextImmediateId++;\n  var args = arguments.length < 2 ? false : slice.call(arguments, 1);\n\n  immediateIds[id] = true;\n\n  nextTick(function onNextTick() {\n    if (immediateIds[id]) {\n      // fn.call() is faster so we optimize for the common use-case\n      // @see http://jsperf.com/call-apply-segu\n      if (args) {\n        fn.apply(null, args);\n      } else {\n        fn.call(null);\n      }\n      // Prevent ids from leaking\n      exports.clearImmediate(id);\n    }\n  });\n\n  return id;\n};\n\nexports.clearImmediate = typeof clearImmediate === \"function\" ? clearImmediate : function(id) {\n  delete immediateIds[id];\n};\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ../nwb/~/webpack/~/node-libs-browser/~/timers-browserify/main.js\n ** module id = 39\n ** module chunks = 1\n **/","var React = require('react')\nvar Link = require('react-router/lib/Link')\nvar TimeAgo = require('react-timeago')\n\nvar ItemStore = require('../stores/ItemStore')\nvar SettingsStore = require('../stores/SettingsStore')\n\nvar Spinner = require('../Spinner')\n\nvar pluralise = require('../utils/pluralise')\n\nvar CommentMixin = {\n  fetchAncestors(comment) {\n    ItemStore.fetchCommentAncestors(comment, result => {\n      if (process.env.NODE_ENV !== 'production') {\n        console.info(\n          'fetchAncestors(' + comment.id + ') took ' +\n          result.timeTaken + ' ms for ' +\n          result.itemCount + ' item' + pluralise(result.itemCount) + ' with ' +\n          result.cacheHits + ' cache hit' + pluralise(result.cacheHits) + ' (' +\n          (result.cacheHits / result.itemCount * 100).toFixed(1) + '%)'\n        )\n      }\n      if (!this.isMounted()) {\n        if (process.env.NODE_ENV !== 'production') {\n          console.info(\"...but the comment isn't mounted\")\n        }\n        // Too late - the comment or the user has moved elsewhere\n        return\n      }\n      this.setState({\n        parent: result.parent,\n        op: result.op\n      })\n    })\n  },\n\n  renderCommentLoading(comment) {\n    return <div className={'Comment Comment--loading Comment--level' + this.props.level}>\n      {(this.props.loadingSpinner || comment.delayed) && <Spinner size=\"20\"/>}\n      {comment.delayed && <div className=\"Comment__text\">\n        Unable to load comment &ndash; this usually indicates the author has configured a delay.\n        Trying again in 30 seconds.\n      </div>}\n    </div>\n  },\n\n  renderCommentDeleted(comment, options) {\n    return <div className={options.className}>\n      <div className=\"Comment__content\">\n        <div className=\"Comment__meta\">\n          [deleted] | <a href={'https://news.ycombinator.com/item?id=' + comment.id}>view on Hacker News</a>\n        </div>\n      </div>\n    </div>\n  },\n\n  renderError(comment, options) {\n    return <div className={options.className}>\n      <div className=\"Comment__content\">\n        <div className=\"Comment__meta\">\n          [error] | comment is {JSON.stringify(comment)} | <a href={'https://news.ycombinator.com/item?id=' + options.id}>view on Hacker News</a>\n        </div>\n      </div>\n    </div>\n  },\n\n  renderCollapseControl(collapsed) {\n    return <span className=\"Comment__collapse\" onClick={this.toggleCollapse} onKeyPress={this.toggleCollapse} tabIndex=\"0\">\n      [{collapsed ? '+' : '–'}]\n    </span>\n  },\n\n  /**\n   * @param options.collapsible {Boolean} if true, assumes this.toggleCollspse()\n   * @param options.collapsed {Boolean}\n   * @param options.link {Boolean}\n   * @param options.parent {Boolean} if true, assumes this.state.parent\n   * @param options.op {Boolean} if true, assumes this.state.op\n   * @param options.childCounts {Object} with .children and .newComments\n   */\n  renderCommentMeta(comment, options) {\n    if (comment.dead && !SettingsStore.showDead) {\n      return <div className=\"Comment__meta\">\n        {options.collapsible && this.renderCollapseControl(options.collapsed)}\n        {options.collapsible && ' '}\n        [dead]\n        {options.childCounts && ' | (' + options.childCounts.children + ' child' + pluralise(options.childCounts.children, ',ren')}\n          {options.childCounts && options.childCounts.newComments > 0 && ', '}\n          {options.childCounts && options.childCounts.newComments > 0 && <em>{options.childCounts.newComments} new</em>}\n        {options.childCounts && ')'}\n      </div>\n    }\n\n    return <div className=\"Comment__meta\">\n      {options.collapsible && this.renderCollapseControl(options.collapsed)}\n      {options.collapsible && ' '}\n      <Link to={`/user/${comment.by}`} className=\"Comment__user\">{comment.by}</Link>{' '}\n      <TimeAgo date={comment.time * 1000}/>\n      {options.link && ' | '}\n      {options.link && <Link to={`/comment/${comment.id}`}>link</Link>}\n      {options.parent && ' | '}\n      {options.parent && <Link to={`/${this.state.parent.type}/${comment.parent}`}>parent</Link>}\n      {options.op && ' | on: '}\n      {options.op && <Link to={`/${this.state.op.type}/${this.state.op.id}`}>{this.state.op.title}</Link>}\n      {comment.dead && ' | [dead]'}\n      {options.childCounts && ' | (' + options.childCounts.children + ' child' + pluralise(options.childCounts.children, ',ren')}\n        {options.childCounts && options.childCounts.newComments > 0 && ', '}\n        {options.childCounts && options.childCounts.newComments > 0 && <em>{options.childCounts.newComments} new</em>}\n      {options.childCounts && ')'}\n    </div>\n  },\n\n  renderCommentText(comment, options) {\n    return <div className=\"Comment__text\">\n      {(!comment.dead || SettingsStore.showDead) ? <div dangerouslySetInnerHTML={{__html: comment.text}}/> : '[dead]'}\n      {SettingsStore.replyLinks && options.replyLink && !comment.dead && <p>\n        <a href={`https://news.ycombinator.com/reply?id=${comment.id}`}>reply</a>\n      </p>}\n    </div>\n  }\n}\n\nmodule.exports = CommentMixin\n\n\n\n/** WEBPACK FOOTER **\n ** C:/repos/react-hn/src/mixins/CommentMixin.js\n **/","var React = require('react')\nvar Link = require('react-router/lib/Link')\nvar TimeAgo = require('react-timeago')\n\nvar SettingsStore = require('../stores/SettingsStore')\nvar pluralise = require('../utils/pluralise')\n\nvar parseHost = (function() {\n  var a = document.createElement('a')\n  return function(url) {\n    a.href = url\n    var parts = a.hostname.split('.').slice(-3)\n    if (parts[0] === 'www') {\n      parts.shift()\n    }\n    return parts.join('.')\n  }\n})()\n\n/**\n * Reusable logic for displaying an item.\n */\nvar ItemMixin = {\n  /**\n   * Render an item's metadata bar.\n   */\n  renderItemMeta(item, extraContent) {\n    var itemDate = new Date(item.time * 1000)\n\n    if (item.type === 'job') {\n      return <div className=\"Item__meta\">\n        <TimeAgo date={itemDate} className=\"Item__time\"/>\n      </div>\n    }\n\n    return <div className=\"Item__meta\">\n      <span className=\"Item__score\">\n        {item.score} point{pluralise(item.score)}\n      </span>{' '}\n      <span className=\"Item__by\">\n        by <Link to={`/user/${item.by}`}>{item.by}</Link>\n      </span>{' '}\n      <TimeAgo date={itemDate} className=\"Item__time\"/>\n      {' | '}\n      <Link to={`/${item.type}/${item.id}`}>\n        {item.descendants > 0 ? item.descendants + ' comment' + pluralise(item.descendants) : 'discuss'}\n      </Link>\n      {extraContent}\n    </div>\n  },\n\n  /**\n   * Render an item's title bar.\n   */\n  renderItemTitle(item) {\n    var hasURL = !!item.url\n    var title\n    if (item.dead) {\n      title = '[dead] ' + item.title\n    }\n    else {\n      title = (hasURL ? <a href={item.url}>{item.title}</a>\n                      : <Link to={`/${item.type}/${item.id}`}>{item.title}</Link>)\n    }\n    return <div className=\"Item__title\" style={{fontSize: SettingsStore.titleFontSize}}>\n      {title}\n      {hasURL && ' '}\n      {hasURL && <span className=\"Item__host\">({parseHost(item.url)})</span>}\n    </div>\n  }\n}\n\nmodule.exports = ItemMixin\n\n\n\n/** WEBPACK FOOTER **\n ** C:/repos/react-hn/src/mixins/ItemMixin.js\n **/","var extend = require('../utils/extend')\n\nfunction CommentThreadStore(item, onCommentsChanged) {\n  this.itemId = item.id\n  this.onCommentsChanged = onCommentsChanged\n\n  /**\n   * Lookup from a comment id to its child comment ids.\n   * @type {Object.<id,Array.<Number>>}\n   */\n  this.children = {}\n  this.children[item.id] = []\n\n  /**\n   * Lookup for new comment ids. Will only contain true.\n   * @type {Object.<id,Boolean>}\n   */\n  this.isNew = {}\n\n  /**\n   * Lookup for collapsed state of comment ids. May contain true or false.\n   * @type {Object.<id,Boolean>}\n   */\n  this.isCollapsed = {}\n}\n\nextend(CommentThreadStore.prototype, {\n  /**\n   * Get counts of children and new comments under the given comment.\n   * @return .children {Number}\n   * @return .newComments {Number}\n   */\n  getChildCounts(comment) {\n    var childCount = 0\n    var newCommentCount = 0\n    var nodes = [comment.id]\n\n    while (nodes.length) {\n      var nextNodes = []\n      for (var i = 0, l = nodes.length; i < l; i++) {\n        var nodeChildren = this.children[nodes[i]]\n        if (nodeChildren.length) {\n          nextNodes.push.apply(nextNodes, nodeChildren)\n        }\n      }\n      for (i = 0, l = nextNodes.length; i < l; i++) {\n        if (this.isNew[nextNodes[i]]) {\n          newCommentCount++\n        }\n      }\n      childCount += nextNodes.length\n      nodes = nextNodes\n    }\n\n    return {\n      children: childCount,\n      newComments: newCommentCount\n    }\n  },\n\n  /**\n   * Register a comment's appearance in the thread.\n   */\n  commentAdded(comment) {\n    if (comment.deleted) { return }\n\n    this.children[comment.id] = []\n    this.children[comment.parent].push(comment.id)\n  },\n\n  /**\n   * Register a comment's deletion from the thread.\n   */\n  commentDeleted(comment) {\n    // Comments which initially failed to load (null from Firebase API) can be\n    // deleted by the time the API catches up.\n    if (!comment) { return }\n\n    var siblings = this.children[comment.parent]\n    siblings.splice(siblings.indexOf(comment.id), 1)\n  },\n\n  toggleCollapse(commentId) {\n    this.isCollapsed[commentId] = !this.isCollapsed[commentId]\n    this.onCommentsChanged({type: 'collapse'})\n  }\n})\n\nmodule.exports = CommentThreadStore\n\n\n\n/** WEBPACK FOOTER **\n ** C:/repos/react-hn/src/stores/CommentThreadStore.js\n **/","var CommentThreadStore = require('./CommentThreadStore')\nvar SettingsStore = require('./SettingsStore')\n\nvar debounce = require('../utils/cancellableDebounce')\nvar extend = require('../utils/extend')\nvar pluralise = require('../utils/pluralise')\nvar storage = require('../utils/storage')\n\n/**\n * Load persisted comment thread state.\n * @return .lastVisit {Date} null if the item hasn't been visited before.\n * @return .commentCount {Number} 0 if the item hasn't been visited before.\n * @return .maxCommentId {Number} 0 if the item hasn't been visited before.\n */\nfunction loadState(itemId) {\n  var json = storage.get(itemId)\n  if (json) {\n    return JSON.parse(json)\n  }\n  return {\n    lastVisit: null,\n    commentCount: 0,\n    maxCommentId: 0\n  }\n}\n\nfunction StoryCommentThreadStore(item, onCommentsChanged, options) {\n  CommentThreadStore.call(this, item, onCommentsChanged)\n  this.startedLoading = Date.now()\n\n  /** Lookup from a comment id to its parent comment id. */\n  this.parents = {}\n  /** The number of comments which have loaded. */\n  this.commentCount = 0\n  /** The number of new comments which have loaded. */\n  this.newCommentCount = 0\n  /** The max comment id seen by the store. */\n  this.maxCommentId = 0\n  /** Has the comment thread finished loading? */\n  this.loading = true\n  /** The number of comments we're expecting to load. */\n  this.expectedComments = item.kids ? item.kids.length : 0\n  /**\n   * The number of descendants the story has according to the API.\n   * This count includes deleted comments, which aren't accessible via the API,\n   * so a thread with deleted comments (example story id: 9273709) will never\n   * load this number of comments\n   * However, we still need to persist the last known descendant count in order\n   * to determine how many new comments there are when displaying the story on a\n   * list page.\n   */\n  this.itemDescendantCount = item.descendants\n\n  var initialState = loadState(item.id)\n  /** Time of last visit to the story. */\n  this.lastVisit = initialState.lastVisit\n  /** Max comment id on the last visit - determines which comments are new. */\n  this.prevMaxCommentId = initialState.maxCommentId\n  /** Is this the user's first time viewing the story? */\n  this.isFirstVisit = (initialState.lastVisit === null)\n\n  // Trigger an immediate check for thread load completion if the item was not\n  // retrieved from the cache, so is the latest version. This completes page\n  // loading immediately for items which have no comments yet.\n  if (!options.cached) {\n    this.checkLoadCompletion()\n  }\n}\n\nStoryCommentThreadStore.loadState = loadState\n\nStoryCommentThreadStore.prototype = extend(Object.create(CommentThreadStore.prototype), {\n  constructor: StoryCommentThreadStore,\n\n  /**\n   * Callback to the item component with updated comment counts, debounced as\n   * comments will be loading frequently on initial load.\n   */\n  numberOfCommentsChanged: debounce(function() {\n    this.onCommentsChanged({type: 'number'})\n  }, 123),\n\n  /**\n   * If we don't have a last visit time stored for an item, it must have been\n   * visited for the first time. Once it finishes loading, establish the last\n   * visit time and max comment id which will be used to track and display new\n   * comments.\n   */\n  firstLoadComplete() {\n    this.lastVisit = Date.now()\n    this.prevMaxCommentId = this.maxCommentId\n    this.isFirstVisit = false\n    this.onCommentsChanged({type: 'first_load_complete'})\n  },\n\n  /**\n   * Check whether the number of comments has reached the expected number yet.\n   */\n  checkLoadCompletion() {\n    if (this.loading && this.commentCount >= this.expectedComments) {\n      if (process.env.NODE_ENV !== 'production') {\n        console.info(\n          'Initial load of ' +\n           this.commentCount + ' comment' + pluralise(this.commentCount) +\n          ' for ' + this.itemId + ' took ' +\n          ((Date.now() - this.startedLoading) / 1000).toFixed(2) + 's'\n        )\n      }\n      this.loading = false\n      if (this.isFirstVisit) {\n        this.firstLoadComplete()\n      }\n      else if (SettingsStore.autoCollapse && this.newCommentCount > 0) {\n        this.collapseThreadsWithoutNewComments()\n      }\n      this._storeState()\n    }\n  },\n\n  /**\n   * Persist comment thread state.\n   */\n  _storeState() {\n    storage.set(this.itemId, JSON.stringify({\n      lastVisit: Date.now(),\n      commentCount: this.itemDescendantCount,\n      maxCommentId: this.maxCommentId\n    }))\n  },\n\n  /**\n   * The item this comment thread belongs to got updated.\n   */\n  itemUpdated(item) {\n    this.itemDescendantCount = item.descendants\n  },\n\n  /**\n   * A comment got loaded initially or added later.\n   */\n  commentAdded(comment) {\n    // Deleted comments don't count towards the comment count\n    if (comment.deleted) {\n      // Adjust the number of comments expected during the initial page load.\n      if (this.loading) {\n        this.expectedComments--\n        this.checkLoadCompletion()\n      }\n      return\n    }\n\n    CommentThreadStore.prototype.commentAdded.call(this, comment)\n\n    // Dead comments don't contribute to the comment count if showDead is off\n    if (comment.dead && !SettingsStore.showDead) {\n      this.expectedComments--\n    }\n    else {\n      this.commentCount++\n    }\n    // Add the number of kids the comment has to the expected total for the\n    // initial load.\n    if (this.loading && comment.kids) {\n      this.expectedComments += comment.kids.length\n    }\n    // Register the comment as new if it's new, unless it's dead and showDead is off\n    if (this.prevMaxCommentId > 0 &&\n        comment.id > this.prevMaxCommentId &&\n        (!comment.dead || SettingsStore.showDead)) {\n      this.newCommentCount++\n      this.isNew[comment.id] = true\n    }\n    // Keep track of the biggest comment id seen\n    if (comment.id > this.maxCommentId) {\n      this.maxCommentId = comment.id\n    }\n    // We don't want the story to be part of the comment parent hierarchy\n    if (comment.parent !== this.itemId) {\n      this.parents[comment.id] = comment.parent\n    }\n\n    this.numberOfCommentsChanged()\n    if (this.loading) {\n      this.checkLoadCompletion()\n    }\n  },\n\n  /**\n   * A comment which hasn't loaded yet is being delayed.\n   */\n  commentDelayed(commentId) {\n    // Don't wait for delayed comments\n    this.expectedComments--\n  },\n\n  /**\n   * A comment which wasn't previously deleted became deleted.\n   */\n  commentDeleted(comment) {\n    CommentThreadStore.prototype.commentDeleted.call(this, comment)\n    this.commentCount--\n    if (this.isNew[comment.id]) {\n      this.newCommentCount--\n      delete this.isNew[comment.id]\n    }\n    delete this.parents[comment.id]\n    // Trigger debounced callbacks\n    this.numberOfCommentsChanged()\n  },\n\n  /**\n   * A comment which wasn't previously dead became dead.\n   */\n  commentDied(comment) {\n    if (!SettingsStore.showDead) {\n      this.commentCount--\n      if (this.isNew[comment.id]) {\n        this.newCommentCount--\n        delete this.isNew[comment.id]\n      }\n    }\n  },\n\n  /**\n   * Change the expected number of comments if an update was received during\n   * initial loding and trigger a re-check of loading completion.\n   */\n  adjustExpectedComments(change) {\n    this.expectedComments += change\n    this.checkLoadCompletion()\n  },\n\n  collapseThreadsWithoutNewComments() {\n    // Create an id lookup for comments which have a new comment as one of their\n    // descendants. New comments themselves are not added to the lookup.\n    var newCommentIds = Object.keys(this.isNew)\n    var hasNewComments = {}\n    for (var i = 0, l = newCommentIds.length; i < l; i++) {\n      var parent = this.parents[newCommentIds[i]]\n      while (parent) {\n        // Stop when we hit one we've seen before\n        if (hasNewComments[parent]) {\n          break\n        }\n        hasNewComments[parent] = true\n        parent = this.parents[parent]\n      }\n    }\n\n    // Walk the tree of comments one level at a time, only walking children to\n    // comments we know have new comment descendants, to find subtrees which\n    // don't have new comments.\n    // Other comments are marked for collapsing unless they are themselves a\n    // new comment (in which case all their replies must be new too).\n    var shouldCollapse = {}\n    var commentIds = this.children[this.itemId]\n    while (commentIds.length) {\n      var nextCommentIds = []\n      for (i = 0, l = commentIds.length; i < l; i++) {\n        var commentId = commentIds[i]\n        if (!hasNewComments[commentId]) {\n          if (!this.isNew[commentId]) {\n            shouldCollapse[commentId] = true\n          }\n        }\n        else {\n          var childCommentIds = this.children[commentId]\n          if (childCommentIds.length) {\n            nextCommentIds.push.apply(nextCommentIds, childCommentIds)\n          }\n        }\n      }\n      commentIds = nextCommentIds\n    }\n\n    this.isCollapsed = shouldCollapse\n    this.onCommentsChanged({type: 'collapse'})\n  },\n\n  /**\n   * Merk the thread as read.\n   */\n  markAsRead() {\n    this.lastVisit = Date.now()\n    this.newCommentCount = 0\n    this.prevMaxCommentId = this.maxCommentId\n    this.isNew = {}\n    this._storeState()\n  },\n\n  /**\n   * Persist comment thread state and perform any necessary internal cleanup.\n   */\n  dispose() {\n    // Cancel debounced callbacks in case any are pending\n    this.numberOfCommentsChanged.cancel()\n    this._storeState()\n  }\n})\n\nmodule.exports = StoryCommentThreadStore\n\n\n\n/** WEBPACK FOOTER **\n ** C:/repos/react-hn/src/stores/StoryCommentThreadStore.js\n **/","var React = require('react')\nvar ReactFireMixin = require('reactfire')\n\nvar CommentThreadStore = require('./stores/CommentThreadStore')\nvar HNService = require('./services/HNService')\nvar SettingsStore = require('./stores/SettingsStore')\n\nvar CommentMixin = require('./mixins/CommentMixin')\n\nvar cx = require('./utils/buildClassName')\n\n/**\n * A comment in a thread.\n */\nvar Comment = React.createClass({\n  mixins: [CommentMixin, ReactFireMixin],\n\n  propTypes: {\n    id: React.PropTypes.number.isRequired,\n    level: React.PropTypes.number.isRequired,\n    loadingSpinner: React.PropTypes.bool,\n    threadStore: React.PropTypes.instanceOf(CommentThreadStore).isRequired\n  },\n\n  getDefaultProps() {\n    return {\n      loadingSpinner: false\n    }\n  },\n\n  getInitialState() {\n    return {\n      comment: {}\n    }\n  },\n\n  componentWillMount() {\n    this.bindFirebaseRef()\n  },\n\n  componentWillUnmount() {\n    this.clearDelayTimeout()\n  },\n\n  componentDidUpdate(prevProps, prevState) {\n    // Huge, fast-growing threads like https://news.ycombinator.com/item?id=9784470\n    // seem to break the API - some comments are coming back from Firebase as null.\n    if (!this.state.comment) {\n      this.props.threadStore.adjustExpectedComments(-1)\n      return\n    }\n\n    // On !prevState.comment: a comment which was initially null - see\n    // above - may eventually load when the API catches up.\n    if (!prevState.comment || !prevState.comment.id) {\n      // Register a newly-loaded comment with the thread store\n      if (this.state.comment.id) {\n        // If the comment was delayed, cancel any pending timeout\n        if (prevState.comment && prevState.comment.delayed) {\n          this.clearDelayTimeout()\n        }\n        this.props.threadStore.commentAdded(this.state.comment)\n      }\n      if (prevState.comment && !prevState.comment.delayed && this.state.comment.delayed) {\n        this.props.threadStore.commentDelayed(this.props.id)\n      }\n    }\n    // The comment was already loaded, look for changes to it\n    else {\n      if (!prevState.comment.deleted && this.state.comment.deleted) {\n        this.props.threadStore.commentDeleted(this.state.comment)\n      }\n      if (!prevState.comment.dead && this.state.comment.dead) {\n        this.props.threadStore.commentDied(this.state.comment)\n      }\n      // If the comment has been updated and the initial set of comments is\n      // still loading, the number of expected comments might need to be\n      // adjusted.\n      else if (prevState.comment !== this.state.comment &&\n               this.props.threadStore.loading) {\n        var kids = (this.state.comment.kids ? this.state.comment.kids.length : 0)\n        var prevKids = (prevState.comment.kids ? prevState.comment.kids.length : 0)\n        this.props.threadStore.adjustExpectedComments(kids - prevKids)\n      }\n    }\n  },\n\n  bindFirebaseRef() {\n    this.bindAsObject(HNService.itemRef(this.props.id), 'comment', this.handleFirebaseRefCancelled)\n    if (this.timeout) {\n      this.timeout = null\n    }\n  },\n\n  /**\n   * This is usually caused by a permissions error loading the comment due to\n   * its author using the delay setting (note: this is conjecture), which is\n   * measured in minutes - try again in 30 seconds.\n   */\n  handleFirebaseRefCancelled(e) {\n    if (process.env.NODE_ENV !== 'production') {\n      console.error('Firebase ref for comment ' + this.props.id + ' was cancelled: ' + e.message)\n    }\n    this.unbind('comment')\n    this.timeout = setTimeout(this.bindFirebaseRef, 30000)\n    if (this.state.comment && !this.state.comment.delayed) {\n      this.state.comment.delayed = true\n      this.forceUpdate()\n    }\n  },\n\n  clearDelayTimeout() {\n    if (this.timeout) {\n      clearTimeout(this.timeout)\n      this.timeout = null\n    }\n  },\n\n  toggleCollapse(e) {\n    e.preventDefault()\n    this.props.threadStore.toggleCollapse(this.state.comment.id)\n  },\n\n  render() {\n    var comment = this.state.comment\n    var props = this.props\n    if (!comment) {\n      return this.renderError(comment, {\n        id: this.props.id,\n        className: 'Comment Comment--error Comment--level' + props.level\n      })\n    }\n    // Render a placeholder while we're waiting for the comment to load\n    if (!comment.id) { return this.renderCommentLoading(comment) }\n    // Don't show dead coments or their children, when configured\n    if (comment.dead && !SettingsStore.showDead) { return null }\n    // Render a link to HN for deleted comments if they're being displayed\n    if (comment.deleted) {\n      if (!SettingsStore.showDeleted) { return null }\n      return this.renderCommentDeleted(comment, {\n        className: 'Comment Comment--deleted Comment--level' + props.level\n      })\n    }\n\n    var isNew = props.threadStore.isNew[comment.id]\n    var collapsed = !!props.threadStore.isCollapsed[comment.id]\n    var childCounts = (collapsed && props.threadStore.getChildCounts(comment))\n    if (collapsed && isNew) { childCounts.newComments = 0 }\n    var className = cx('Comment Comment--level' + props.level, {\n      'Comment--collapsed': collapsed,\n      'Comment--dead': comment.dead,\n      'Comment--new': isNew\n    })\n\n    return <div className={className}>\n      <div className=\"Comment__content\">\n        {this.renderCommentMeta(comment, {\n          collapsible: true,\n          collapsed: collapsed,\n          link: true,\n          childCounts: childCounts\n        })}\n        {this.renderCommentText(comment, {replyLink: true})}\n      </div>\n      {comment.kids && <div className=\"Comment__kids\">\n        {comment.kids.map(function(id) {\n          return <Comment key={id} id={id}\n            level={props.level + 1}\n            loadingSpinner={props.loadingSpinner}\n            threadStore={props.threadStore}\n          />\n        })}\n      </div>}\n    </div>\n  }\n})\n\nmodule.exports = Comment\n\n\n\n/** WEBPACK FOOTER **\n ** C:/repos/react-hn/src/Comment.js\n **/","var React = require('react')\nvar Link = require('react-router/lib/Link')\n\nvar Paginator = React.createClass({\n  _onClick(e) {\n    setTimeout(function() { window.scrollTo(0, 0) }, 0)\n  },\n\n  render() {\n    if (this.props.page === 1 && !this.props.hasNext) { return null }\n    return <div className=\"Paginator\">\n      {this.props.page > 1 && <span className=\"Paginator__prev\">\n        <Link to={`/${this.props.route}`} query={{page: this.props.page - 1}} onClick={this._onClick}>Prev</Link>\n      </span>}\n      {this.props.page > 1 && this.props.hasNext && ' | '}\n      {this.props.hasNext && <span className=\"Paginator__next\">\n        <Link to={`/${this.props.route}`} query={{page: this.props.page + 1}} onClick={this._onClick}>More</Link>\n      </span>}\n    </div>\n  }\n})\n\nmodule.exports = Paginator\n\n\n\n/** WEBPACK FOOTER **\n ** C:/repos/react-hn/src/Paginator.js\n **/","var React = require('react')\nvar Link = require('react-router/lib/Link')\n\nvar SettingsStore = require('../stores/SettingsStore')\nvar cx = require('../utils/buildClassName')\n\n/**\n * Reusable logic for displaying an item in a list.\n * Must be used in conjunction with ItemMixin for its rendering methods.\n */\nvar ListItemMixin = {\n  getNewCommentCount(item, threadState) {\n    if (threadState.lastVisit === null) {\n      return 0\n    }\n    return item.descendants - threadState.commentCount\n  },\n\n  renderListItem(item, threadState) {\n    if (item.deleted) { return null }\n    var newCommentCount = this.getNewCommentCount(item, threadState)\n    return <li className={cx('ListItem', {'ListItem--dead': item.dead})} style={{marginBottom: SettingsStore.listSpacing}}>\n      {this.renderItemTitle(item)}\n      {this.renderItemMeta(item, (newCommentCount > 0 && <span className=\"ListItem__newcomments\">{' '}\n        (<Link to={`/${item.type}/${item.id}`}>\n          {newCommentCount} new\n        </Link>)\n      </span>))}\n    </li>\n  }\n}\n\nmodule.exports = ListItemMixin\n\n\n\n/** WEBPACK FOOTER **\n ** C:/repos/react-hn/src/mixins/ListItemMixin.js\n **/","var PageNumberMixin = {\n  getPageNumber(page) {\n    if (typeof page == 'undefined') {\n      page = this.props.location.query.page\n    }\n    return (page && /^\\d+$/.test(page) ? Math.max(1, Number(page)) : 1)\n  }\n}\n\nmodule.exports = PageNumberMixin\n\n\n\n/** WEBPACK FOOTER **\n ** C:/repos/react-hn/src/mixins/PageNumberMixin.js\n **/","var HNService = require('../services/HNService')\n\nvar StoryStore = require('./StoryStore')\nvar UpdatesStore = require('./UpdatesStore')\n\nvar commentParentLookup = {}\nvar titleCache = {}\n\nfunction fetchCommentParent(comment, cb, result) {\n  var commentId = comment.id\n  var parentId = comment.parent\n\n  while (commentParentLookup[parentId] || titleCache[parentId]) {\n    // We just saved ourselves an item fetch\n    result.itemCount++\n    result.cacheHits++\n\n    // The parent is a known non-comment\n    if (titleCache[parentId]) {\n      if (result.itemCount === 1) { result.parent = titleCache[parentId] }\n      result.op = titleCache[parentId]\n      cb(result)\n      return\n    }\n\n    // The parent is a known comment\n    if (commentParentLookup[parentId]) {\n      if (result.itemCount === 1) { result.parent = {id: parentId, type: 'comment'} }\n      // Set the parent comment's ids up for the next iteration\n      commentId = parentId\n      parentId = commentParentLookup[parentId]\n    }\n  }\n\n  // The parent of the current comment isn't known, so we'll have to fetch it\n  ItemStore.getItem(parentId, function(parent) {\n    result.itemCount++\n    // Add the current comment's parent to the lookup for next time\n    commentParentLookup[commentId] = parentId\n    if (parent.type === 'comment') {\n      commentParentLookup[parent.id] = parent.parent\n    }\n    processCommentParent(parent, cb, result)\n  }, result)\n}\n\nfunction processCommentParent(item, cb, result) {\n  if (result.itemCount === 1) {\n    result.parent = item\n  }\n  if (item.type !== 'comment') {\n    result.op = item\n    titleCache[item.id] = {\n      id: item.id,\n      type: item.type,\n      title: item.title\n    }\n    cb(result)\n  }\n  else {\n    fetchCommentParent(item, cb, result)\n  }\n}\n\nvar ItemStore = {\n  getItem(id, cb, result) {\n    var cachedItem = this.getCachedItem(id)\n    if (cachedItem) {\n      if (result) {\n        result.cacheHits++\n      }\n      setImmediate(cb, cachedItem)\n    }\n    else {\n      HNService.fetchItem(id, cb)\n    }\n  },\n\n  getCachedItem(id) {\n    return StoryStore.getItem(id) || UpdatesStore.getItem(id) || null\n  },\n\n  getCachedStory(id) {\n    return StoryStore.getItem(id) || UpdatesStore.getStory(id) || null\n  },\n\n  fetchCommentAncestors(comment, cb) {\n    var startTime = Date.now()\n    var result = {itemCount: 0, cacheHits: 0}\n    fetchCommentParent(comment, function() {\n      result.timeTaken = Date.now() - startTime\n      setImmediate(cb, result)\n    }, result)\n  }\n}\n\nmodule.exports = ItemStore\n\n\n\n/** WEBPACK FOOTER **\n ** C:/repos/react-hn/src/stores/ItemStore.js\n **/","function pageCalc(pageNum, pageSize, numItems) {\n  var startIndex = (pageNum - 1) * pageSize\n  var endIndex = Math.min(numItems, startIndex + pageSize)\n  var hasNext = endIndex < numItems - 1\n  return {pageNum, startIndex, endIndex, hasNext}\n}\n\nmodule.exports = pageCalc\n\n\n\n/** WEBPACK FOOTER **\n ** C:/repos/react-hn/src/utils/pageCalc.js\n **/","module.exports = {\n  get(key, defaultValue) {\n    var value = window.localStorage[key]\n    return (typeof value != 'undefined' ? value : defaultValue)\n  },\n  set(key, value) {\n    window.localStorage[key] = value\n  }\n}\n\n\n\n/** WEBPACK FOOTER **\n ** C:/repos/react-hn/src/utils/storage.js\n **/","// shim for using process in browser\n\nvar process = module.exports = {};\nvar queue = [];\nvar draining = false;\nvar currentQueue;\nvar queueIndex = -1;\n\nfunction cleanUpNextTick() {\n    draining = false;\n    if (currentQueue.length) {\n        queue = currentQueue.concat(queue);\n    } else {\n        queueIndex = -1;\n    }\n    if (queue.length) {\n        drainQueue();\n    }\n}\n\nfunction drainQueue() {\n    if (draining) {\n        return;\n    }\n    var timeout = setTimeout(cleanUpNextTick);\n    draining = true;\n\n    var len = queue.length;\n    while(len) {\n        currentQueue = queue;\n        queue = [];\n        while (++queueIndex < len) {\n            if (currentQueue) {\n                currentQueue[queueIndex].run();\n            }\n        }\n        queueIndex = -1;\n        len = queue.length;\n    }\n    currentQueue = null;\n    draining = false;\n    clearTimeout(timeout);\n}\n\nprocess.nextTick = function (fun) {\n    var args = new Array(arguments.length - 1);\n    if (arguments.length > 1) {\n        for (var i = 1; i < arguments.length; i++) {\n            args[i - 1] = arguments[i];\n        }\n    }\n    queue.push(new Item(fun, args));\n    if (queue.length === 1 && !draining) {\n        setTimeout(drainQueue, 0);\n    }\n};\n\n// v8 likes predictible objects\nfunction Item(fun, array) {\n    this.fun = fun;\n    this.array = array;\n}\nItem.prototype.run = function () {\n    this.fun.apply(null, this.array);\n};\nprocess.title = 'browser';\nprocess.browser = true;\nprocess.env = {};\nprocess.argv = [];\nprocess.version = ''; // empty string to avoid regexp issues\nprocess.versions = {};\n\nfunction noop() {}\n\nprocess.on = noop;\nprocess.addListener = noop;\nprocess.once = noop;\nprocess.off = noop;\nprocess.removeListener = noop;\nprocess.removeAllListeners = noop;\nprocess.emit = noop;\n\nprocess.binding = function (name) {\n    throw new Error('process.binding is not supported');\n};\n\nprocess.cwd = function () { return '/' };\nprocess.chdir = function (dir) {\n    throw new Error('process.chdir is not supported');\n};\nprocess.umask = function() { return 0; };\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ../nwb/~/webpack/~/node-libs-browser/~/process/browser.js\n ** module id = 86\n ** module chunks = 1\n **/","var React = require('react')\nvar Link = require('react-router/lib/Link')\n\nvar Settings = require('./Settings')\n\nvar StoryStore = require('./stores/StoryStore')\nvar UpdatesStore = require('./stores/UpdatesStore')\nvar SettingsStore = require('./stores/SettingsStore')\n\nvar App = React.createClass({\n  getInitialState() {\n    return {\n      showSettings: false\n    }\n  },\n\n  componentWillMount() {\n    SettingsStore.load()\n    StoryStore.loadSession()\n    UpdatesStore.loadSession()\n    window.addEventListener('beforeunload', this.handleBeforeUnload)\n  },\n\n  componentWillUnmount() {\n    window.removeEventListener('beforeunload', this.handleBeforeUnload)\n  },\n\n  /**\n   * Give stores a chance to persist data to sessionStorage in case this is a\n   * refresh or an external link in the same tab.\n   */\n  handleBeforeUnload() {\n    StoryStore.saveSession()\n    UpdatesStore.saveSession()\n  },\n\n  toggleSettings(e) {\n    e.preventDefault()\n    this.setState({showSettings: !this.state.showSettings})\n  },\n\n  render() {\n    return <div className=\"App\" onClick={this.state.showSettings && this.toggleSettings}>\n      <div className=\"App__wrap\">\n      <div className=\"App__header\">\n        <img src=\"img/logo.png\" width=\"16\" height=\"16\" alt=\"\" />{' '}\n        <Link to=\"/news\" activeClassName=\"active\" className=\"App__homelink\">React HN</Link>{' '}\n        <Link to=\"/newest\" activeClassName=\"active\">new</Link>{' | '}\n        <Link to=\"/newcomments\" activeClassName=\"active\">comments</Link> {' | '}\n        <Link to=\"/show\" activeClassName=\"active\">show</Link>{' | '}\n        <Link to=\"/ask\" activeClassName=\"active\">ask</Link>{' | '}\n        <Link to=\"/jobs\" activeClassName=\"active\">jobs</Link>\n        <a className=\"App__settings\" tabIndex=\"0\" onClick={this.toggleSettings} onKeyPress={this.toggleSettings}>\n          {this.state.showSettings ? 'hide settings' : 'settings'}\n        </a>\n        {this.state.showSettings && <Settings key=\"settings\"/>}\n      </div>\n      <div className=\"App__content\">\n        {this.props.children}\n      </div>\n      <div className=\"App__footer\">\n        {`react-hn v${__VERSION__} | `}\n        <a href=\"https://github.com/insin/react-hn\">insin/react-hn</a>\n      </div>\n      </div>\n    </div>\n  }\n})\n\nmodule.exports = App\n\n\n\n/** WEBPACK FOOTER **\n ** C:/repos/react-hn/src/App.js\n **/","var React = require('react')\n\nvar SettingsStore = require('./stores/SettingsStore')\n\nvar CommentMixin = require('./mixins/CommentMixin')\n\nvar cx = require('./utils/buildClassName')\n\n/**\n * Displays a standalone comment passed as a prop.\n */\nvar DisplayComment = React.createClass({\n  mixins: [CommentMixin],\n\n  propTypes: {\n    comment: React.PropTypes.object.isRequired\n  },\n\n  getInitialState() {\n    return {\n      op: {},\n      parent: {type: 'comment'}\n    }\n  },\n\n  componentWillMount() {\n    this.fetchAncestors(this.props.comment)\n  },\n\n  render() {\n    if (this.props.comment.deleted) { return null }\n    if (this.props.comment.dead && !SettingsStore.showDead) { return null }\n\n    var comment = this.props.comment\n    var className = cx('Comment Comment--level0', {\n      'Comment--dead': comment.dead\n    })\n\n    return <div className={className}>\n      <div className=\"Comment__content\">\n        {this.renderCommentMeta(comment, {\n          link: true,\n          parent: !!this.state.parent.id && !!this.state.op.id && comment.parent !== this.state.op.id,\n          op: !!this.state.op.id\n        })}\n        {this.renderCommentText(comment, {replyLink: false})}\n      </div>\n    </div>\n  }\n})\n\nmodule.exports = DisplayComment\n\n\n\n/** WEBPACK FOOTER **\n ** C:/repos/react-hn/src/DisplayComment.js\n **/","var React = require('react')\n\nvar StoryCommentThreadStore = require('./stores/StoryCommentThreadStore')\n\nvar ItemMixin = require('./mixins/ItemMixin')\nvar ListItemMixin = require('./mixins/ListItemMixin')\n\n/**\n * Display story title and metadata as a list item.\n * The story to display will be passed as a prop.\n */\nvar DisplayListItem = React.createClass({\n  mixins: [ItemMixin, ListItemMixin],\n\n  propTypes: {\n    item: React.PropTypes.object.isRequired\n  },\n\n  componentWillMount() {\n    this.threadState = StoryCommentThreadStore.loadState(this.props.item.id)\n  },\n\n  render() {\n    return this.renderListItem(this.props.item, this.threadState)\n  }\n})\n\nmodule.exports = DisplayListItem\n\n\n\n/** WEBPACK FOOTER **\n ** C:/repos/react-hn/src/DisplayListItem.js\n **/","var React = require('react')\nvar ReactFireMixin = require('reactfire')\nvar TimeAgo = require('react-timeago')\n\nvar HNService = require('./services/HNService')\nvar StoryCommentThreadStore = require('./stores/StoryCommentThreadStore')\nvar ItemStore = require('./stores/ItemStore')\n\nvar Comment = require('./Comment')\nvar PollOption = require('./PollOption')\nvar Spinner = require('./Spinner')\nvar ItemMixin = require('./mixins/ItemMixin')\n\nvar cx = require('./utils/buildClassName')\nvar setTitle = require('./utils/setTitle')\n\nfunction timeUnitsAgo(value, unit, suffix) {\n  if (value === 1) {\n    return unit\n  }\n  return `${value} ${unit}s`\n}\n\nvar Item = React.createClass({\n  mixins: [ItemMixin, ReactFireMixin],\n\n  getInitialState() {\n    return {\n      item: ItemStore.getCachedStory(Number(this.props.params.id)) || {}\n    }\n  },\n\n  componentWillMount() {\n    this.bindAsObject(HNService.itemRef(this.props.params.id), 'item')\n    if (this.state.item.id) {\n      this.threadStore = new StoryCommentThreadStore(this.state.item, this.handleCommentsChanged, {cached: true})\n      setTitle(this.state.item.title)\n    }\n    window.addEventListener('beforeunload', this.handleBeforeUnload)\n  },\n\n  componentWillUnmount() {\n    if (this.threadStore) {\n      this.threadStore.dispose()\n    }\n    window.removeEventListener('beforeunload', this.handleBeforeUnload)\n  },\n\n  componentWillReceiveProps(nextProps) {\n    if (this.props.params.id !== nextProps.params.id) {\n      // Tear it down...\n      this.threadStore.dispose()\n      this.threadStore = null\n      this.unbind('item')\n      // ...and set it up again\n      var item = ItemStore.getCachedStory(Number(nextProps.params.id))\n      if (item) {\n        this.threadStore = new StoryCommentThreadStore(item, this.handleCommentsChanged, {cached: true})\n        setTitle(item.title)\n      }\n      this.bindAsObject(HNService.itemRef(nextProps.params.id), 'item')\n      this.setState({item: item || {}})\n    }\n  },\n\n  componentWillUpdate(nextProps, nextState) {\n    // Update the title when the item has loaded.\n    if (!this.state.item.id && nextState.item.id) {\n      setTitle(nextState.item.title)\n    }\n  },\n\n  componentDidUpdate(prevProps, prevState) {\n    // If the state item id changed, an initial or new item must have loaded\n    if (prevState.item.id !== this.state.item.id) {\n      if (!this.threadStore || this.threadStore.itemId !== this.state.item.id) {\n        this.threadStore = new StoryCommentThreadStore(this.state.item, this.handleCommentsChanged, {cached: false})\n        setTitle(this.state.item.title)\n        this.forceUpdate()\n      }\n    }\n    else if (prevState.item !== this.state.item) {\n      // If the item has been updated from Firebase and the initial set\n      // of comments is still loading, the number of expected comments might\n      // need to be adjusted.\n      // This triggers a check for thread load completion, completing it\n      // immediately if a cached item had 0 kids and the latest version from\n      // Firebase also has 0 kids.\n      if (this.threadStore.loading) {\n        var kids = (this.state.item.kids ? this.state.item.kids.length : 0)\n        var prevKids = (prevState.item.kids ? prevState.item.kids.length : 0)\n        var kidDiff = kids - prevKids\n        if (kidDiff !== 0) {\n          this.threadStore.adjustExpectedComments(kidDiff)\n        }\n      }\n      this.threadStore.itemUpdated(this.state.item)\n    }\n  },\n\n  /**\n   * Ensure the last visit time and comment details get stored for this item if\n   * the user refreshes or otherwise navigates off the page.\n   */\n  handleBeforeUnload() {\n    if (this.threadStore) {\n      this.threadStore.dispose()\n    }\n  },\n\n  handleCommentsChanged(payload) {\n    this.forceUpdate()\n  },\n\n  autoCollapse(e) {\n    e.preventDefault()\n    this.threadStore.collapseThreadsWithoutNewComments()\n  },\n\n  markAsRead(e) {\n    e.preventDefault()\n    this.threadStore.markAsRead()\n    this.forceUpdate()\n  },\n\n  render() {\n    var state = this.state\n    var item = state.item\n    var threadStore = this.threadStore\n    if (!item.id || !threadStore) { return <div className=\"Item Item--loading\"><Spinner size=\"20\"/></div> }\n    return <div className={cx('Item', {'Item--dead': item.dead})}>\n      <div className=\"Item__content\">\n        {this.renderItemTitle(item)}\n        {this.renderItemMeta(item, (threadStore.lastVisit !== null && threadStore.newCommentCount > 0 && <span>{' '}\n          (<em>{threadStore.newCommentCount} new</em> in the last <TimeAgo date={threadStore.lastVisit} formatter={timeUnitsAgo}/>{') | '}\n          <span className=\"control\" tabIndex=\"0\" onClick={this.autoCollapse} onKeyPress={this.autoCollapse} title=\"Collapse threads without new comments\">\n            auto collapse\n          </span>{' | '}\n          <span className=\"control\" tabIndex=\"0\" onClick={this.markAsRead} onKeyPress={this.markAsRead}>\n            mark as read\n          </span>\n        </span>))}\n        {item.text && <div className=\"Item__text\">\n          <div dangerouslySetInnerHTML={{__html: item.text}}/>\n        </div>}\n        {item.type === 'poll' && <div className=\"Item__poll\">\n          {item.parts.map(function(id) {\n            return <PollOption key={id} id={id}/>\n          })}\n        </div>}\n      </div>\n      {item.kids && <div className=\"Item__kids\">\n        {item.kids.map(function(id, index) {\n          return <Comment key={id} id={id} level={0}\n            loadingSpinner={index === 0}\n            threadStore={threadStore}\n          />\n        })}\n      </div>}\n    </div>\n  }\n})\n\nmodule.exports = Item\n\n\n\n/** WEBPACK FOOTER **\n ** C:/repos/react-hn/src/Item.js\n **/","var React = require('react')\n\nvar NotFound = React.createClass({\n  render() {\n    return <h2>Not found</h2>\n  }\n})\n\nmodule.exports = NotFound\n\n\n\n/** WEBPACK FOOTER **\n ** C:/repos/react-hn/src/NotFound.js\n **/","var React = require('react')\nvar ReactFireMixin = require('reactfire')\n\nvar CommentThreadStore = require('./stores/CommentThreadStore')\nvar HNService = require('./services/HNService')\nvar SettingsStore = require('./stores/SettingsStore')\nvar UpdatesStore = require('./stores/UpdatesStore')\n\nvar Comment = require('./Comment')\nvar CommentMixin = require('./mixins/CommentMixin')\n\nvar cx = require('./utils/buildClassName')\nvar setTitle = require('./utils/setTitle')\n\nvar PermalinkedComment = React.createClass({\n  mixins: [CommentMixin, ReactFireMixin],\n\n  getDefaultProps() {\n    return {\n      level: 0,\n      loadingSpinner: true\n    }\n  },\n\n  getInitialState() {\n    return {\n      comment: UpdatesStore.getComment(this.props.params.id) || {},\n      parent: {type: 'comment'},\n      op: {}\n    }\n  },\n\n  componentWillMount() {\n    this.bindAsObject(HNService.itemRef(this.props.params.id), 'comment')\n    if (this.state.comment.id) {\n      this.commentLoaded(this.state.comment)\n    }\n  },\n\n  componentWillReceiveProps(nextProps) {\n    if (nextProps.params.id !== this.props.params.id) {\n      var comment = UpdatesStore.getComment(nextProps.params.id)\n      if (comment) {\n        this.commentLoaded(comment)\n        this.setState({comment: comment})\n      }\n      this.unbind('comment')\n      this.bindAsObject(HNService.itemRef(nextProps.params.id), 'comment')\n    }\n  },\n\n  componentWillUpdate(nextProps, nextState) {\n    if (!nextState.comment) {\n      return\n    }\n\n    if (this.state.comment.id !== nextState.comment.id) {\n      if (!nextState.comment.deleted) {\n        // Redirect to the appropriate route if a Comment \"parent\" link had a\n        // non-comment item id.\n        if (nextState.comment.type !== 'comment') {\n          this.context.router.replaceWith(nextState.comment.type, {id: nextState.comment.id})\n          return\n        }\n      }\n      if (!this.threadStore || this.threadStore.itemId !== nextState.comment.id) {\n        this.commentLoaded(nextState.comment)\n      }\n    }\n  },\n\n  commentLoaded(comment) {\n    this.setTitle(comment)\n    if (!comment.deleted) {\n      this.threadStore = new CommentThreadStore(comment, this.handleCommentsChanged)\n      this.fetchAncestors(comment)\n    }\n  },\n\n  setTitle(comment) {\n    if (comment.deleted) {\n      return setTitle('Deleted comment')\n    }\n    var title = 'Comment by ' + comment.by\n    if (this.state.op.id) {\n      title += ' | ' + this.state.op.title\n    }\n    setTitle(title)\n  },\n\n  handleCommentsChanged(payload) {\n    // We're only interested in re-rendering to update collapsed display\n    if (payload.type === 'collapse') {\n      this.forceUpdate()\n    }\n  },\n\n  render() {\n    var comment = this.state.comment\n    if (!comment) {\n      return this.renderError(comment, {\n        id: this.props.params.id,\n        className: 'Comment Comment--level0 Comment--error'\n      })\n    }\n    // Render a placeholder while we're waiting for the comment to load\n    if (!comment.id) { return this.renderCommentLoading(comment) }\n    // Render a link to HN for deleted comments\n    if (comment.deleted) {\n      return this.renderCommentDeleted(comment, {\n        className: 'Comment Comment--level0 Comment--deleted'\n      })\n    }\n    // XXX Don't render anything if we're replacing the route after loading a non-comment\n    if (comment.type !== 'comment') { return null }\n\n    var className = cx('PermalinkedComment Comment Comment--level0', {'Comment--dead': comment.dead})\n    var threadStore = this.threadStore\n\n    return <div className={className}>\n      <div className=\"Comment__content\">\n        {this.renderCommentMeta(comment, {\n          parent: !!this.state.parent.id && !!this.state.op.id && comment.parent !== this.state.op.id,\n          op: !!this.state.op.id\n        })}\n        {(!comment.dead || SettingsStore.showDead) && this.renderCommentText(comment, {replyLink: true})}\n      </div>\n      {comment.kids && <div className=\"Comment__kids\">\n        {comment.kids.map(function(id, index) {\n          return <Comment key={id} id={id}\n            level={0}\n            loadingSpinner={index === 0}\n            threadStore={threadStore}\n          />\n        })}\n      </div>}\n    </div>\n  }\n})\n\nmodule.exports = PermalinkedComment\n\n\n\n/** WEBPACK FOOTER **\n ** C:/repos/react-hn/src/PermalinkedComment.js\n **/","var React = require('react')\nvar ReactFireMixin = require('reactfire')\n\nvar HNService = require('./services/HNService')\n\nvar Spinner = require('./Spinner')\n\nvar pluralise = require('./utils/pluralise')\n\nvar PollOption = React.createClass({\n  mixins: [ReactFireMixin],\n\n  getInitialState() {\n    return {pollopt: {}}\n  },\n\n  componentWillMount() {\n    this.bindAsObject(HNService.itemRef(this.props.id), 'pollopt')\n  },\n\n  render() {\n    var pollopt = this.state.pollopt\n    if (!pollopt.id) { return <div className=\"PollOption PollOption--loading\"><Spinner size=\"20\"/></div> }\n    return <div className=\"PollOption\">\n      <div className=\"PollOption__text\">\n        {pollopt.text}\n      </div>\n      <div className=\"PollOption__score\">\n        {pollopt.score} point{pluralise(pollopt.score)}\n      </div>\n    </div>\n  }\n})\n\nmodule.exports = PollOption\n\n\n\n/** WEBPACK FOOTER **\n ** C:/repos/react-hn/src/PollOption.js\n **/","var React = require('react')\n\nvar SettingsStore = require('./stores/SettingsStore')\n\nvar Settings = React.createClass({\n  componentDidMount() {\n    this.refs.container.focus()\n  },\n\n  onChange(e) {\n    var el = e.target\n    if (el.type === 'checkbox') {\n      SettingsStore[el.name] = el.checked\n    }\n    else if (el.type === 'number' && el.value) {\n      SettingsStore[el.name] = el.value\n    }\n    this.forceUpdate()\n    SettingsStore.save()\n  },\n\n  onClick(e) {\n    e.stopPropagation()\n  },\n\n  render() {\n    return <div ref=\"container\" className=\"Settings\" tabIndex=\"-1\" onClick={this.onClick}>\n      <form onChange={this.onChange}>\n        <div className=\"Settings__setting Settings__setting--checkbox\">\n          <label htmlFor=\"autoCollapse\">\n            <input type=\"checkbox\" name=\"autoCollapse\" id=\"autoCollapse\" checked={SettingsStore.autoCollapse}/> auto collapse\n          </label>\n          <p>Automatically collapse comment threads without new comments on page load.</p>\n        </div>\n        <div className=\"Settings__setting Settings__setting--checkbox\">\n          <label htmlFor=\"replyLinks\">\n            <input type=\"checkbox\" name=\"replyLinks\" id=\"replyLinks\" checked={SettingsStore.replyLinks}/> show reply links\n          </label>\n          <p>Show \"reply\" links to Hacker News</p>\n        </div>\n        <div className=\"Settings__setting Settings__setting--checkbox\">\n          <label htmlFor=\"showDead\">\n            <input type=\"checkbox\" name=\"showDead\" id=\"showDead\" checked={SettingsStore.showDead}/> show dead\n          </label>\n          <p>Show items flagged as dead.</p>\n        </div>\n        <div className=\"Settings__setting Settings__setting--checkbox\">\n          <label htmlFor=\"showDeleted\">\n            <input type=\"checkbox\" name=\"showDeleted\" id=\"showDeleted\" checked={SettingsStore.showDeleted}/> show deleted\n          </label>\n          <p>Show comments flagged as deleted in threads.</p>\n        </div>\n        <div className=\"Settings__setting\">\n          <table>\n            <tbody>\n              <tr>\n                <td><label htmlFor=\"titleFontSize\">title font size:</label></td>\n                <td><input type=\"number\" min=\"13.333\" step=\"1\" name=\"titleFontSize\" id=\"titleFontSize\" value={SettingsStore.titleFontSize}/></td>\n              </tr>\n              <tr>\n                <td><label htmlFor=\"listSpacing\">list spacing:</label></td>\n                <td><input type=\"number\" min=\"0\" name=\"listSpacing\" id=\"listSpacing\" value={SettingsStore.listSpacing}/></td>\n              </tr>\n            </tbody>\n          </table>\n        </div>\n      </form>\n    </div>\n  }\n})\n\nmodule.exports = Settings\n\n\n\n/** WEBPACK FOOTER **\n ** C:/repos/react-hn/src/Settings.js\n **/","var React = require('react')\n\nvar StoryStore = require('./stores/StoryStore')\n\nvar PageNumberMixin = require('./mixins/PageNumberMixin')\nvar Paginator = require('./Paginator')\nvar Spinner = require('./Spinner')\nvar StoryListItem = require('./StoryListItem')\nvar SettingsStore = require('./stores/SettingsStore')\n\nvar {ITEMS_PER_PAGE} = require('./utils/constants')\nvar pageCalc = require('./utils/pageCalc')\nvar setTitle = require('./utils/setTitle')\n\nvar Stories = React.createClass({\n  mixins: [PageNumberMixin],\n\n  propTypes: {\n    // The number of stories which may be paginated through\n    limit: React.PropTypes.number.isRequired,\n    // The route name being used\n    route: React.PropTypes.string.isRequired,\n    // The type of stories to be displayed\n    type: React.PropTypes.string.isRequired,\n\n    // Page title associated with the stories being displayed\n    title: React.PropTypes.string\n  },\n\n  getInitialState() {\n    return {\n      ids: [],\n      limit: this.props.limit,\n      stories: []\n    }\n  },\n\n  componentWillMount() {\n    setTitle(this.props.title)\n    this.store = new StoryStore(this.props.type)\n    this.store.addListener('update', this.handleUpdate)\n    this.store.start()\n    this.setState(this.store.getState())\n  },\n\n  componentWillUnmount() {\n    this.store.removeListener('update', this.handleUpdate)\n    this.store.stop()\n    this.store = null\n  },\n\n  handleUpdate(update) {\n    if (!this.isMounted()) {\n      if (process.env.NODE_ENV !== 'production') {\n        console.warn(\n          `Skipping update as the ${this.props.type} Stories component is no longer mounted.`\n        )\n      }\n      return\n    }\n    update.limit = update.ids.length\n    this.setState(update)\n  },\n\n  render() {\n    var page = pageCalc(this.getPageNumber(), ITEMS_PER_PAGE, this.state.limit)\n\n    // Display a list of placeholder items while we're waiting for the initial\n    // list of story ids to load from Firebase.\n    if (this.state.stories.length === 0 && this.state.ids.length === 0) {\n      var dummyItems = []\n      for (var i = page.startIndex; i < page.endIndex; i++) {\n        dummyItems.push(\n          <li key={i} className=\"ListItem ListItem--loading\" style={{marginBottom: SettingsStore.listSpacing}}>\n            <Spinner/>\n          </li>\n        )\n      }\n      return <div className=\"Items Items--loading\">\n        <ol className=\"Items__list\" start={page.startIndex + 1}>{dummyItems}</ol>\n        <Paginator route={this.props.route} page={page.pageNum} hasNext={page.hasNext}/>\n      </div>\n    }\n\n    return <div className=\"Items\">\n      <ol className=\"Items__list\" start={page.startIndex + 1}>\n        {this.renderItems(page.startIndex, page.endIndex)}\n      </ol>\n      <Paginator route={this.props.route} page={page.pageNum} hasNext={page.hasNext}/>\n    </div>\n  },\n\n  renderItems(startIndex, endIndex) {\n    var rendered = []\n    for (var i = startIndex; i < endIndex; i++) {\n      var item = this.state.stories[i]\n      var id = this.state.ids[i]\n      if (id) {\n        rendered.push(<StoryListItem key={id} id={id} index={i} cachedItem={item} store={this.store}/>)\n      }\n      else {\n        rendered.push(<StoryListItem cachedItem={item} store={this.store}/>)\n      }\n    }\n    return rendered\n  }\n})\n\nmodule.exports = Stories\n\n\n\n/** WEBPACK FOOTER **\n ** C:/repos/react-hn/src/Stories.js\n **/","var React = require('react')\nvar ReactFireMixin = require('reactfire')\n\nvar StoryCommentThreadStore = require('./stores/StoryCommentThreadStore')\nvar HNService = require('./services/HNService')\nvar SettingsStore = require('./stores/SettingsStore')\nvar StoryStore = require('./stores/StoryStore')\n\nvar ItemMixin = require('./mixins/ItemMixin')\nvar ListItemMixin = require('./mixins/ListItemMixin')\nvar Spinner = require('./Spinner')\n\n/**\n * Display story title and metadata as as a list item.\n * Cached story data may be given as a prop, but this component is also\n * responsible for listening to updates to the story and providing the latest\n * version for StoryStore's cache.\n */\nvar StoryListItem = React.createClass({\n  mixins: [ItemMixin, ListItemMixin, ReactFireMixin],\n\n  propTypes: {\n    // The StoryStore handling caching and updates to the stories being displayed\n    store: React.PropTypes.instanceOf(StoryStore).isRequired,\n\n    // The story's id in Hacker News\n    id: React.PropTypes.number,\n    // A version of the story from the cache, for initial display\n    cachedItem: React.PropTypes.object,\n    // The current index of the story in the list being displayed\n    index: React.PropTypes.number\n  },\n\n  getDefaultProps() {\n    return {\n      id: null,\n      cachedItem: null,\n      index: null\n    }\n  },\n\n  getInitialState() {\n    return {\n      item: this.props.cachedItem || {}\n    }\n  },\n\n  componentWillMount() {\n    if (this.props.id != null) {\n      this.initLiveItem(this.props)\n    }\n    else if (this.props.cachedItem != null) {\n      // Display the comment state of the cached item we were given while we're\n      // waiting for the live item to load.\n      this.threadState = StoryCommentThreadStore.loadState(this.state.item.id)\n    }\n  },\n\n  componentWillUnmount() {\n    if (this.props.id != null) {\n      this.props.store.removeListener(this.props.id, this.updateThreadState)\n    }\n  },\n\n  /**\n   * Catch the transition from not having an id prop to having one.\n   * Scenario: we were waiting for the initial list of story ids to load.\n   */\n  componentWillReceiveProps(nextProps) {\n    if (this.props.id == null && nextProps.id != null) {\n      this.initLiveItem(nextProps)\n    }\n  },\n\n  /**\n   * If the live item has been loaded or updated, update the StoryStore cache\n   * with its current index and latest data.\n   */\n  componentWillUpdate(nextProps, nextState) {\n    if (this.state.item !== nextState.item) {\n      if (nextState.item != null) {\n        this.props.store.itemUpdated(nextState.item, this.props.index)\n      }\n      else {\n        if (process.env.NODE_ENV !== 'production') {\n          console.warn(`Item ${this.props.id} went from ${JSON.stringify(this.state.item)} to ${nextProps.item}`)\n        }\n      }\n    }\n  },\n\n  /**\n   * Initialise listening to updates for the item with the given id and\n   * initialise its comment thread state.\n   */\n  initLiveItem(props) {\n    // If we were given a cached item to display initially, it will be replaced\n    this.bindAsObject(HNService.itemRef(props.id), 'item')\n    this.threadState = StoryCommentThreadStore.loadState(props.id)\n    this.props.store.addListener(props.id, this.updateThreadState)\n  },\n\n  /**\n   * Update thread state in response to a storage event indicating it has been\n   * modified.\n   */\n  updateThreadState() {\n    this.threadState = StoryCommentThreadStore.loadState(this.props.id)\n    this.forceUpdate()\n  },\n\n  render() {\n    // Display the loading spinner if we have nothing to show initially\n    if (!this.state.item || !this.state.item.id) {\n      return <li className=\"ListItem ListItem--loading\" style={{marginBottom: SettingsStore.listSpacing}}>\n        <Spinner/>\n      </li>\n    }\n\n    return this.renderListItem(this.state.item, this.threadState)\n  }\n})\n\nmodule.exports = StoryListItem\n\n\n\n/** WEBPACK FOOTER **\n ** C:/repos/react-hn/src/StoryListItem.js\n **/","var React = require('react')\n\nvar SettingsStore = require('./stores/SettingsStore')\nvar UpdatesStore = require('./stores/UpdatesStore')\n\nvar DisplayListItem = require('./DisplayListItem')\nvar DisplayComment = require('./DisplayComment')\nvar Paginator = require('./Paginator')\nvar Spinner = require('./Spinner')\n\nvar PageNumberMixin = require('./mixins/PageNumberMixin')\n\nvar {ITEMS_PER_PAGE} = require('./utils/constants')\nvar pageCalc = require('./utils/pageCalc')\nvar setTitle = require('./utils/setTitle')\n\nfunction filterDead(item) {\n  return !item.dead\n}\n\nfunction filterUpdates(updates) {\n  if (!SettingsStore.showDead) {\n    return {\n      comments: updates.comments.filter(filterDead),\n      stories: updates.stories.filter(filterDead)\n    }\n  }\n  return updates\n}\n\nvar Updates = React.createClass({\n  mixins: [PageNumberMixin],\n\n  getInitialState() {\n    return filterUpdates(UpdatesStore.getUpdates())\n  },\n\n  componentWillMount() {\n    this.setTitle(this.props.type)\n    UpdatesStore.start()\n    UpdatesStore.on('updates', this.handleUpdates)\n  },\n\n  componentWillUnmount() {\n    UpdatesStore.off('updates', this.handleUpdates)\n    UpdatesStore.stop()\n  },\n\n  componentWillReceiveProps(nextProps) {\n    if (this.props.type !== nextProps.type) {\n      this.setTitle(nextProps.type)\n    }\n  },\n\n  setTitle(type) {\n    setTitle('New ' + (type === 'comments' ? 'Comments' : 'Links'))\n  },\n\n  handleUpdates(updates) {\n    if (!this.isMounted()) {\n      if (process.env.NODE_ENV !== 'production') {\n        console.warn('Skipping update of ' + this.props.type + ' as the Updates component is not mounted')\n      }\n      return\n    }\n    this.setState(filterUpdates(updates))\n  },\n\n  render() {\n    var items = (this.props.type === 'comments' ? this.state.comments : this.state.stories)\n    if (items.length === 0) {\n      return <div className=\"Updates Updates--loading\"><Spinner size=\"20\"/></div>\n    }\n\n    var page = pageCalc(this.getPageNumber(), ITEMS_PER_PAGE, items.length)\n\n    if (this.props.type === 'comments') {\n      return <div className=\"Updates Comments\">\n        {items.slice(page.startIndex, page.endIndex).map(function(comment) {\n          return <DisplayComment key={comment.id} id={comment.id} comment={comment}/>\n        })}\n        <Paginator route=\"newcomments\" page={page.pageNum} hasNext={page.hasNext}/>\n      </div>\n    }\n    else {\n      return <div className=\"Updates Items\">\n        <ol className=\"Items__list\" start={page.startIndex + 1}>\n          {items.slice(page.startIndex, page.endIndex).map(function(item) {\n            return <DisplayListItem key={item.id} item={item}/>\n          })}\n        </ol>\n        <Paginator route=\"newest\" page={page.pageNum} hasNext={page.hasNext}/>\n      </div>\n    }\n  }\n})\n\nmodule.exports = Updates\n\n\n\n/** WEBPACK FOOTER **\n ** C:/repos/react-hn/src/Updates.js\n **/","var React = require('react')\nvar ReactFireMixin = require('reactfire')\nvar TimeAgo = require('react-timeago')\n\nvar HNService = require('./services/HNService')\n\nvar Spinner = require('./Spinner')\n\nvar setTitle = require('./utils/setTitle')\n\n// TODO User submissions\n\n// TODO User comments\n\nvar UserProfile = React.createClass({\n  mixins: [ReactFireMixin],\n  getInitialState() {\n    return {user: {}}\n  },\n\n  componentWillMount() {\n    this.bindAsObject(HNService.userRef(this.props.params.id), 'user')\n  },\n\n  componentWillUpdate(nextProps, nextState) {\n    if (this.state.user.id !== nextState.user.id) {\n      setTitle('Profile: ' + nextState.user.id)\n    }\n  },\n\n  componentWillReceiveProps(nextProps) {\n    if (this.props.params.id !== nextProps.params.id) {\n      this.unbind('user')\n      this.bindAsObject(HNService.userRef(nextProps.params.id), 'user')\n    }\n  },\n\n  render() {\n    var user = this.state.user\n    if (!user.id) {\n      return <div className=\"UserProfile UserProfile--loading\">\n        <h4>{this.props.params.id}</h4>\n        <Spinner size=\"20\"/>\n      </div>\n    }\n    var createdDate = new Date(user.created * 1000)\n    return <div className=\"UserProfile\">\n      <h4>{user.id}</h4>\n      <dl>\n        <dt>Created</dt>\n        <dd><TimeAgo date={createdDate}/> ({createdDate.toDateString()})</dd>\n        <dt>Karma</dt>\n        <dd>{user.karma}</dd>\n        <dt>Delay</dt>\n        <dd>{user.delay}</dd>\n        {user.about && <dt>About</dt>}\n        {user.about && <dd><div className=\"UserProfile__about\" dangerouslySetInnerHTML={{__html: user.about}}/></dd>}\n      </dl>\n    </div>\n  }\n})\n\nmodule.exports = UserProfile\n\n\n\n/** WEBPACK FOOTER **\n ** C:/repos/react-hn/src/UserProfile.js\n **/","var IndexRoute = require('react-router/lib/IndexRoute')\nvar React = require('react')\nvar Route = require('react-router/lib/Route')\n\nvar App = require('./App')\nvar Item = require('./Item')\nvar NotFound = require('./NotFound')\nvar PermalinkedComment = require('./PermalinkedComment')\nvar Stories = require('./Stories')\nvar Updates = require('./Updates')\nvar UserProfile = require('./UserProfile')\n\nfunction stories(route, type, limit, title) {\n  return React.createClass({\n    render() {\n      return <Stories {...this.props} key={route} route={route} type={type} limit={limit} title={title}/>\n    }\n  })\n}\n\nfunction updates(type) {\n  return React.createClass({\n    render() {\n      return <Updates {...this.props} key={type} type={type}/>\n    }\n  })\n}\n\nvar Ask = stories('ask', 'askstories', 200, 'Ask')\nvar Comments = updates('comments')\nvar Jobs = stories('jobs', 'jobstories', 200, 'Jobs')\nvar New = stories('newest', 'newstories', 500, 'New Links')\nvar Show = stories('show', 'showstories', 200, 'Show')\nvar Top = stories('news', 'topstories', 500)\n\nmodule.exports = <Route path=\"/\" component={App}>\n  <IndexRoute component={Top}/>\n  <Route path=\"news\" component={Top}/>\n  <Route path=\"newest\" component={New}/>\n  <Route path=\"show\" component={Show}/>\n  <Route path=\"ask\" component={Ask}/>\n  <Route path=\"jobs\" component={Jobs}/>\n  <Route path=\"item/:id\" component={Item}/>\n  <Route path=\"job/:id\" component={Item}/>\n  <Route path=\"poll/:id\" component={Item}/>\n  <Route path=\"story/:id\" component={Item}/>\n  <Route path=\"comment/:id\" component={PermalinkedComment}/>\n  <Route path=\"newcomments\" component={Comments}/>\n  <Route path=\"user/:id\" component={UserProfile}/>\n  <Route path=\"*\" component={NotFound}/>\n</Route>\n\n\n\n/** WEBPACK FOOTER **\n ** C:/repos/react-hn/src/routes.js\n **/","/**\n * Based on the implementation of _.debounce() from Underscore.js 1.7.0\n * http://underscorejs.org\n * (c) 2009-2014 Jeremy Ashkenas, DocumentCloud and Investigative Reporters & Editors\n * Distributed under the MIT license.\n *\n * Returns a function, that, as long as it continues to be invoked, will not\n * be triggered. The function will be called after it stops being called for\n * N milliseconds. If `immediate` is passed, trigger the function on the\n * leading edge, instead of the trailing.\n *\n * The returned function has a .cancel() function which can be used to prevent\n * the debounced functiom being called.\n */\nfunction cancellableDebounce(func, wait, immediate) {\n  var timeout, args, context, timestamp, result\n\n  var later = function() {\n    var last = Date.now() - timestamp\n    if (last < wait && last > 0) {\n      timeout = setTimeout(later, wait - last)\n    }\n    else {\n      timeout = null\n      if (!immediate) {\n        result = func.apply(context, args)\n        if (!timeout) {\n          context = args = null\n        }\n      }\n    }\n  }\n\n  var debounced = function() {\n    context = this\n    args = arguments\n    timestamp = Date.now()\n    var callNow = immediate && !timeout\n    if (!timeout) {\n      timeout = setTimeout(later, wait)\n    }\n    if (callNow) {\n      result = func.apply(context, args)\n      context = args = null\n    }\n    return result\n  }\n\n  debounced.cancel = function() {\n    if (timeout) {\n      clearTimeout(timeout)\n    }\n  }\n\n  return debounced\n}\n\nmodule.exports = cancellableDebounce\n\n\n\n/** WEBPACK FOOTER **\n ** C:/repos/react-hn/src/utils/cancellableDebounce.js\n **/"],"sourceRoot":""}